[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Yaşam Bilimlerinde Veri Analizi",
    "section": "",
    "text": "Önsöz\nMerhabalar! Mersin Üniversitesi Biyoteknoloji bölümü 2022 - 2023 Bahar döneminde verdiğim Veri Analizi ve İstatistiksel Öğrenme isimli dersler ile ilgili en güncel bilgileri bu sayfa üzerinden paylaşacağım.\nBu internet sitesi aslında 2020 - 2022 yılında verilen dersler süresince oluşturulan kaynakları temel almaktadır.\nEski siteye buradan ulaşabilirsiniz\nDersler sürekli güncellenmektedir. Dolayısıyla dönemin sonuna doğru eski site kullanımdan kaldırılacaktır ancak şu an için dersin internet sitesini sürekli takip etmeniz iyi olacaktır.",
    "crumbs": [
      "Önsöz"
    ]
  },
  {
    "objectID": "index.html#dersin-işlenme-şekli",
    "href": "index.html#dersin-işlenme-şekli",
    "title": "Yaşam Bilimlerinde Veri Analizi",
    "section": "Dersin işlenme şekli",
    "text": "Dersin işlenme şekli\nDersimiz, ikinci bir duyuruya kadar çevrimiçi olarak işlenecektir. Çevrimiçi dersler, Microsoft Teams platformu üzerinden verilecektir. Mersin Üniversitesi öğrencileri, öğrenci e-posta adresleri ile, Teams platformuna girerek derslere ulaşabilirlirler.\nDers videoları da yine Teams platformu üzerinden tekrar izlenmeye açık olacaktır.\nBiyoteknoloji Bölümü Discord sunucusu ise temel haberleşme noktamız olacaktır. Derslerle ilgili bütün soruları sunucuda cevaplayacağım. Dolayısıyla platforma üye olmanız tavsiye edilir.",
    "crumbs": [
      "Önsöz"
    ]
  },
  {
    "objectID": "index.html#katkıda-bulunan-yazarlar",
    "href": "index.html#katkıda-bulunan-yazarlar",
    "title": "Yaşam Bilimlerinde Veri Analizi",
    "section": "Katkıda bulunan yazarlar",
    "text": "Katkıda bulunan yazarlar\nBu ders aynı zamanda öğrencilerden gelen katkılara açıktır. Şu ana kadar katkıda bulunan yazarlar aşağıda alfabetik olarak sıralanmıştır:\n\nAnıl Yalçıner\nCemil Bayraktar\nFurkan Kürşat Özer\nMerve Akküp\nNursena Kocatürk\nTanya Beril Korkmaz\n\nEğer siz de katkı sunmak isterseniz, bir sonraki kısmında yazılanları inceleyebilirsiniz.",
    "crumbs": [
      "Önsöz"
    ]
  },
  {
    "objectID": "index.html#bu-siteyi-nasıl-takip-etmeniz-gerek",
    "href": "index.html#bu-siteyi-nasıl-takip-etmeniz-gerek",
    "title": "Yaşam Bilimlerinde Veri Analizi",
    "section": "Bu siteyi nasıl takip etmeniz gerek?",
    "text": "Bu siteyi nasıl takip etmeniz gerek?\nKitap kapsamında altı farklı bölüm olması planlanmıştır:\nEğer bu dersi ilk defa alıyorsanız ilk olarak Derse Hazırlık kısmını inceleyerek kullanılacak sistemlerin kurulumu hakkında bilgi alabilirsiniz. Derslere başlamadan önce bu kısmı bitirmiş olduğunuzdan emin olun. Yoksa ilerleyen adımlarda sorunlarla karşılaşabilirsiniz.\n1  R ve RStudio R ve Rstüdyo programlarının kurulumu hakkında bilgileri içermektedir. Ardından 2  Önemli Konular ise, R ve RStudio ile çalışırken dikkat edilmesi gereken noktaları içermektedir. Burada yazan küçük ayıntılara dikkat ederseniz, gereksiz bir şekilde yaşayacağınız vakit kaybının önüne geçebilirsiniz. 3  İlk adımlar, R ve Rstudio programları ile çalışmaya başlamanız için gerekli bilgileri anlatmaktdır. 4  Klasör İşlemleri’de, kullandığınız işletim sistemindeki klasör organizasyonu hakkında fikir alabilirsiniz.\nVeri analizi kısmında genel olarak R ve Rstüdyo programlarının kullanımı, ggplot2 paketi ile görselleşirme, temel istatistik testler (t-testi), ve doğrusal modeller işlenecektir. 5  Neden Veri Analizi?, veri analizine giriş hakkında bilgi alabilirsiniz. 6  Bilimsel Yöntem ise, bilimsel yöntem hakkında bilgi vermeyi amaçlamıştır. Ardından 7  R ve Rstudio ile çalışma ve 8  Vektörler’de ise R ve Rstudio kullanmaya başlayacağız.\nBilgisayarlı düşünme kısmında ise R ile programlama, ileri seviye görselleştirme ve veri analiz yöntemleri, ileri seviye doğrusal modeller işlenecektir.\nPratik kısmında, bu iki derse ait pratikler olacaktır. Aynı zamanda bu pratiklerin çözümleri de Ekler kısmında verilecektir.\nUygulamalar kısmında tüm ders kapsamında işlenen konuların biyolojik veriler üzerinden uygulaması yapılacaktır. Şu an için RNA dizileme ve mikrodizin verisi analizi üzerine pratikler bulunmaktadır.\nSon olarak, Türkiye’nin verisi kısmında ise Türkiye sınırları içerisinde elde edilmiş açık kaynaklı veriler hakkında uygulamalar yapılacaktır.",
    "crumbs": [
      "Önsöz"
    ]
  },
  {
    "objectID": "index.html#önemli-noktalar",
    "href": "index.html#önemli-noktalar",
    "title": "Yaşam Bilimlerinde Veri Analizi",
    "section": "Önemli noktalar",
    "text": "Önemli noktalar\nBir çok yerde dikkat etmeniz gereken özel noktalar size belirtilecektir.\n\n\n\n\n\n\nNot\n\n\n\nEğer böyle bir uyarıya denk gelirseniz bunu not etmeniz sizin için faydalı olabilir.\n\n\n\n\n\n\n\n\nİpucu\n\n\n\nR üzerinde bir işi yapmanın birden fazla yolu bulunmaktadır. Eğer böyle bir uyarıya denk gelirseniz alternatif bir yol izleyebilirsiniz.\n\n\n\n\n\n\n\n\nÖnemli\n\n\n\nBurada yazan bilgiler o işin gerçekleştirilmesi için önem arz etmektedir.\n\n\n\n\n\n\n\n\nDikkat!\n\n\n\nEğer bu kutududaki bilgilere dikkat etmezseniz bir hatayla karşılaşma ihtimaliniz oldukça yüksektir.",
    "crumbs": [
      "Önsöz"
    ]
  },
  {
    "objectID": "CONTRIBUTING.html",
    "href": "CONTRIBUTING.html",
    "title": "Katkı Sunma",
    "section": "",
    "text": "Hangi konularda katkı sağlayabilirim?\nİki temel konu üzerinde katkı sağlayabilirsiniz:\nŞu anda benim odağım dersleri hazırlayıp eklemek. Bu yüzden derslerde bulunabilecek imla hatalarını düzeltmeye fazla vakit ayıramıyorum. Bu noktaların belirtilmesi güzel bir katkı olur şu an için.\nBunun dışında ders materyal hazırlama ekibi olarak da katkıda bulunabilirsiniz. Bazı dersleri kaynak olmadan doğaçlama bir şekilde anlattığım da oluyor. Bu durumda anlattığım dersin materyalini hazırlama görevi üstlenebilirsiniz.",
    "crumbs": [
      "Katkı Sunma"
    ]
  },
  {
    "objectID": "CONTRIBUTING.html#nasıl-katkı-sağlarım",
    "href": "CONTRIBUTING.html#nasıl-katkı-sağlarım",
    "title": "Katkı Sunma",
    "section": "Nasıl katkı sağlarım?",
    "text": "Nasıl katkı sağlarım?\nEn basit şekilde katkı sağlamak isterseniz derslerde görüğünüz hataları Issues kısmında belirtebilirsiniz. İş yoğunluğuma bağlı olarak en kısa zamanda sorunları çözmeye çalışacağım.\nEğer daha aktif bir şekilde katılım sağlamak isterseniz bu depoyu çatallayabilir (fork) ve yapacağınız katkıları birleştirme isteği (pull request) göndererek benimle paylaşabilirsiniz. Bu noktada bilmeniz gereken bir kaç nokta var:\nBu depoda iki tane dal bulunmaktadır:\n\nmain: Derslerin kaynak kodlarının bulunduğu dal. Bu dal üzerindeki metinler, Rmd, md, veya qmd formatlarında hazırlanmıştır. Bu dosyaları R üzerinde düzenleyerek katkıda bulunabilirsiniz.\ngh-pages: İnternet sitesinini oluşturan markdown ve derslerin derlenmiş html dosyalarının bulunduğu dal.\n\nDersler ile ilgili doğrudan katkılarınızı (genel olarak Rmd dökümanları ekleme ya da varolan dökümanları değiştirme) main dalında gerçekleştiriniz. Bu dökümanları daha sonra otomatik olarak html formatına dönüştürülerek, gh-pages dalına aktarılacaktır.\nDersime gösterdiğiniz ilgi için teşekkürler!",
    "crumbs": [
      "Katkı Sunma"
    ]
  },
  {
    "objectID": "01-kurulum/01-r-rstudio-kurulum.html",
    "href": "01-kurulum/01-r-rstudio-kurulum.html",
    "title": "1  R ve RStudio",
    "section": "",
    "text": "1.1 Posit Cloud\nEğer bu yolu tercih ederseniz, sadece interenete bağlanabilen bir bilgisayar rahatlıkla işinizi görecektir. İlk başta bu yöntemi tercih edebilirsiniz ancak bu sistem size kısıtlı bir ücretsiz kullanım hakkı vermektedir. Posit cloud platformunda bir hesap açarsanız, ayda 25 işlem saati boyunca RStudio üzerinde çalışma hakkınız bulunmaktadır. Aylık 25 işlemci saatini aşarsanız ya ücret ödemeniz gerekir ya da bir sonraki ayı beklemeniz gerekmektedir.",
    "crumbs": [
      "Derse Hazırlık",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>R ve RStudio</span>"
    ]
  },
  {
    "objectID": "01-kurulum/01-r-rstudio-kurulum.html#posit-cloud",
    "href": "01-kurulum/01-r-rstudio-kurulum.html#posit-cloud",
    "title": "1  R ve RStudio",
    "section": "",
    "text": "İşlemci saati\n\n\n\nBu terim, bir ay boyunca size tanınan işlemciyi kullanarak yapılan hesaplama hakkını ya da toplam kod çalıştırma hakkınızı belirtir. Eğer hesaplama yapmıyorsanız, bu işlemci saatlerinizi kullanmazsınız.\n\n\n\n1.1.1 Posit Cloud sistemine giriş\nİlk olarak Posit cloud sitesine gidelim ve Sign Up tuşuna tıklayarak yeni bir hesap açalım. Eğer hesabımız var ise, Login tuşuna basarak hesabımıza giriş yapalım (Şekil 1.1).\n\n\n\n\n\n\nŞekil 1.1: Posit Cloud sitesi üzerinden yeni bir hesap açalım\n\n\n\nArından, New Project tuşuna basalım ve New RStudio Project tuşuna basarak yeni bir R projesi oluşturalım (Şekil 1.2).\n\n\n\n\n\n\nŞekil 1.2: Yeni bir proje oluşturalım\n\n\n\nEğer her şey yolunda gittiyse, yeni bir R proje ekranı ile karşılaşmamız gerekir (Şekil 1.3).\n\n\n\n\n\n\nŞekil 1.3: Projemizi oluşturduktan sonra karşımıza çıkan ekran\n\n\n\nTebrikler, Posit Cloud sistemi ile R ve RStudio kullanmaya hazırsınız artık!",
    "crumbs": [
      "Derse Hazırlık",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>R ve RStudio</span>"
    ]
  },
  {
    "objectID": "01-kurulum/01-r-rstudio-kurulum.html#r-ve-rstudio-kurulumu",
    "href": "01-kurulum/01-r-rstudio-kurulum.html#r-ve-rstudio-kurulumu",
    "title": "1  R ve RStudio",
    "section": "1.2 R ve RStudio kurulumu",
    "text": "1.2 R ve RStudio kurulumu\nEğer bilgisayarınza R ve Rstudio kurmak isterseniz - ki bu yöntem uzun vadede tavsiye edilir - bu yoldan gitmelisiniz. Bunun için öncelikle bilgisayarınızın mimarisini öğrenmeniz gereklidir. En güncel işlemci mimarisi şu anda 64 bit ancak hala 32 bit bilgisayarlar dolaşımda bulunmakta. İşlemci mimarinize uygun R ve RStudio programlarını indirmeniz gereklidir.\nÖncelikle R istastik paketini kurmalısınız, daha sonra RStudio masaüstü programını kurmanız gerekmekte. Sadece RStudio kurmanız yeterli değildir.",
    "crumbs": [
      "Derse Hazırlık",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>R ve RStudio</span>"
    ]
  },
  {
    "objectID": "01-kurulum/02-ilk-kurallar.html",
    "href": "01-kurulum/02-ilk-kurallar.html",
    "title": "2  Önemli Konular",
    "section": "",
    "text": "2.1 Karakter kodlama sorunları\nBilgisayarlar geliştirildiği günden beri farklı karakter kodlama sistemleri kullanılmıştır. Hatta farklı işletim sistemleri bile birbirleriyle uyumsuz karakter kodlama sistemleri ile çalışır. Bu yüzden, bir bilgisayarda görünen karakter başka bir bilgisayarda düzgün bir şekilde görülmeyebilir.\nİlk geliştirilen kodlama sistemlerinden birisi olan ASCII sadece belirli sayıda basılı karakter içerebiliyordu. Dolayısıyla, belirli sayıda karakter kullanma imkanımız vardı ve daha çok İngilizce alfabesinde bulunan latince karakterleri destekliyordu.\nİlerleyen yıllarda farklı kodlama sistemleri kullanılmaya başlandı ancak ASCII karakter seti her zaman geriye doğru desteklendi. Yani, kodlama sistemleri değişse bile ASCII karakterleri aynı kodlarla belirtiliyordu.\nSon yıllarda UTF-8 karakter kodlama sistemi yaygın olarak kullanılmaktadır. Bu sistem sayesinde, farklı alfabelerdeki karakterler (mesela Türkçe’ye özgü karakterler) desteklenmeye başlandı.\nUTF-8, şu anda yaygın bir kodlama sistemi olsa da, Windows bu kodlama sistemini son yıllarda kullanmaya başladı ve Hâlâ bu yüzden sorunlar yaşıyoruz. Önceki yıllarda bu kodlama sorunları yüzünden öğrenci ödevlerini düzgün bir şekilde görüntüleyemedim.\nBu yüzden ders kapsamında yapacağınız kodlamaları sadece ASCII karakter seti üzerinden gerçekleştirin. Aslında çok kolay, aşağıdaki kutucukta bulunan harfler - ve kendi alfabenizdeki İngilizce dışındaki karakterler - YASAK!",
    "crumbs": [
      "Derse Hazırlık",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Önemli Konular</span>"
    ]
  },
  {
    "objectID": "01-kurulum/02-ilk-kurallar.html#karakter-kodlama-sorunları",
    "href": "01-kurulum/02-ilk-kurallar.html#karakter-kodlama-sorunları",
    "title": "2  Önemli Konular",
    "section": "",
    "text": "Kullanılmaması gereken karakterler\n\n\n\nKodlama yaparken ve dosyaları isimlendirirken aşağıdaki karakterleri kullanmayınız:\nÖ, Ç, Ş, İ, Ğ, Ü, Ş, ı, ü, ş, ç, ö \nEğer sizin kullandığınız yerel dilinizde, İngilizce karakter seti dışında karakterler varsa onları da kullanmayın!\n\n\n\n2.1.1 RStudio üzerinde karakter kodlaması\nEğer kullandığınız RStudio programında karakter kodlamasının ne olduğunu merak ediyorsanız şu yolu takip ediniz:\n\nÖnce üstteki menüden Tools (Araçlar) düğmesine tıklayınız.\nAçılan menüde Global Options (Global ayarlar) düğmesini bulunuz.\nAçılan sayfada Code tuşuna basınız.\nArdından Saving sekmesine tıklayınız.\n\nBu adımların ardından bir sonraki şekildeki ekran karşınıza çıkmalı. Burada Default text encoding kısmına dikkat ediniz. Eğer UTF-8 yazmıyorsa, Change tuşuna basarak, UTF-8 kodlamasını bulunuz (Şekil 2.1).\n\n\n\n\n\n\nŞekil 2.1: RStudio üzerinde UTF-8 kodlamasının seçilmesi",
    "crumbs": [
      "Derse Hazırlık",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Önemli Konular</span>"
    ]
  },
  {
    "objectID": "01-kurulum/02-ilk-kurallar.html#dosya-ve-klasörlerin-isimlendirilmesi",
    "href": "01-kurulum/02-ilk-kurallar.html#dosya-ve-klasörlerin-isimlendirilmesi",
    "title": "2  Önemli Konular",
    "section": "2.2 Dosya ve klasörlerin isimlendirilmesi",
    "text": "2.2 Dosya ve klasörlerin isimlendirilmesi\nBir diğer önemli nokta ise dosyaların ve klasörlerin isimlendirilmesi. Dosya isimlerinde asla ASCII dışında karakter ve boşluk kullanmayın. Ayrıca büyük küçük harf ayrımmına dikkat edin.\nASCII dışındaki karakterler ve boşluk karakteri, dosya isimlerinin hatalı bir şekilde görünmesine sebep olabilir ve işlerinizi zorlaştırır.\nKomut satırı ile çalışan programlarda, boşluk karakteri özel bir anlama gelir. Eğer boşluk karakteri kullanıyorsanız, komut satırı işleyicileri yazdığınız kelimenin bittiğini düşünür ve komutunuz ona göre çalıştırır. Bu da hata yapmanıza sebep olur.\n\n\n\n\n\n\nDosya isimlerine dikkat ediniz\n\n\n\nDosya isimlerini seçerken asla ASCII dışında karakter ve boşluk kullanmayın. Boşluk kullanacağınız zaman - (tire) veya _ (alt çizgi: SHIFT + -) karakterlerini kullanabilirisniz.\n\n\nHatalı klasör ve dosya isimleri:\nveri analizi/ödev 01.Rmd\nVeri analizi/Proje/Ödev (1)(11).Rmd\nGüzel bir şekilde yazılmış klasör ve dosya isimleri:\nveri-analizi/odev_01.Rmd\nVeri_analizi/Proje/Odev_(1).Rmd\n\n2.2.1 Ondalık işareti\nTürkiye ve Avrupa’da ondalık ayracı olarak , kulanılmaktadır. Mesela:\n14,6\nAncak R programı Amerika sistemini kullanır. Dolayısıyla ondalıklı sayılarla çalışmak istiyorsanız . işareti ile ondalık ayrımını gerçekleştirmeniz gerekir.\n\n\n\n\n\n\nOndalık ayracı farklıdır\n\n\n\nPeki kendi hazırladığınız verilerde ondalık ayracı olarak , kullanılmışsa ne olacak? İlerleyen bölümlerde, R içerisine veri yüklerken dec opsiyonu ile ondalık ayracını seçmeyi öğreneceğiz.",
    "crumbs": [
      "Derse Hazırlık",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Önemli Konular</span>"
    ]
  },
  {
    "objectID": "01-kurulum/02-ilk-kurallar.html#sonuç",
    "href": "01-kurulum/02-ilk-kurallar.html#sonuç",
    "title": "2  Önemli Konular",
    "section": "2.3 Sonuç",
    "text": "2.3 Sonuç\nDikkat etmeniz gereken noktalar:\n\nKodlamaları ASCII karakterleri ile yapalım.\nKlasör ve dosya isimlerinde yanlızca ASCII karakter kullanalım.\nKlasör ve dosya isimlerinde boşluk karakteri kullanmayalım.\nKlasör ve dosya isimlerinde büyük küçük harf ayrımına dikkat edelim.",
    "crumbs": [
      "Derse Hazırlık",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Önemli Konular</span>"
    ]
  },
  {
    "objectID": "01-kurulum/03-r-rstudio-ilk-adimlar.html",
    "href": "01-kurulum/03-r-rstudio-ilk-adimlar.html",
    "title": "3  İlk adımlar",
    "section": "",
    "text": "3.1 Dik bir öğrenme eğrisi\nKullanacağımız programların dik bir öğrenme eğrisi bulunmaktadır. Yani, gerçekten işe yarar bir şeyler yapabilmeniz için bir süre boyunca (3 - 4 hafta kadar) yoğun bir çalışma yapmanız ve kullanılan programların mantıklarını kavramanız gerekir.\nAncak bir kere bu çalışma sistemini kavradığınızda, sonraki adımlar daha kolay hale gelecektir. Mesela Şekil 3.1, anlattıklarımın bir özeti aslında. Biraz gözünüzü korkuttum kabul ediyorum…\nAncak her işe iyi tarafından bakalım. Veri analizi, yoğun bir biçimde döküman formatı değiştirme ve tekrarlı işlemler içeren bir işlemler bütünüdür. Microsoft Excel gibi bir araçlar bu analiz adımlarını ancak belli bir noktaya kadar sürdürebilirsiniz. Özellikle Bölüm 5’de belirtileceği üzere, yaşam bilimlerindeki veri miktarı artık küçük çaplı araçların altından kalkamayacağı bir seviyeye gelmiş bulunmaktadır. Bir noktadan sonra tekrarlı işler için harcayacağınız zaman gitgide artacaktır.(Şekil 3.2).\nKafanız biraz karıştı farkediyorum. Ancak sürece güvenin. Unutmayın, hayatta önemli olan aslında süreçtir…",
    "crumbs": [
      "Derse Hazırlık",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>İlk adımlar</span>"
    ]
  },
  {
    "objectID": "01-kurulum/03-r-rstudio-ilk-adimlar.html#dik-bir-öğrenme-eğrisi",
    "href": "01-kurulum/03-r-rstudio-ilk-adimlar.html#dik-bir-öğrenme-eğrisi",
    "title": "3  İlk adımlar",
    "section": "",
    "text": "Şekil 3.1: Veri analizi araçlarından R ve Python programlarının öğrenme eğrisi siyah olarak gösterilmiştir.\n\n\n\n\n\n\n\n\nŞekil 3.2: Bu grafikte \\(x\\) ekseni yapılan veri analiz işleminin boyutunu, \\(y\\) ekseni ise o işi yapmak için gerekli zamanı göstermektedir. Kırmızı çizgi, R gibi bir programla yapılan veri analzi sürecini ifade ederken, siyah çizgi ise manuel yollarla yapılan bir işlemi göstermektedir. R ile yapılan işlemler belli bir noktaya kadar karmaşık olsa da, işin boyutu arttıkça, harcanan zaman sabit kalmaya başlamıştır.",
    "crumbs": [
      "Derse Hazırlık",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>İlk adımlar</span>"
    ]
  },
  {
    "objectID": "01-kurulum/03-r-rstudio-ilk-adimlar.html#genel-görünüm",
    "href": "01-kurulum/03-r-rstudio-ilk-adimlar.html#genel-görünüm",
    "title": "3  İlk adımlar",
    "section": "\n3.2 Genel görünüm",
    "text": "3.2 Genel görünüm\nEğer Bölüm 1 bölümündeki adımları tam olarak takip ettiyseniz, R ve Rstudio programlarını kurmuş olmanız gerek. Eğer programları kurmadıysanız şimdi Bölüm 1 kısmına geri dönerek, gerekli işlemleri yapınız.\nProgramları tam olarak kurduysanız, Şekil 3.3’da göreceğiniz bir ekran karşınıza çıkmalı. Gelin bu ekranı inceleyelim:\n\n\nPencere 1: Burada komut satırı karşınıza çıkmakta. R ile komut satırı üzerinden etkileşeceksiniz.\n\nPencere 2: Bu kısımda ise iki temel sekme var:\n\n\nEnvironment (Çevre): Bu sekmede, R üzerinde oluşturduğumuz değişkenler bulunmaktadır.\n\nHistory (Tarihçe): Kullandığımız komutlar burada saklanır. İstediğimiz zaman geriye dönebiliriz.\n\n\n\nPencere 3: Bu kısımda 3 farklı temel sekme bulunmaktadır:\n\n\nFiles (Dosyalar): R çalışma klasörümüzdeki dosyalar burada bulunur.\n\nPlots (Grafikler): Veri analizi sırasında oluşturacağımız grafiklerin burada görüntülenecektir\n\nHelp (Yardım): R üzerinde paket bilgilerinin görüntülendiği yer.\n\n\n\n\n\n\n\n\nŞekil 3.3: RStudio karşılama ekranı\n\n\n**Yanıp sönen imleç artık komutunuzu bekliyor!",
    "crumbs": [
      "Derse Hazırlık",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>İlk adımlar</span>"
    ]
  },
  {
    "objectID": "01-kurulum/03-r-rstudio-ilk-adimlar.html#komut-satırı-üzerinde-çalışma",
    "href": "01-kurulum/03-r-rstudio-ilk-adimlar.html#komut-satırı-üzerinde-çalışma",
    "title": "3  İlk adımlar",
    "section": "\n3.3 Komut satırı üzerinde çalışma",
    "text": "3.3 Komut satırı üzerinde çalışma\nKomut satırı ekranında yanıp sönen bir imleç var. O imleç sizin komutunuzu bekliyor artık. R ile bu pencere üzerinden etkileşeceğiz. Siz bir komut yazacaksınız, R bu komutu işleyecek, ve sonucu geri döndürecek.\nEğer imleç yanıp sönmüyorsa, R o sırada bir işle uğraşıyor demektir. İşin bitmesini bekleyiniz.\nKomut satırı ekranını mesela bir hesap makinası olarak kullanabilirsiniz. Mesela:\n\n34 + 45\n\n[1] 79\n\n\nR, bu işlemi yapar ve sonucu ekrana yazdırır.\nİsterseniz başka işlemler de yapabilirsiniz:\n\n12/4\n\n[1] 3\n\n\nParantezli işlemler deneyelim:\n\n((6+5)*(12+6))/4\n\n[1] 49.5\n\n\nTebrikler! R üzerinde ilk komutlarınızı yazdınız!",
    "crumbs": [
      "Derse Hazırlık",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>İlk adımlar</span>"
    ]
  },
  {
    "objectID": "01-kurulum/04-klasor-islemleri.html",
    "href": "01-kurulum/04-klasor-islemleri.html",
    "title": "4  Klasör İşlemleri",
    "section": "",
    "text": "4.1 Çalışma klasörümüz nerede?\nİlk olarak getwd() komutunu konsola yazalım ve çıktıyı inceleylim:\ngetwd()\n\n[1] \"/home/runner/work/ybva/ybva/01-kurulum\"\nElde ettiğimiz çıktı bizim o sırada bulunduğumuz çalışma klasörünü gösterir. Bu döküman, aslında yerini bilmediğim bir sunucuda derlendi. O yüzden buradaki bilgi biraz gerçeği yansıtmıyor.\nAma kişisel MAC bilgisyarımda şöyle bir çıktı alacağım:\nOfiste bulunan Windows bilgisayarımda ise şuna benzer bir çıktı alacağım:\nLinux bilgisayarda ise şöyle olacaktı:\nBu bilgi aslında bize, o sıradaki çalışma klasörümüzün nerede olduğunu gösteriyor.",
    "crumbs": [
      "Derse Hazırlık",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Klasör İşlemleri</span>"
    ]
  },
  {
    "objectID": "01-kurulum/04-klasor-islemleri.html#çalışma-klasörümüz-nerede",
    "href": "01-kurulum/04-klasor-islemleri.html#çalışma-klasörümüz-nerede",
    "title": "4  Klasör İşlemleri",
    "section": "",
    "text": "/Users/quatta/Akademia/Lectures/ybva\n\nC:/Users/User/Akademia/Lectures/ybva\n\n/home/quatta/Akademia/Lectures/ybva",
    "crumbs": [
      "Derse Hazırlık",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Klasör İşlemleri</span>"
    ]
  },
  {
    "objectID": "01-kurulum/04-klasor-islemleri.html#kullanıcı-ismi",
    "href": "01-kurulum/04-klasor-islemleri.html#kullanıcı-ismi",
    "title": "4  Klasör İşlemleri",
    "section": "\n4.2 Kullanıcı ismi",
    "text": "4.2 Kullanıcı ismi\nKullanıcı ismi nedir? Kullancı ismi, her bilgisayarda bulunan ve sizin bilgilerinizin depolandığı klasördür.\nUnix (mesela macbooklar) ve Linux tabanlı işletim sistemlerinde bu konu önemlidir. Çünkü bu sistemler çok kullanıcılı olması için optimize edilmiştir.\nAncak Windows bilgisayarlarında bu konu çok anlaşılamamış bir olgudur. Genelde, bilgisayarı aldığınız yerde rastgele bir kullanıcı adı atanır.\nWindows sistemlerinde kullanıcı klasörleri C:/Users/ içerisinde bulunur.\nMac sistemlerde /Users/ içerisinde.\nLinux sistemlerde ise /home/ içinde bulunur.\nKullanıcı isminizi, bu klasörlerden sonra gelen ilk klasör olarak düşünebilirisiz.\nÖnemli nokta ise, büyük küçük harflere dikkat etmeniz. Bazı arkadaşlar C:/ ile c:/ arasındaki farkı anlamıyor. O yüzden hata alıyorsunuz.",
    "crumbs": [
      "Derse Hazırlık",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Klasör İşlemleri</span>"
    ]
  },
  {
    "objectID": "01-kurulum/04-klasor-islemleri.html#çalışma-klasörü-içindekiler-nedir",
    "href": "01-kurulum/04-klasor-islemleri.html#çalışma-klasörü-içindekiler-nedir",
    "title": "4  Klasör İşlemleri",
    "section": "\n4.3 Çalışma klasörü içindekiler nedir?",
    "text": "4.3 Çalışma klasörü içindekiler nedir?\nPeki bu klasör içinde neler var? dir() fonksiyonu bu işe yarar. Klasördeki dosyaları size gösterir:\n\ndir()\n\n[1] \"01-r-rstudio-kurulum.html\"     \"01-r-rstudio-kurulum.qmd\"     \n[3] \"02-ilk-kurallar.html\"          \"02-ilk-kurallar.qmd\"          \n[5] \"03-r-rstudio-ilk-adimlar.html\" \"03-r-rstudio-ilk-adimlar.qmd\" \n[7] \"04-klasor-islemleri.qmd\"       \"04-klasor-islemleri.rmarkdown\"\n[9] \"images\"",
    "crumbs": [
      "Derse Hazırlık",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Klasör İşlemleri</span>"
    ]
  },
  {
    "objectID": "01-kurulum/04-klasor-islemleri.html#klasörlerde-gezinmek",
    "href": "01-kurulum/04-klasor-islemleri.html#klasörlerde-gezinmek",
    "title": "4  Klasör İşlemleri",
    "section": "\n4.4 Klasörlerde gezinmek",
    "text": "4.4 Klasörlerde gezinmek\nEğer klasörler içerisinde gezinmek istiyorsanız, her klasörü ya da belgeyi / işareti ile ayırmalısınız.\nTürkçe karakterler kullanmamaya dikkat edin.\nKlasör isimlerinde boşluk kullanmayın. Hata alma şansınız yüksek. Genel olara komut satırında çalışırken kullandığınız boşluk (space) karakteri, yazdığınız şeyin bittiği anlamına geliyor ve bilgisayar sizden yeni bir cümle yazmanınızı bekliyor.\nBu nedenle hata alabilirsiniz.",
    "crumbs": [
      "Derse Hazırlık",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Klasör İşlemleri</span>"
    ]
  },
  {
    "objectID": "01-kurulum/04-klasor-islemleri.html#proje-oluşturmak",
    "href": "01-kurulum/04-klasor-islemleri.html#proje-oluşturmak",
    "title": "4  Klasör İşlemleri",
    "section": "\n4.5 Proje oluşturmak",
    "text": "4.5 Proje oluşturmak\nEğer proje oluşturursanız, hayatınız daha kolaylaşır.\nProje oluşturun ve proje klasörünüzün içerisine data isimli bir klasör daha oluşturun.\nArtık verilerinizi rahatlıkla bu klasör içerisinde saklayabilirsiniz.\nProje klasörü oluşturduğunuzda, artık güncel çalışma klasörünüz burası olarak belirlenir.\n\ngetwd()\n\n[1] \"/home/runner/work/ybva/ybva/01-kurulum\"\n\n\nBu klasör içerisinde data isimli verilerin saklandığı bir klasör daha bulunmakta. Onun içinde neler var?\n\ndir(\"data\")\n\ncharacter(0)\n\n\nArtık R içerisinde bir dosya okumak isterseniz data/sinif.txt yazarak, rahatlıkla bu dosyayı okuyabilirsiniz.",
    "crumbs": [
      "Derse Hazırlık",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Klasör İşlemleri</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/01-veri-bilimine-giris.html",
    "href": "02-veri-analizi/01-veri-bilimine-giris.html",
    "title": "5  Neden Veri Analizi?",
    "section": "",
    "text": "5.1 Biyolojik veri miktarı hızlı bir şekilde artıyor\nGünümüzede yaşam bilimleri alanında hızlı bir gelişme mevcut. Özellikle Yeni Nesil Dizileme Teknolojileri (Next Generation Sequencing) alanında yaşanan hızlı gelişim, kamuya açık halde paylaşılan DNA ve RNA dizileme veri miktarını inanılmaz ölçüde arttırdı (Knapp ve Hofreiter 2010).\nÖrnek vermek gerekirse, YND verisinin depolanıdğı SRA arşivindeki büyümeyi Şekil 5.1’da görebilme imkanınız var.\nŞekil 5.1: SRA veritabanındaki hızlı büyüme. Yeni nesil dizileme teknolojilerinde yaşanan hızlı gelişmeler sayesinde, SRA veritanının güncel büyüklüğü 20bin Terabaytı aşmış durumdadır (erişim tarihi 16/02/2022)\nPeki bu veri bütünlüğünün içinde neler var? Kişisel gözlemlerim neticesinde bu veri bütünlüğüyle çalışmak için yeni yöntemler geliştirilmesi gerekmektedir.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Neden Veri Analizi?</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/01-veri-bilimine-giris.html#biyolojik-veri-miktarı-hızlı-bir-şekilde-artıyor",
    "href": "02-veri-analizi/01-veri-bilimine-giris.html#biyolojik-veri-miktarı-hızlı-bir-şekilde-artıyor",
    "title": "5  Neden Veri Analizi?",
    "section": "",
    "text": "Knapp, Michael, ve Michael Hofreiter. 2010. “Next Generation Sequencing of Ancient DNA: Requirements, Strategies and Perspectives”. Genes 1 (2): 227-43. https://doi.org/10.3390/genes1020227.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Neden Veri Analizi?</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html",
    "href": "02-veri-analizi/02-bilimsel-yontem.html",
    "title": "6  Bilimsel Yöntem",
    "section": "",
    "text": "6.1 Bilimsel araştırmaya nasıl başlarız?\nKarl Popper, Bilimsel Araştırmanın Mantığı isimli kitabının birinci Almanca baskısının önsözünde şöyle yazmıştır (Popper 1984):\nDamdan düşmek terimi bence güzel bir metafor; çünkü bilimsel araştırma aslında aklımıza takılan bir soruyla başlıyor. Bu soru oldukça sezgisel - ve kişisel deneyimlerimce - nasıl olduğunu anlamadığınız bir şekilde ortaya çıkıyor. Yani bir anlamda, hiç sebep yokken bir anda kendinizi çözmeniz gereken bir soruyla baş başa buluyorsunuz - yani damdan düşüyorsunuz.\nAncak, bilimde her şeyin bir kuralı olduğu gibi, damdan düşmenin de bir kuralı var. Biz buna bilimsel araştırma yöntemi diyoruz. Genel olarak aslında bilimin çalışma prensiplerinden bir tanesi de diyebiliriz.\nPeki nasıl işliyor? Genel bir çerçeve çizmek gerekirse:",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Bilimsel Yöntem</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html#bilimsel-araştırmaya-nasıl-başlarız",
    "href": "02-veri-analizi/02-bilimsel-yontem.html#bilimsel-araştırmaya-nasıl-başlarız",
    "title": "6  Bilimsel Yöntem",
    "section": "",
    "text": "Araştırma, deyim yerindeyse damdan düşer gibi başlar; çünkü düşecek bir “dam” vardır.\n\n\n\n\n\nGözlem\nGözlemlere dayanarak hipotez kurulması\nDeneysel metodoloji ve teorinin testi\nDeney sonucunda elde edilen bulguların tümevarmsal analizi",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Bilimsel Yöntem</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html#gözlem",
    "href": "02-veri-analizi/02-bilimsel-yontem.html#gözlem",
    "title": "6  Bilimsel Yöntem",
    "section": "\n6.2 Gözlem",
    "text": "6.2 Gözlem\nYukarıdaki damdan düşme metaforunu ele alalım yine. Bu olay aslında uzun süreli bir gözlem sürecinin ardından bir anda ortaya çıkıyor. Yani ilk adım gözlem. Örnek verelim:\nKuğular üzerinde yaptığınız bir gözlem sonucunda, bütün kuğuların beyaz olduğunu gözlemlediniz. Bu gözlem size, dünya üzerindeki bütün kuğuların beyaz olduğunu düşünmenize sebep oldu.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Bilimsel Yöntem</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html#gözlemlere-dayanarak-hipotez-oluşturulması",
    "href": "02-veri-analizi/02-bilimsel-yontem.html#gözlemlere-dayanarak-hipotez-oluşturulması",
    "title": "6  Bilimsel Yöntem",
    "section": "\n6.3 Gözlemlere dayanarak hipotez oluşturulması",
    "text": "6.3 Gözlemlere dayanarak hipotez oluşturulması\nGözlem sürecinin ardından, hipotez oluşturma süreci ortaya giriyor. Yine kuğu örneğinden gidersek, bu gözlem sonucunda şöyle bir hipotez oluşturdunuz: Dünya üzerindeki bütün kuğular beyazdır. Peki gerçekten öyle mi?\nArtık üçüncü adımda geçmeye hazırsınız…",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Bilimsel Yöntem</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html#teorinin-deneysel-yöntem-ile-test-edilmesi",
    "href": "02-veri-analizi/02-bilimsel-yontem.html#teorinin-deneysel-yöntem-ile-test-edilmesi",
    "title": "6  Bilimsel Yöntem",
    "section": "\n6.4 Teorinin deneysel yöntem ile test edilmesi",
    "text": "6.4 Teorinin deneysel yöntem ile test edilmesi\nArtık bu teorinizle ilgili bir yönetm geliştirmeniz ve bu teoriniz test etmeniz gerkekir. Tabi kuğu örneği açısından bakarsak, yapmamız gereken şey aslında bir kuğu popülasyonu alarak, elinizdeki kuğuların renklerini tespit etmek. Peki burada sorulabilecek muhtemel bir soru:\n\nAcaba dünya üzerindeki bütün kuğuları tek tek inceleyerek renklerini gözlemleyebilir misiniz?\n\nNe kadar geniş bir arama yaparsanız yapın, eninde sonunda gözünüzden kaçacak bir kuğu olacaktır. Burada bilimin bize sunduğu bir kolaylık ise, dünya üzerindeki kuğu popülasyonundan rastgele örneklem ile, küçük bir alt popülasyon oluşturmaktır.\nBurada önemli olan anahtar kelimeler: örneklem ve rastgele olacaktır.\nÖrneklem olarak tanımladığımız şey esasında, büyük bir popülasyonu temsil eden küçük bir alt popülasyonu tarif edecektir. Peki neden rastgele olmalı? İstatistik biliminde rastgele tanımı gelen olarak, hiç bir yanlılık içermeyen, tamamen körlemesine yapılan iş olarak tanımlanabilir.\n\nRastgele örneklem: Geniş bir popülasyonu, yanlılık içermeden temsil eden alt popülasyon. Dolayısıyla, elde ettiğimiz alt popülasyondaki her bir örneğin bulunma frekansı, ana popülasyondaki örneklerin bulunma frekanslarına yakınsayacaktır. Bu sayede, rastgele örneklem kullanarak, daha büyük bir popülasyon hakkında yargılara varabiliriz - ya da varabileceğimizi düşünürüz.\n\nKuğu örneğine geri dönelim o zaman: Dünya üzerindeki geniş kuğu popülasyonundan rastgele bir örneklem almak isterseniz; her coğrafik bölgeden örnek aldığınıza emin olmalısınız. Mesela örnekleminizi sadece Türkiye içerisinden seçerseniz, bu yanlı bir örneklemi temsil eder. Ama popülasyonunuzu bütün ülkelerden almaya çalışırsanız, bu daha iyi bir örneklem olacaktır.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Bilimsel Yöntem</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html#bilimin-temel-prensiplerinden-bir-tanesi-tümevarım",
    "href": "02-veri-analizi/02-bilimsel-yontem.html#bilimin-temel-prensiplerinden-bir-tanesi-tümevarım",
    "title": "6  Bilimsel Yöntem",
    "section": "\n6.5 Bilimin temel prensiplerinden bir tanesi: Tümevarım",
    "text": "6.5 Bilimin temel prensiplerinden bir tanesi: Tümevarım\nPeki bu rastgele örneklem ne işimize yarayacak? Elde ettiğimiz bu rastgele örneklem, aslında geniş kuğu popülasyonunu temsil ediyor - Ya da biz şimdilik öyle kabul ediyoruz. Dolayısıyla, bu örneklem üzerinde yatpığımız deneyler sonucunda elde ettiğimzi bulguları, genel popülasyonu tanımlamak için kullanabiliriz. - Ya da biz şimdilik öyle kabul ediyoruz.\n\nTümevarım (indüksiyon, induction) ilkesi: Özel bir önermeden, daha geniş bir sonucun çıkarılmasını tanımlaya felsefi bir ilke. Bilim özeline bu ilkeyi uygularsak, rastgele örneklem ile alınmış alt popülasyonumuzdan elde ettiğimiz önermeleri, büyük popülasyon hakkında bir yargıya varmak için kullanılması.\n\nYine kuğu popülasyonuna dönecek olursak; rastgele örneklem ile elde ettiğimiz alt popülasyonu incelediğimizi düşünelim. Bu örneklem içerisindeki kuğuların hepsi beyaz. O zaman tümevarım ilkesini kullanarak, dünya üzerindeki bütün kuğuların beyaz olduğu sonucuna varabiliriz.\n\nBu noktada bir dakika durun. Sizce bu sonuca varabilir miyiz?",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Bilimsel Yöntem</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html#tümervarım-sorunu",
    "href": "02-veri-analizi/02-bilimsel-yontem.html#tümervarım-sorunu",
    "title": "6  Bilimsel Yöntem",
    "section": "\n6.6 Tümervarım sorunu",
    "text": "6.6 Tümervarım sorunu\nDünya üzerinde bir tane siyah kuğu olduğunu düşünün. Eğer biz bu kuğuyu, rastgele örneklem içerisinde dahil etmede başarısız olursak; bütün tümavarım çıkarımımız çöker. Çünkü artık, dünya üzerindeki kuğulardan bir tanesinin siyah olduğunu biliyoruz.\nKarl Popper, yine aynı kitabında bu sorun üzerine eğiliyor. Ne kadar iyi örneklem alırsak alalım, modern bilimin işleyişinde tümevarım ilkesini kullanmak her zaman doğru sonuçlara varacağmızı garanti etmez.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Bilimsel Yöntem</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html#yanlışlanabilirlik-ilkesi",
    "href": "02-veri-analizi/02-bilimsel-yontem.html#yanlışlanabilirlik-ilkesi",
    "title": "6  Bilimsel Yöntem",
    "section": "\n6.7 Yanlışlanabilirlik ilkesi",
    "text": "6.7 Yanlışlanabilirlik ilkesi\nDolayısıyla, modern bilim genel olarak yanlışlanabilirlik ilkesine göre çalışır. Bu ilkeye göre, tümevarımsal çıkarımlarımız aslında belirli bir olasılık düzeyine göre doğru kabul edilir (p-değeri) ve yanlışlanana kadar doğrudur.\nYine kuğu örneğine geri dönülecek olursa, bütün kuğular beyaz olarak kabul edilirken, 1967 yılında Hollanda’da bir tane siyah kuğu keşfedilmiştir. Dolayısıyla artık bütün kuğular beyaz olmadığı gösterilmiştir.\n\nYanlışlanabilirlik ilkesine göre tümevarım çıkımları, yanlışlanana kadar doğru kabul edilir.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Bilimsel Yöntem</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html#son-yıllarda-veri-artışı-var",
    "href": "02-veri-analizi/02-bilimsel-yontem.html#son-yıllarda-veri-artışı-var",
    "title": "6  Bilimsel Yöntem",
    "section": "\n7.1 Son yıllarda veri artışı var",
    "text": "7.1 Son yıllarda veri artışı var\nYeni nesil dizileme teknolojileri, güncel veri miktarını her gün kat be kat arttırıyır. DNA dizi verisi gene olarka veri tabanlarında tutuluyor. En güncel NCBI SRA veri tabanına baktığımızda bu artışın hızını anlayabiliriz (Şekil @ref(fig:sra))\nBu veri miktarı bize yeni artık doğa yerine, veri üzerinden yeni gözlemler yapabilmemize olanak sağlıyor.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Bilimsel Yöntem</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/02-bilimsel-yontem.html#peki-veri-bilimi-nasıl-işliyor",
    "href": "02-veri-analizi/02-bilimsel-yontem.html#peki-veri-bilimi-nasıl-işliyor",
    "title": "6  Bilimsel Yöntem",
    "section": "\n7.2 Peki veri bilimi nasıl işliyor?",
    "text": "7.2 Peki veri bilimi nasıl işliyor?\nGeleneksel yöntemin aksine, artık çıkış noktamız veri. Örnek vermek gerekirse DNA, RNA dizi verisi sıklıkla kullanılan yaşam bilimi verilerindendir. Peki süreç nasıl işliyor? Şöyle özetleyebiliriz:\n\nVerinin elde edilmesi\nVeri üzerinde incelemeler ve modelleme çalışmaları yapılması\nOluşturulan modellerin, benzer veri üzerinde test edilmesi\n\nDNA veya RNA dizi versinin nasıl elde edileceğini gelecek sene Biyoinformatik dersinde daha ayrıntılı bir şekilde işleyeceğiz. Dolayısıyla, şimdilik daha çok ikinci nokta üzerinde duracağız.\n\n7.2.1 Verinin incelemesi ve modelleme çalışmaları\nBu amaçla R ve Rstudio platformlarını kullancağız. Bu platformlar bize veri analizi, görselleştirmesi ve modellenmesi konusunda harika imkanlar sağlıyor.\nİlk adımda R içerisindeki veri yapılarını öğreneceğiz. Daha sonra R içerisine veriler yükleyerek, tablolar ve grafikler oluşturacağız. Örnek vermek gerekirse, Tablo @ref(tab:mtcarstb)’da R içerisinde gelen örnek veri setlerinden bir tanesinin tablo haline getirilmiş hali mevcut.\n\nlibrary(ggplot2)\nkableExtra::kable(x = head(mtcars), format = \"latex\", caption = \"Örnek veri setinden oluşturulmuş tablo\")\n\n\n\n\nBu noktadan sonra amacımız, verinin sakladığı hikayeleri incelemek ve bu hikayeleri tanımlayan modeller oluşturmak olacak. Eğer Şekil @ref(fig:mtcars)’e bakarsanız, örnek veri setindeki iki farklı değişken kullanılarak oluşturulmuş bir modeli görebilirsiniz.\nEğer matematiksel bir notasyon kullanmak istersek, şekilde görülen çizgiyi aslında şu şekilde ifade edebiliriz:\n\\[ Y = f(X) + \\epsilon \\]\n\nggplot(data=mtcars, aes(x=drat, y=mpg)) + geom_point() + \n  xlab(\"X\") + ylab(\"Y\") + geom_smooth(method = \"lm\") + theme_bw()\n\n\n\nÖrnek veri seti kullanılarak oluşturulmuş bir doğrusal model. Bu model bize y eksenindeki değerlerin x eksenindeki değerlerle olan ilişkisini açıklıyor. Ya da başka bir tanımla, x eksenindeki değerleri kullanarak y eksenindeki değerleri ne kadar doğrulukla tahmin edebiliriz?\n\n\n\nTabi şu anda aklınız karışmış olabilir. Ancak ilerleyen haftalarda aşağıdaki konular üzerinden giderek R ve Rstüdyo programlarını kullanarak veri bilimine giriş yapacağız:\n\nR ve RStüdyo kurulumu\nR üzerinde bulunan temel veri yapıları\nVeri çerçevleri, matrisler, listeler\nTanımlayıcı istatistikler\nTemel istatistik analizler\nGGplot2 ile görlselleştirme\nDoğrusal modeller\n\n\n\n\n\nPopper, Karl R. 1984. Bilimsel Araştırmanın Mantığı. 8th bs. Yapı Kredi Yayınları.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Bilimsel Yöntem</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/03-r-giris.html",
    "href": "02-veri-analizi/03-r-giris.html",
    "title": "7  R ve Rstudio ile çalışma",
    "section": "",
    "text": "7.1 Değişken atama\nAncak, bu şekilde yaptığınız işlemler genel olarak uzun ömürlü değildir. R üzerinde genel olarak kullandığımız her şeyi bir değişken içerisinde saklarız. Bunun için atama operatörü &lt;- kullanılmaktadır. Bu operatör, aslında okun sağındaki bilgiyi, soldaki değişkenin içerisine atamaktan sorumludur. Örnek olarak aşağıdaki işlemi yapalım:\nsayi1 &lt;- 12\nBu işlemin aynısını şu şekilde de yapabiliriz. Önemli olan okun yönü:\n12 -&gt; sayi1\nBu işlemin sonucunda 12 değerini, sayi1 değişkeni içerisinde atamış oluyoruz. Artık, 12 kullancağımız her yerde sayi1 değişkenini kullanabiliriz.\nBu değişkenleri ise, sağ ekranda bulunan çevre (environment) sekmesinde görebilirsiniz. Artık değişkenimiz, hafıza içerisine alınmış ve tekrar tekrar kullanılmaya hazır bir şekilde beklemektedir.\nİsterseniz ikinci bir değişken atayalım:\nsayi2 &lt;- 23\nArtık ikinci bir degisken elde ettik. Peki bunlarla neler yapabiliriz? Mesela dört işlem gerçekleştirebiliriz:\nsayi1 + sayi2\n\n[1] 35\nŞu ana kadar sadece sayılarla çalıştık. Ancak R içerisinde daha fazla veri tipi bulunmaktadır. Bu veri tipleri bize farklı değişkenlerle çalışma (karakter, tarih vs) imkanı vererek, farklı alanlarda veri analizi çalışmaları yapmamızı sağlamaktadır.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>R ve Rstudio ile çalışma</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/03-r-giris.html#veri-tipleri",
    "href": "02-veri-analizi/03-r-giris.html#veri-tipleri",
    "title": "7  R ve Rstudio ile çalışma",
    "section": "\n7.2 Veri tipleri",
    "text": "7.2 Veri tipleri\nR içerisinde dört temel veri tipimiz bulunmaktadır:\n\nSayı (numeric, num)\nKarakter (character, chr)\nMantıksal (logical, logi)\nKategori/faktör (factor, fac)\nKayıp veri (NA)\n\nBu veri tiplerinin hepsi, farklı veri analizi adımlarında kullanılmaktadır. Dolayısıyla, bu veri tiplerinin düzgün bir şekilde ayarlandığından emin olmalısınız.\nBir verinin tipini öğrenmek istiyorsanız, basit olarak str fonksiyonunu kullanabilirsiniz:\n\nstr(12)\n\n num 12\n\n\n\n\n\n\n\n\nNot\n\n\n\nR üzerindeki fonksiyonlar, belirli işlevleri yerine getiren kod parçaları olarak tanımlanabilir. Her fonskiyonun, parantez içerisine yazılan en az bir tane girdisi bulunmaktadır. Burada kullandığımız str fonksiyonu, parantez içerisinde belirtilen verinin tipini geri döndürmekten sorumludur.\n\n\nSayılar dışında neler kullanabiliriz? Karakterleri kullanabiliriz. Ancak karakterle çalışmak istiyorsanız, mutlaka tırnak işareti \" kullanmalısınız:\n\n\"karakter\"\n\n[1] \"karakter\"\n\n\nPeki bu karakterin tipine bakalım:\n\nstr(\"karakter\")\n\n chr \"karakter\"\n\n\nŞimdi ise başka bir örnek verelim. Bir sayıyı, \" işaretleri arasına alırsak ne olur?\n\nstr(\"12\")\n\n chr \"12\"\n\n\nEvet, bir sayıyı tırnak işareti içerisine alırsak artık onu karakter’e çevirmiş oluruz. Dolayısıyla artık sayı olarak kullanamayız.\nMantıksal değişkenler ise Evet ya da Hayır durumlarını belirleyen operatörler olarak tanımlanabilir. R içerisinde tanımlı olarak gelirler ve dört farklı şekilde ifade edebilirsiniz. Herhangi bir tırnak kullanımına ihtiyaç bulunmamaktadır:\n\n\nTRUE veya T\n\n\nFALSE veya F\n\n\nMesela bir tanesinin tipine bakalım:\n\nstr(TRUE)\n\n logi TRUE\n\n\n\n\n\n\n\n\nNot\n\n\n\nMantıksal operatörler, R içerisinde ön tanımlı olarak gelmektedir. Dolayısıyla, bu operatörleri oldukları gibi kullanabilme imkanınız bulunmaktadır.\n\n\nSon olarak kategori ya da faktörleri inceleyelim. Faktör değişkenleri, genel olarak gruplandırma vazifesi görmektedir. Mesela, farklı deney koşullarını faktör olarak gösterebiliriz. Bu sayede, R içerisinde bu koşullara arasındaki değişimleri inceleme imkanımız bulunmaktadır. Faktör oluşturmak için mutlaka bir karaktere ihtiyacımız bulunmaktadır. Bir faktör oluşturmak için, factor fonksiyonunu kullanmalıyız:\n\nfactor(\"karanlik\")\n\n[1] karanlik\nLevels: karanlik\n\n\nİsterseniz bir de bu faktörün tipine bakalım:\n\nstr(factor(\"karanlik\"))\n\n Factor w/ 1 level \"karanlik\": 1\n\n\n\n7.2.1 Kayıp veri\nVeri analizi çalışmalarında sıklıkla kayıp verilerle uğraşacaksınız. Çünkü deneyler sonucunda her zaman sonuç alamayabilirsiniz. Ancak o deneyi yaptığınız için, bir şekilde veri setinizde bu çıkmayan sonucu belirmeniz gerekir. Eğer deneyinizin sonucunda çıkmayan bir veri varsa, bunu NA karakteri ile belirtebilirsiniz. Bu karakter aslında mantıksal bir değişkendir ve olduğu gibi kullanılmalıdır.\n\nstr(NA)\n\n logi NA",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>R ve Rstudio ile çalışma</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/03-r-giris.html#veri-tipi-dönüşümleri",
    "href": "02-veri-analizi/03-r-giris.html#veri-tipi-dönüşümleri",
    "title": "7  R ve Rstudio ile çalışma",
    "section": "\n7.3 Veri tipi dönüşümleri",
    "text": "7.3 Veri tipi dönüşümleri\nBir veri tipini, başka bir veri tipine dönüştürme imkanımız bulunmaktadır. Tabii ki belirli kurallar dahilinde bu işlemi gerçekleştirebiliriz.\nElimizde bir sayı olduğunu ve bunu karaktere dönüştüreceğimizi düşünelim:\n\nas.character(12)\n\n[1] \"12\"\n\n\nYanlışlıkla karakter haline çevrilmiş bir sayıyı tekrar sayı haline dönüştürelim:\n\nas.numeric(12)\n\n[1] 12\n\n\nKullanılabilecek diğer dönüşümler:\n\nFaktör verisi: as.factor()\n\nMantıksal veri: as.logical()",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>R ve Rstudio ile çalışma</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/04-vektorler.html",
    "href": "02-veri-analizi/04-vektorler.html",
    "title": "8  Vektörler",
    "section": "",
    "text": "8.1 Nasıl vektör oluşturulur?\nR üzerinde farklı veri yapıları bulunmaktadır. Bunlarda bir tanesi vektörler olarak adlandırılır. Vektörler, kısaca belli bir tipte veri tipini içeren listeler olarak tanımlanabilir. Bir vektör oluşturmak istiyorsanız c() fonksiyonunu kullanmanız gerekmektedir:\nvektor1 &lt;- c(12, 43, 45)\nOluşturduğunuz vektor1 isimli vektör, üç tane elemana sahiptir. Bu elemanları dikkat ederseniz , ile ayırdık.\nİsterseniz karakter vektörleri de oluşturabilirsiniz:\nvektor2 &lt;- c(\"bitki1\", \"bitki2\", \"bitki3\")\nYa da mantıksal vektörler:\nvektor3 &lt;- c(TRUE, FALSE, TRUE, FALSE)\nYa da faktör vektörleri:\nvektor4 &lt;- factor(c(\"karanlik\", \"aydinlik\", \"karanlik\", \"aydinlik\"))\nDikkat ederseniz önce c() fonskiyonu ile vektör oluşturduk, ardından factor fonksiyonu ile faktör’e çevirdik.\nİstersek iki farklı vektörü birleştirebiliriz. Önce iki farklı vektör oluşturalım:\nx &lt;- c(12, 34, 56)\ny &lt;- c(39, 45, 67)\nŞimdi bu iki vektörü birleştirelim:\nyeni_vektor &lt;- c(x, y)\nBu vektörü ekrana yazdıralım:\nyeni_vektor\n\n[1] 12 34 56 39 45 67\nDikkat ederseniz, değişken isiminde birden fazla kelime varsa, bu kelimeleri _ ile ayırdık. Siz de buna dikkat edin lütfen.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Vektörler</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/04-vektorler.html#nasıl-vektör-oluşturulur",
    "href": "02-veri-analizi/04-vektorler.html#nasıl-vektör-oluşturulur",
    "title": "8  Vektörler",
    "section": "",
    "text": "Farklı veri tiplerini vektörde birleştirmek\n\n\n\nAcaba iki farklı tipte vektörü birleştiriseniz ne olur? Mesela bir karakter vektörü ile bir sayı vektörünü birleştirmeyi deneseniz olur mu?\n\nvektor &lt;- c(\"bitki1\", \"bitki2\", 12, 45)\nstr(vektor)\n\n chr [1:4] \"bitki1\" \"bitki2\" \"12\" \"45\"\n\n\nDikkat ederseniz, artık bir karakter vektörümüz oldu. Farklı veri tiplerini birleştiriken dikkat etmelisiniz. Beklemediğiniz sonuçlarla karşılaşabilirsiniz.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Vektörler</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/04-vektorler.html#vektör-oluşturma-üzerine-örnekler",
    "href": "02-veri-analizi/04-vektorler.html#vektör-oluşturma-üzerine-örnekler",
    "title": "8  Vektörler",
    "section": "\n8.2 Vektör oluşturma üzerine örnekler",
    "text": "8.2 Vektör oluşturma üzerine örnekler\nAşağıdaki tablo, hayali bir deneyi tarif etmektedir. Bir türe ait 10 tane bitkinin, farklı ışık koşullarında yaprak uzunlukları ölçümleri alınmıştır. Acaba her sütundan bir vektör oluşturabilir miyiz? Bu örnek için Tablo 11.1’e bakınız. Dikkat edin, ölçüm alınamayan noktalar var.\n\n\nTablo 8.1: Hayali veri setimizdeki bitkiler\n\n\n\nBitki İsmi\nYaprak Uzunluğu (cm)\nDeney Koşulları\n\n\n\nbitki1\n2.3\nKaranlık\n\n\nbitki2\n3.4\nAydınlık\n\n\nbitki3\n4.5\nAydınlık\n\n\nbitki4\n1.2\nKaranlık\n\n\nbitki5\n3.4\nAydınlık\n\n\nbitki6\n-\nKaranlık\n\n\nbitki7\n1.8\nKaranlık\n\n\nbitki8\n6.3\nAydinlik\n\n\nbitki9\n2.1\nKaranlık\n\n\nbitki10\n-\nKaranlık\n\n\n\n\n\n\nÖncelikle bitki isimleri için bir karakter vektörü oluşturalım:\n\nbitki_ismi &lt;- c(\"bitki1\", \"bitki2\", \"bitki3\", \"bitki4\", \"bitki5\", \n                \"bitki6\", \"bitki7\",\"bitki8\", \"bitki9\", \"bitki10\")\n\nŞimdi ise yaprak uzunluğu için bir sayı vektörü oluşturalım. Burada dikkat ediniz, belirlenemyen ölçümlere NA ekliyoruz!\n\nyaprak_uzunlugu &lt;- c(2.3, 3.4, 4.5, 1.2, 3.4, \n                    NA, 1.8, 6.3, 2.1, NA)\n\n\n\n\n\n\n\nNA karakterinin kullanımı\n\n\n\nBu karakter, farklı veri tipleri ile bir vektör içerisinde kullanılabilir.\n\n\nSon olarak deney koşulları için bir vektör oluşturmamız gerekli. Dikkat edin, deney koşulları aslında bir kategori ifade ediyor. Bu nedenle deney koşulları vektörü aslında bir faktör vektörü olmalı:\n\ndeney_kosullari &lt;- factor(c(\"karanlik\", \"aydinlik\", \"aydinlik\", \"karanlik\", \"aydinlik\",\n                            \"karanlik\", \"karanlik\", \"aydinlik\", \"karanlik\", \"karanlik\"))\n\nGerçekten faktör vektörü oluşturmuş muyuz kontrol edelim:\n\nstr(deney_kosullari)\n\n Factor w/ 2 levels \"aydinlik\",\"karanlik\": 2 1 1 2 1 2 2 1 2 2\n\n\nBurada levels olarak belirtilen aslında faktör seviyeleri. aydinlik ve karanlik olmak üzere iki farklı seviye bulunmakta ve bu seviyeler 1 ve 2 olarak kodlanmış durumdadır. R üzerinde faktörler, öntanımlı olarak alfabetik sıraya göre kodlanmaktadır.\n\n8.2.1 Vektörün uzunluğunu öğrenmek\nOluşturduğumuz vektörün uzunluğunu elde etmek için ise length fonksiyonunu kullanabiliriz:\n\nlength(yaprak_uzunlugu)\n\n[1] 10",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Vektörler</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/04-vektorler.html#vektör-elemanlarına-isim-eklemek",
    "href": "02-veri-analizi/04-vektorler.html#vektör-elemanlarına-isim-eklemek",
    "title": "8  Vektörler",
    "section": "\n8.3 Vektör elemanlarına isim eklemek",
    "text": "8.3 Vektör elemanlarına isim eklemek\nEğer istersek, her vektör elemanına bir isim atayabiliriz.\n\nnames(yaprak_uzunlugu) &lt;- bitki_ismi\n\nAtanmış isimleri elde edebiliriz:\n\nnames(yaprak_uzunlugu)\n\n [1] \"bitki1\"  \"bitki2\"  \"bitki3\"  \"bitki4\"  \"bitki5\"  \"bitki6\"  \"bitki7\" \n [8] \"bitki8\"  \"bitki9\"  \"bitki10\"\n\n\nAncak dikkat edin, kullandığınız her iki vektörün aynı uzunlukta olması gereklidir.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Vektörler</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/04-vektorler.html#vektörlerde-indis-kullanımı",
    "href": "02-veri-analizi/04-vektorler.html#vektörlerde-indis-kullanımı",
    "title": "8  Vektörler",
    "section": "\n8.4 Vektörlerde indis kullanımı",
    "text": "8.4 Vektörlerde indis kullanımı\nPeki vektör içerisindeki elemanlara nasıl erişiriz? Bunun için indisler kullanmamız gereklidir. Mesela yukarıda oluşturduğumuz yaprak_uzunlugu vektörü üzerinde ikinci elemanı alalım:\n\nyaprak_uzunlugu[2]\n\nbitki2 \n   3.4 \n\n\nŞimdi de ikinci ve dördüncü elemanlar arasındaki verileri geri döndürelim:\n\nyaprak_uzunlugu[2:4]\n\nbitki2 bitki3 bitki4 \n   3.4    4.5    1.2 \n\n\n\n\n\n\n\n\nSayı sırası oluşturalım\n\n\n\n: operatörü, iki sayı arasındaki sayılardan bir vektör oluşturur (daha ayrıntılı bilgi için Bölüm 8.5):\n\n1:16\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16\n\n\n\n\nEğer vektörümüzdeki elemanların isimleri varsa, bu isimleri de indis olarak kullanabiliriz.\n\nyaprak_uzunlugu[\"bitki2\"]\n\nbitki2 \n   3.4 \n\n\n\n8.4.1 Vektörleri filtrelemek\nEğer istersek, vektörler içerisinde işlem de yapabiliriz. Mesela yaprak uzunluğu 3’den büyük olan bitkileri geri döndürelim:\n\nyaprak_uzunlugu &gt; 3\n\n bitki1  bitki2  bitki3  bitki4  bitki5  bitki6  bitki7  bitki8  bitki9 bitki10 \n  FALSE    TRUE    TRUE   FALSE    TRUE      NA   FALSE    TRUE   FALSE      NA \n\n\nBir mantıksal vektör elde ettik. İstersek bu vektörü, başka bir vektöre indis olarak da kullanabiliriz:\n\nbitki_ismi[yaprak_uzunlugu &gt; 3]\n\n[1] \"bitki2\" \"bitki3\" \"bitki5\" NA       \"bitki8\" NA      \n\n\n\n8.4.2 Vektörlerden eleman çıkartmak\nEğer - işareti ile eksi indis verirsek, o elemanı vektörden çıkartabiliriz:\n\nyaprak_uzunlugu[-5]\n\n bitki1  bitki2  bitki3  bitki4  bitki6  bitki7  bitki8  bitki9 bitki10 \n    2.3     3.4     4.5     1.2      NA     1.8     6.3     2.1      NA \n\n\n\n\n\n\n\n\nDikkat\n\n\n\nDikkat edin, burada yaprak_uzunlugu vektörünün beşinci elemanı doğrudan çıkartılmadı, sadece beşinci elemanı çıkartılmış bir vektör geri döndürüldü.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Vektörler</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/04-vektorler.html#sec-seq-fonksiyonu",
    "href": "02-veri-analizi/04-vektorler.html#sec-seq-fonksiyonu",
    "title": "8  Vektörler",
    "section": "\n8.5 seq fonksiyonu ile çalışmalar",
    "text": "8.5 seq fonksiyonu ile çalışmalar\nBu fonksiyon sayesinde iki farklı sayı arasında, belirli aralıklara göre bir sayı vektörü oluşturulabilir.\nMesela 2 ile 16 arasında 1 artışla bir vektör oluşturalım:\n\nseq(2,16)\n\n [1]  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16\n\n\nYa da kısaca bu şekilde de oluşturabiliriz:\n\n2:16\n\n [1]  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16\n\n\nArtış mikarını kendimiz belirliyebiliriz. Mesela her adımda 4 sayı artış olsun:\n\nseq(2, 16, 2)\n\n[1]  2  4  6  8 10 12 14 16",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Vektörler</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/04-vektorler.html#sonuç",
    "href": "02-veri-analizi/04-vektorler.html#sonuç",
    "title": "8  Vektörler",
    "section": "\n8.6 Sonuç",
    "text": "8.6 Sonuç\nBu kısım kapsamında aşağıdaki konular önemlidir:\n\nBir vektör oluşturmak için c() fonksiyonunu kullanırız, ve vektör elemanlarını , ile ayırırız.\nBir vektörün uzunluğunu öğrenmek için length() fonksiyonunu kullanırız.\nVektör içinde bir ya da bir grup elemanı geri döndürmek için ise indisler kullanırız yaprak_uzunlugu[5]\n\n\nseq fonksiyonu kullanımı",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Vektörler</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/04-vektorler.html#ödev",
    "href": "02-veri-analizi/04-vektorler.html#ödev",
    "title": "8  Vektörler",
    "section": "\n8.7 Ödev",
    "text": "8.7 Ödev\nBu derste öğrendiklerimizi pekiştirmek için Bölüm 24’de bulunan ödeve bakalım ve haftaya kadar cevaplayalım.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Vektörler</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/05-matrisler.html",
    "href": "02-veri-analizi/05-matrisler.html",
    "title": "9  Matrisler",
    "section": "",
    "text": "9.1 Matris boyutları\nMatris boyutlarını öğrenmek için üç farklı fonksiyon kullanabilirsiniz:\nŞu şekilde:\nornek_matris &lt;- matrix(yaprak_uzunlugu, nrow=5, ncol=2)\n\ndim(ornek_matris)\n\n[1] 5 2\n\nnrow(ornek_matris)\n\n[1] 5\n\nncol(ornek_matris)\n\n[1] 2",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Matrisler</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/05-matrisler.html#matris-boyutları",
    "href": "02-veri-analizi/05-matrisler.html#matris-boyutları",
    "title": "9  Matrisler",
    "section": "",
    "text": "dim bir matrisin satır ve sütun sayılarını geri döndürür.\n\nnrow sadece satır sayısını geri döndürür.\n\nncol sadece sütun sayısını geri döndürür.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Matrisler</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/05-matrisler.html#satır-ve-sütün-isimleri",
    "href": "02-veri-analizi/05-matrisler.html#satır-ve-sütün-isimleri",
    "title": "9  Matrisler",
    "section": "\n9.2 Satır ve Sütün isimleri",
    "text": "9.2 Satır ve Sütün isimleri\nİstersek matrislerimize satır ve sütun isimleri atayabiliriz. Buradaki örnek oldukça rastgele oldu ancak konunun anlaşılması için önemli.\nBunun için ise iki farklı fonksiyon daha kullanıyoruz:\n\nrownames\ncolnames\n\n\nrownames(ornek_matris) &lt;- c(\"Satir1\", \"Satir2\", \"Satir3\", \"Satir4\", \"Satir5\")\n\ncolnames(ornek_matris) &lt;- c(\"Sutun1\", \"Sutun2\")\n\nornek_matris\n\n       Sutun1 Sutun2\nSatir1    2.3    3.0\nSatir2    3.4    1.8\nSatir3    4.5    6.3\nSatir4    1.2    2.1\nSatir5    3.4    5.0",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Matrisler</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/05-matrisler.html#matrislerle-çalışmak",
    "href": "02-veri-analizi/05-matrisler.html#matrislerle-çalışmak",
    "title": "9  Matrisler",
    "section": "\n9.3 Matrislerle çalışmak",
    "text": "9.3 Matrislerle çalışmak\nMatrisler’de de indis kullanabiliriz. Bu sayede matris içerisindeki elemanlara erişebiliriz. Ancak burada iki tane eleman kullanmamız gerekecek. Bir tanesi satır için, diğeri ise sütun için.\nMesela, örnek matirisimizde 4. satır 2. sütundaki elemana erişmek isteyelim:\n\nornek_matris[4,2]\n\n[1] 2.1\n\n\nBirinci eleman satır sayısını, ikinci eleman ise sütun sayısını ifade etmektedir.\nSadece ikinci sütunda bulunan, 2 ve 4 arasındaki satırlara erişmek istersek:\n\nornek_matris[2:4,2]\n\nSatir2 Satir3 Satir4 \n   1.8    6.3    2.1 \n\n\nDikkat ederseniz bu örnekte 2:4 yapısını kullandık. Bu bize 2, 3, 4 vektörünü geri döndürecektir. Sütun için ise sadece 2 kullandık.\nSadece 4. satırı geri döndürmek için:\n\nornek_matris[4,]\n\nSutun1 Sutun2 \n   1.2    2.1 \n\n\nSütun indisini kullanmazsak, bütün sütun elementlerini geri döndürür.\nSadece birinci sürunu geri döndürmek için ise:\n\nornek_matris[,1]\n\nSatir1 Satir2 Satir3 Satir4 Satir5 \n   2.3    3.4    4.5    1.2    3.4",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Matrisler</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/05-matrisler.html#matrislerde-mantıksal-işlemler",
    "href": "02-veri-analizi/05-matrisler.html#matrislerde-mantıksal-işlemler",
    "title": "9  Matrisler",
    "section": "\n9.4 Matrislerde mantıksal işlemler",
    "text": "9.4 Matrislerde mantıksal işlemler\nVektörlerde yaptığımız mantıksal işlemleri, matrislerde de yapabiliriz.\nMesela ikinci sütunda, 5’den büyük satırları geri döndürelim:\n\nornek_matris[,2] &gt; 5\n\nSatir1 Satir2 Satir3 Satir4 Satir5 \n FALSE  FALSE   TRUE  FALSE  FALSE \n\n\nDikkat ederseniz 5’den büyük olan değerleri bize TRUE olarak gösterdi. Bu mantıksal vektörü tekrar bir indis olarak verelim:\n\nornek_matris[ornek_matris[,2] &gt; 5, 1]\n\n[1] 4.5\n\n\nDikkat edin mantıksal vektörü sadece satır indisi olarak kullandık! Yoksa hata alırız.\nYa da bütün matris içerisinde bir karşılaştırma yapabiliriz. Bütün matris içinde 3’den büyük olan değerleri geri döndürelim:\n\nornek_matris &gt; 3\n\n       Sutun1 Sutun2\nSatir1  FALSE  FALSE\nSatir2   TRUE  FALSE\nSatir3   TRUE   TRUE\nSatir4  FALSE  FALSE\nSatir5   TRUE   TRUE\n\n\nBunu tekrar bir indis olarak geri kullanalım\n\nornek_matris[ornek_matris &gt; 3]\n\n[1] 3.4 4.5 3.4 6.3 5.0\n\n\nGördüğünüz gibi bize bir vektör geri döndürdü. Çünkü tek indis kullandık. Bu özellik matrislere özgüdür.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Matrisler</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/06-veri-cerceveleri.html",
    "href": "02-veri-analizi/06-veri-cerceveleri.html",
    "title": "10  Veri Çerçeveleri",
    "section": "",
    "text": "10.1 Veri Çerçevesi boyutları\nElimizdeki veri çerçevesinin boyutlarını aynı matrisler gibi öğrenebiliriz.\ndim(veri)\n\n[1] 10  3\nSatır sayısı:\nnrow(veri)\n\n[1] 10\nncol(veri)\n\n[1] 3",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Veri Çerçeveleri</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/06-veri-cerceveleri.html#sütun-ve-satır-isimleri",
    "href": "02-veri-analizi/06-veri-cerceveleri.html#sütun-ve-satır-isimleri",
    "title": "10  Veri Çerçeveleri",
    "section": "\n10.2 Sütun ve satır isimleri",
    "text": "10.2 Sütun ve satır isimleri\nHer veri çerçevesinin bir sütun ismi olması gerekir. Sütun isimlerini colnames fonksiyonu ile öğrenebiliriz:\n\ncolnames(veri)\n\n[1] \"bitki_ismi\"      \"yaprak_uzunlugu\" \"deney_kosullari\"\n\n\nAynı şekilde, her veri çerçevesinde bir satır ismi de bulunmaktadır. Bunu da rownames ile öğrenebiliriz:\n\nrownames(veri)\n\n [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\"\n\n\nİstersek, satır ve sütun isimlerini değiştirebiliriz:\n\ncolnames(veri) &lt;- c(\"isim\", \"uzunluk\", \"kosul\")\nrownames(veri) &lt;- c(\"bitki1\", \"bitki2\", \"bitki3\", \"bitki4\", \"bitki5\", \n                        \"bitki6\", \"bitki7\",\"bitki8\", \"bitki9\", \"bitki10\")\n\n\n\n\n\n\n\nDikkat!\n\n\n\nSatır ve sütun isimleri mutlaka tekil olmalıdır. Yani her satır ismi ve her sütun ismi tek olmalı. Yukarıdaki örnekte, satır isimlerinde iki tane bitki8 yazma şansımız yoktur. Yoksa hata alırsınız.\n\n\nŞimdi tekrar veri çerçevesini ekrana yazdıralım:\n\nveri\n\n           isim uzunluk    kosul\nbitki1   bitki1     2.3 karanlik\nbitki2   bitki2     3.4 aydinlik\nbitki3   bitki3     4.5 aydinlik\nbitki4   bitki4     1.2 karanlik\nbitki5   bitki5     3.4 aydinlik\nbitki6   bitki6      NA karanlik\nbitki7   bitki7     1.8 karanlik\nbitki8   bitki8     6.3 aydinlik\nbitki9   bitki9     2.1 karanlik\nbitki10 bitki10      NA karanlik\n\n\nElimizdeki veri çerçeveleri çok uzun olabilir, bu yüzden verinin hepsini ekrana yazdırmak istemeyebiliriz. head komutu, bize veri çerçevesinin ilk bir kaç satırını ekrana yazdırma şansı verir:\n\nhead(veri)\n\n         isim uzunluk    kosul\nbitki1 bitki1     2.3 karanlik\nbitki2 bitki2     3.4 aydinlik\nbitki3 bitki3     4.5 aydinlik\nbitki4 bitki4     1.2 karanlik\nbitki5 bitki5     3.4 aydinlik\nbitki6 bitki6      NA karanlik",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Veri Çerçeveleri</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/06-veri-cerceveleri.html#veri-çerçevesi-işlemleri",
    "href": "02-veri-analizi/06-veri-cerceveleri.html#veri-çerçevesi-işlemleri",
    "title": "10  Veri Çerçeveleri",
    "section": "\n10.3 Veri çerçevesi işlemleri",
    "text": "10.3 Veri çerçevesi işlemleri\nBir veri çerçevesinde, aynı matris gibi hareket edebiliriz. Mesela ikinci satırın üçüncü sütunundaki veriyi elde edelim:\n\nveri[2,3]\n\n[1] aydinlik\nLevels: aydinlik karanlik\n\n\nŞimdi sadece ikinci sütunu elde edelim:\n\nveri[,2]\n\n [1] 2.3 3.4 4.5 1.2 3.4  NA 1.8 6.3 2.1  NA\n\n\nŞimdi de üçünücü satırı elde edelim:\n\nveri[3,]\n\n         isim uzunluk    kosul\nbitki3 bitki3     4.5 aydinlik\n\n\nİstersek sadece sütun isimlerini de kullanabiliriz. Önce sütun isimlerine bakalım:\n\ncolnames(veri)\n\n[1] \"isim\"    \"uzunluk\" \"kosul\"  \n\n\nSadece yaprak uzunluklarına bakalım:\n\nveri$uzunluk\n\n [1] 2.3 3.4 4.5 1.2 3.4  NA 1.8 6.3 2.1  NA\n\n\nEğer $ işaretini kullanırsak, doğrudan sütun isimleri ile çalışabiliriz. Bu bize bir vektör geri döndürdü.\nPeki, yaprak uzunlukları vektöründeki 5. elemanı elde etmek istesek:\n\nveri$uzunluk[5]\n\n[1] 3.4\n\n\nBunu şu şekilde de yapabiliriz:\n\nveri[5,2]\n\n[1] 3.4\n\n\nBu iki işlem de bize aynı sonucu verecektir. Dolayısıyla istediğimiz kullanabiliriz.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Veri Çerçeveleri</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/07-listeler.html",
    "href": "02-veri-analizi/07-listeler.html",
    "title": "\n11  Listeler\n",
    "section": "",
    "text": "11.1 Listelerde indisleme\nListelerde indisleme biraz farklıdır.\nÖncelikle elimizdeki listenin kaç tane eleman içerdiğine bakalım:\nlength(liste)\n\n[1] 3\nİstersek, liste öğelerinin isimlerini inceleyebiliriz ya da isim atayabiliriz:\nnames(list)\n\nNULL\nliste &lt;- list(veri=veri, ornek_matris = ornek_matris, isimler = isimler)\nnames(liste)\n\n[1] \"veri\"         \"ornek_matris\" \"isimler\"\nYa da şu şekilde atayabiliriz:\nnames(liste) &lt;- c(\"veri\", \"ornek_matris\", \"isimler\")\nListelerde indisleme yaparken iki farklı şekilde çalışabilirisniz. Ancak bu iki yöntem farklı veri yapıları geri döndürür:",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Listeler</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/07-listeler.html#listelerde-indisleme",
    "href": "02-veri-analizi/07-listeler.html#listelerde-indisleme",
    "title": "\n11  Listeler\n",
    "section": "",
    "text": "Liste içindeki elemana erişim: [[]] doğrudan liste elemanını geri döndürür.\nListe’den yeni bir liste geri döndürmek: [] bize bir alt liste geri döndürdü.\n\n\n11.1.1 Liste içindeki elemana erişme\nİlk yöntem bize liste elemanlarına erişim, ve bu elemanlar içinde işlem yapma olanağı sağlar.\n\nliste[[3]]\n\n[1] \"Ali\"    \"Deniz\"  \"Fatma\"  \"Emre\"   \"Volkan\" \"Onur\"  \n\n\nŞimdi ise doğrudan vektörü geri döndürdük. Bu vektör içinde işlem yapabiliriz artık. Mesela bu vektörün ikinci elemanına erişebiliriz.\n\nliste[[3]][2]\n\n[1] \"Deniz\"\n\n\nBu sayede, liste içindeki elemana ulaştık.\nŞimdi birinci elemana erişelim:\n\nliste[[1]]\n\n   bitki_ismi yaprak_uzunlugu deney_kosullari\n1      bitki1             2.3        karanlik\n2      bitki2             3.4        aydinlik\n3      bitki3             4.5        aydinlik\n4      bitki4             1.2        karanlik\n5      bitki5             3.4        aydinlik\n6      bitki6              NA        karanlik\n7      bitki7             1.8        karanlik\n8      bitki8             6.3        aydinlik\n9      bitki9             2.1        karanlik\n10    bitki10              NA        karanlik\n\n\nİstersek bu veri çerçevesi içinde işlemler yapabiliriz:\n\nliste[[1]][4,2]\n\n[1] 1.2\n\n\nEğer listemizi isimleri varsa, doğruda bu isimleri kullanabiliriz:\n\nliste$veri\n\n   bitki_ismi yaprak_uzunlugu deney_kosullari\n1      bitki1             2.3        karanlik\n2      bitki2             3.4        aydinlik\n3      bitki3             4.5        aydinlik\n4      bitki4             1.2        karanlik\n5      bitki5             3.4        aydinlik\n6      bitki6              NA        karanlik\n7      bitki7             1.8        karanlik\n8      bitki8             6.3        aydinlik\n9      bitki9             2.1        karanlik\n10    bitki10              NA        karanlik\n\n\nBakın, tekrar liste elemanına doğrudan eriştik. İstersek yukarıdaki işlemin aynısını yapabiliriz:\n\nliste$veri[4,2]\n\n[1] 1.2\n\n\n\n11.1.2 Alt liste geri döndürme\nBu yöntemde, elimizdeki listeden yeni bir alt liste oluşturuyoruz. Yani, indisleme yaptıktan sonra elde ettiğimiz veri yapısı da bir liste.\n\nliste[3]\n\n$isimler\n[1] \"Ali\"    \"Deniz\"  \"Fatma\"  \"Emre\"   \"Volkan\" \"Onur\"  \n\n\nBu bize bir alt liste geri döndürdü. Ancak, üçünücü eleman olan vektöre erişemiyoruz şu anda:\n\nliste[3][2]\n\n$&lt;NA&gt;\nNULL\n\n\nBakın hata mesajı aldık. Çünkü elimizde bir alt liste var.\nİstersek, birden fazla liste elemanını seçebiliriz:\n\nliste[1:2]\n\n$veri\n   bitki_ismi yaprak_uzunlugu deney_kosullari\n1      bitki1             2.3        karanlik\n2      bitki2             3.4        aydinlik\n3      bitki3             4.5        aydinlik\n4      bitki4             1.2        karanlik\n5      bitki5             3.4        aydinlik\n6      bitki6              NA        karanlik\n7      bitki7             1.8        karanlik\n8      bitki8             6.3        aydinlik\n9      bitki9             2.1        karanlik\n10    bitki10              NA        karanlik\n\n$ornek_matris\n     [,1] [,2]\n[1,]  2.3  3.0\n[2,]  3.4  1.8\n[3,]  4.5  6.3\n[4,]  1.2  2.1\n[5,]  3.4  5.0\n\n\nŞu örnekleri deneyin mutlaka:\nTry these\n\nliste[[2]]\nliste[2]\nliste[[2]][3]\nliste[2][3]\nliste[[1:3]]\nliste[1:3]\nliste[[\"isimler\"]]\nliste$isimler\nliste[\"isimler\"]",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Listeler</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/07-listeler.html#sonuçlar",
    "href": "02-veri-analizi/07-listeler.html#sonuçlar",
    "title": "\n11  Listeler\n",
    "section": "\n11.2 Sonuçlar",
    "text": "11.2 Sonuçlar\n\nliste[[2]]\n\n     [,1] [,2]\n[1,]  2.3  3.0\n[2,]  3.4  1.8\n[3,]  4.5  6.3\n[4,]  1.2  2.1\n[5,]  3.4  5.0\n\n\n\nliste[2]\n\n$ornek_matris\n     [,1] [,2]\n[1,]  2.3  3.0\n[2,]  3.4  1.8\n[3,]  4.5  6.3\n[4,]  1.2  2.1\n[5,]  3.4  5.0\n\n\n\nliste[[2]][3]\n\n[1] 4.5\n\n\n\nliste[2][3]\n\n$&lt;NA&gt;\nNULL\n\n\n\nliste[[1:3]]\n\n[1] 4.5\n\n\n\nliste[1:3]\n\n$veri\n   bitki_ismi yaprak_uzunlugu deney_kosullari\n1      bitki1             2.3        karanlik\n2      bitki2             3.4        aydinlik\n3      bitki3             4.5        aydinlik\n4      bitki4             1.2        karanlik\n5      bitki5             3.4        aydinlik\n6      bitki6              NA        karanlik\n7      bitki7             1.8        karanlik\n8      bitki8             6.3        aydinlik\n9      bitki9             2.1        karanlik\n10    bitki10              NA        karanlik\n\n$ornek_matris\n     [,1] [,2]\n[1,]  2.3  3.0\n[2,]  3.4  1.8\n[3,]  4.5  6.3\n[4,]  1.2  2.1\n[5,]  3.4  5.0\n\n$isimler\n[1] \"Ali\"    \"Deniz\"  \"Fatma\"  \"Emre\"   \"Volkan\" \"Onur\"  \n\n\n\nliste[[\"isimler\"]]\n\n[1] \"Ali\"    \"Deniz\"  \"Fatma\"  \"Emre\"   \"Volkan\" \"Onur\"  \n\n\n\nliste$isimler\n\n[1] \"Ali\"    \"Deniz\"  \"Fatma\"  \"Emre\"   \"Volkan\" \"Onur\"  \n\n\n\nliste[\"isimler\"]\n\n$isimler\n[1] \"Ali\"    \"Deniz\"  \"Fatma\"  \"Emre\"   \"Volkan\" \"Onur\"",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Listeler</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/08-dosya-okuma.html",
    "href": "02-veri-analizi/08-dosya-okuma.html",
    "title": "12  Dosya okuma",
    "section": "",
    "text": "12.1 Bilgisayarımızdaki dosyayı okuma\nBilgisayarımızdaki dosyayı okumak için read.table fonksiyonunu kullanıyoruz.\nveri &lt;- read.table(file = \"data/iris.txt\", header = T, sep = \"\\t\")\nBurada dikkat ederseniz bazı opsiyonlar var. Gelin onlara bakalım:\nBunun dışında farklı opsiyonlar da bulunmakta. Bütun opsiyonlara erişmek için konsola ?read.table() yazınız.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Dosya okuma</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/08-dosya-okuma.html#bilgisayarımızdaki-dosyayı-okuma",
    "href": "02-veri-analizi/08-dosya-okuma.html#bilgisayarımızdaki-dosyayı-okuma",
    "title": "12  Dosya okuma",
    "section": "",
    "text": "file opsiyonu bize o dosyayı okuyacağımız yolu gösterir.\n\nheader opsiyonu ise, ilk satırın başlık satırı olduğunu gösterir\n\nsep ise, dosyada kullanılan ayraç karakterini belirtir. Bizim dosyamızda \\t karakteri (tab)\n\n\n\n\n\n\n\nDosya okuma hataları\n\n\n\nBu derste en çok zorlandığımız konu dosya okumak. Bir dosyayı okumak istiyorsanız, o dosyanın yolunu belirtmeniz gerek. Bunu iki farklı şekilde yapabilirsiniz:\n\n\nTam yol: O dosyanın tam okuma yolunu gösterirsiniz C:/Users/User/Documents/Veri-Analizi/veri.txt gibi. Burada dosya yolunu kendi dosyanıza göre değiştiriniz\n\nGöreceli yol: Bir R projesi kullandığınızda, dosyalarınız o proje içerisine yüklerseniz, tam yolu göstermeden kullanabilirsiniz.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Dosya okuma</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/08-dosya-okuma.html#internet-üzerinden-okuma",
    "href": "02-veri-analizi/08-dosya-okuma.html#internet-üzerinden-okuma",
    "title": "12  Dosya okuma",
    "section": "\n12.2 İnternet üzerinden okuma",
    "text": "12.2 İnternet üzerinden okuma\nEğer dosyanın tam internet adresini biliyorsak, onu da doğrudan okuyabiliriz. Aynı komutu yazacağız, ancak bu sefer file opsiyonuna, o dosyanın internet adresini girmeliyiz:\n\nveri &lt;- read.table(file = \"https://raw.githubusercontent.com/emrahkirdok/ybva/main/02-veri-analizi/data/iris.txt\", header = T, sep = \"\\t\")\n\nBu iki yöntemi de kullanabilirsiniz.\n## Dosyayı inceleyelim\nElimizdeki dosya aslında normal bir veri çerçevesi. Bütün veri çerçevesi işlemlerini yapabiliriz artık.\nVeri çerçevesindeki sütun isimleri:\n\ncolnames(veri)\n\n[1] \"Sepal_Uzunlugu\"  \"Sepal_Genisligi\" \"Petal_Uzunlugu\"  \"Petal_Genisligi\"\n[5] \"Tur\"            \n\n\nVeri çerçevesindeki satır ve sütun sayısı:\n\ndim(veri)\n\n[1] 50  5\n\n\n## Farklı dosyalara bakalım\nŞimdi gelin farklı verilerin biçimlerini inceleyelim:\n\nSRA veri tabanı istatistikleri\n[]",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Dosya okuma</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/09-rmarkdown.html",
    "href": "02-veri-analizi/09-rmarkdown.html",
    "title": "\n13  Rmarkdown Kullanımı\n",
    "section": "",
    "text": "14 Giriş\nBu döküman kapsamında Rmarkdown kullanımı anlatılacaktır. İlk defa Rmarkdown kullanacaksanız öncelikle programı R içerisine kurmanız gerekecektir. Bu işlemi R otomatik olarak da yapailir. Eğer otomatik kurmadıysanız, aşağıkdai satırı komut satırına yazmanız gereklidir. Bu işlemi bir kere yapsanız yeter.\ninstall.packages(\"rmarkdown\")\nBu döküman kapsamında, Rmarkdown ile yazımın incelikleri gösterilecektir. Bu dosyanın ham haline aşağıdaki bağlantıdan ulaşarak kendi bilgisayarınıza indirebilirsiniz:\nBu sayfanın Rmarkdown hali\nBu iki dökümanı karşı karşıya inceleyerek, stil tiplerinin nasıl kullanıldığının farkına varınız.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Rmarkdown Kullanımı</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/09-rmarkdown.html#yaml-üst-bilgisi",
    "href": "02-veri-analizi/09-rmarkdown.html#yaml-üst-bilgisi",
    "title": "\n13  Rmarkdown Kullanımı\n",
    "section": "\n14.1 YAML üst bilgisi",
    "text": "14.1 YAML üst bilgisi\nİlk olarak yaml olarak ifade edilen döküman üst bilgisini ekliyoruz:\n---\ntitle: \"Rmarkdown Kullanımı\"\nauthor: \"Emrah Kırdök\"\ndate: \"2023-03-23\"\noutput: html_document\n---",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Rmarkdown Kullanımı</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/09-rmarkdown.html#paragraflar",
    "href": "02-veri-analizi/09-rmarkdown.html#paragraflar",
    "title": "\n13  Rmarkdown Kullanımı\n",
    "section": "\n14.2 Paragraflar",
    "text": "14.2 Paragraflar\nNormal bir paragraf yazmak istiyorsanız, hiç bir işaret kullanmayınız.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Rmarkdown Kullanımı</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/09-rmarkdown.html#ikinci-seviye-başlık",
    "href": "02-veri-analizi/09-rmarkdown.html#ikinci-seviye-başlık",
    "title": "\n13  Rmarkdown Kullanımı\n",
    "section": "\n15.1 İkinci seviye başlık",
    "text": "15.1 İkinci seviye başlık\nİkinci seviye başlık için ## karakterini kullanınız.\n\n15.1.1 Üçüncü seviye başlık\nBu işaretin miktarı(#), başlık seviyesini belirtir.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Rmarkdown Kullanımı</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/09-rmarkdown.html#liste-oluşturma",
    "href": "02-veri-analizi/09-rmarkdown.html#liste-oluşturma",
    "title": "\n13  Rmarkdown Kullanımı\n",
    "section": "\n15.2 Liste oluşturma",
    "text": "15.2 Liste oluşturma\nEğer liste oluşturmak istiyorsanız + karakterini kullanmalısınız:\n\nliste1\nliste 2\n\nalt liste 1\nalt liste 2\n\n\nliste 3\n\nBir liste ögesinin alt elemanlarını belirlemek istiyorsanız, tab tuşuna basarak bir satır girinti oluşturabilirsiniz.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Rmarkdown Kullanımı</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/09-rmarkdown.html#vurgular",
    "href": "02-veri-analizi/09-rmarkdown.html#vurgular",
    "title": "\n13  Rmarkdown Kullanımı\n",
    "section": "\n15.3 Vurgular",
    "text": "15.3 Vurgular\nEğer italik yazmak isterseniz * tuşlarını kullanmalısınız. Kalın harflerle yazmak isterseniz iki tane ** kullanmalısınız.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Rmarkdown Kullanımı</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/09-rmarkdown.html#tablo-oluşturma",
    "href": "02-veri-analizi/09-rmarkdown.html#tablo-oluşturma",
    "title": "\n13  Rmarkdown Kullanımı\n",
    "section": "\n15.4 Tablo oluşturma",
    "text": "15.4 Tablo oluşturma\nBoru karakteri oluşturma: Sağ Alt Gr tuşu + &lt; : |\n\n\nbitki ismi\nyaprak uzunluğu\nkoşul\n\n\n\nbitki 1\n2.4\naydinlik\n\n\nbitki 2\n3.4\nkaranlik\n\n\nbitki 3\n5\nkaranlik\n\n\n\nTabloları yukarıdaki gibi oluşturabilirsiniz.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Rmarkdown Kullanımı</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/09-rmarkdown.html#şekil-ekleme",
    "href": "02-veri-analizi/09-rmarkdown.html#şekil-ekleme",
    "title": "\n13  Rmarkdown Kullanımı\n",
    "section": "\n15.5 Şekil ekleme",
    "text": "15.5 Şekil ekleme\nŞekil eklemek için aşağıdaki notasyonu kullanmalısınız:\n\n\nŞeklin ismini buraya yazınız\n\nAncak dikkat edin, bu şeklin sizin bilgisayarınızda olması gerekir. İsterseniz internetten her hangi bir şeklin bağlantısını da vererek bu işi gerçekleştirebilirisniz.\n\n\nİnternetten eklenmiş şekil",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Rmarkdown Kullanımı</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/09-rmarkdown.html#bağlantı-eklemek",
    "href": "02-veri-analizi/09-rmarkdown.html#bağlantı-eklemek",
    "title": "\n13  Rmarkdown Kullanımı\n",
    "section": "\n15.6 Bağlantı eklemek",
    "text": "15.6 Bağlantı eklemek\nÖrnek olarak üniversite adresinin bağlantısı.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Rmarkdown Kullanımı</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/09-rmarkdown.html#r-kodu-eklemek",
    "href": "02-veri-analizi/09-rmarkdown.html#r-kodu-eklemek",
    "title": "\n13  Rmarkdown Kullanımı\n",
    "section": "\n15.7 R kodu eklemek",
    "text": "15.7 R kodu eklemek\nRmarkdown’un en önemli özelliği, R kodunu kullanabilmeniz. R kodunu aşağıdaki şekilde yazınız.\n\nbitki_ismi &lt;- c(\"bitki 1\", \"bitki 2\", \"bitki 3\")\n\nbitki_ismi[2]\n\n[1] \"bitki 2\"\n\n\nR size bu kodu çalıştıracak, ve çıktsını da dökümanınız içerisinde ekleyecektir.\nİlerleyen derslerde grafikler oluşturarak bu özelliği kullanacağız.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Rmarkdown Kullanımı</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/10-bilimsel-hikaye-01.html",
    "href": "02-veri-analizi/10-bilimsel-hikaye-01.html",
    "title": "\n14  Bilimsel Hikaye Anlatımı 1\n",
    "section": "",
    "text": "14.1 Tanımlayıcı istatistikler\nTanımlayıcı istatistikler, genel olarak bir verideye üstten bir bakış atmamızı sağlar. Aslında bu veri içerisindeki ilişkileri, çıkarımsal olmayan bir şekilde görselleştirmeyi hedefliyoruz.\nVeri çerçevesinde kaç eleman var?\ndim(iris)\n\n[1] 150   5\n\nnrow(iris)\n\n[1] 150\n\nncol(iris)\n\n[1] 5\nYa da vektörlerin boyutlarını hesaplayabiliriz:\nlength(iris$Sepal.Length)\n\n[1] 150",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Bilimsel Hikaye Anlatımı 1</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/10-bilimsel-hikaye-01.html#tanımlayıcı-istatistikler",
    "href": "02-veri-analizi/10-bilimsel-hikaye-01.html#tanımlayıcı-istatistikler",
    "title": "\n14  Bilimsel Hikaye Anlatımı 1\n",
    "section": "",
    "text": "14.1.1 Frekans tabloları\nMesela bu veri çerçevesindeki tür isimleri için frekans tablosu oluşturalım. Bunun için table fonksiyonunu kullanacağız:\n\ntable(iris$Species)\n\n\n    setosa versicolor  virginica \n        50         50         50 \n\n\nPeki şimdi rakam vektörlerinde kullanalım:\n\ntable(iris$Sepal.Length)\n\n\n4.3 4.4 4.5 4.6 4.7 4.8 4.9   5 5.1 5.2 5.3 5.4 5.5 5.6 5.7 5.8 5.9   6 6.1 6.2 \n  1   3   1   4   2   5   6  10   9   4   1   6   7   6   8   7   3   6   6   4 \n6.3 6.4 6.5 6.6 6.7 6.8 6.9   7 7.1 7.2 7.3 7.4 7.6 7.7 7.9 \n  9   7   5   2   8   3   4   1   1   3   1   1   1   4   1 \n\n\nSanırım bu fonkisyon rakam vektörleri için kullanışlı değil. Rakam vektörleri için ayrı bir sistem gerek. Peki bu vektörü nasıl ifade edebiliriz?",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Bilimsel Hikaye Anlatımı 1</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/10-bilimsel-hikaye-01.html#ortalama-ortanca-ve-dağılım",
    "href": "02-veri-analizi/10-bilimsel-hikaye-01.html#ortalama-ortanca-ve-dağılım",
    "title": "\n14  Bilimsel Hikaye Anlatımı 1\n",
    "section": "\n14.2 Ortalama, ortanca ve dağılım",
    "text": "14.2 Ortalama, ortanca ve dağılım\nİlk seçeneğimiz aritmetik ortalama hesaplamak:\n\nmean(iris$Sepal.Length)\n\n[1] 5.843333\n\n\nİkinci seçeneğimiz ortanca değeri hesaplamak:\n\nmedian(iris$Sepal.Length)\n\n[1] 5.8\n\n\nOrtanca ve ortalama iki farklı istatistik aslında. Aritmetik ortalama, örneklem boyutuna bağlıdır. Bir \\(x\\) vektörünün aritmetik ortalaması ($ $), aşağıdaki gibi hesaplanabilir:\n\\[\n\\overline{x} = \\frac{\\sum_{i=i}^{n} x_{i}}{n}\n\\]\nOrtanca değer ise, bir vektörü küçükten büyüğe doğru sıraladığınzda, en ortada elde edilen değerdir. Elemanların yarısı bu değerin altında, diğer yarısı ise bu değerin üzerinde bulunur.\nPeki, verimizin sınırları ne? Bunun için tekrar summary fonksiyonuna bakalım:\n\nsummary(iris$Sepal.Length)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  4.300   5.100   5.800   5.843   6.400   7.900 \n\n\nElde ettiğimiz ilk değer, en küçük elemanı gösteriyor. En sonraki değer ise en büyük elemanı. Aynı zamanda bu şekilde de hesaplayabiliriz:\n\nmin(iris$Sepal.Length)\n\n[1] 4.3\n\nmax(iris$Sepal.Length)\n\n[1] 7.9\n\n\nAynı zamanda ortanca (median), ve aritmetik ortalama (mean) değerleri de hesaplanmış. Peki, 1st Qu. ve 3rd Qu. nedir?\nBu değerler çeyreklik olarak isimlendirilir. Elimizdeki veriyi, her bir parça toplam rakamların %25’ini içerecek şekilde 4 parçaya böldüğümüzde, elde ettiğimiz her bölge çeyreklik olarak isimlendirilir. Bu değerleri daha iyi anlamak için quantile fonksiyonunu kullanalım:\n\nquantile(iris$Sepal.Length)\n\n  0%  25%  50%  75% 100% \n 4.3  5.1  5.8  6.4  7.9 \n\n\n0% aslında en küçük değeri, 100% ise en büyük değeri gösteriyor. 4.3’ e kadar ilk çeyreklik kısım, 5.1’ye kadar ikinci çeyreklik, 6.4’e kadar üçüncü çeyreklik ve 7.9’ya kadar ise son çeyreklik kısım bulunur. İsterseniz rakamları sıralamamızı sağlayan sort fonksiyonu ile daha rahat görebiliriz:\n\nsort(iris$Sepal.Length)\n\n  [1] 4.3 4.4 4.4 4.4 4.5 4.6 4.6 4.6 4.6 4.7 4.7 4.8 4.8 4.8 4.8 4.8 4.9 4.9\n [19] 4.9 4.9 4.9 4.9 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.1 5.1 5.1 5.1\n [37] 5.1 5.1 5.1 5.1 5.1 5.2 5.2 5.2 5.2 5.3 5.4 5.4 5.4 5.4 5.4 5.4 5.5 5.5\n [55] 5.5 5.5 5.5 5.5 5.5 5.6 5.6 5.6 5.6 5.6 5.6 5.7 5.7 5.7 5.7 5.7 5.7 5.7\n [73] 5.7 5.8 5.8 5.8 5.8 5.8 5.8 5.8 5.9 5.9 5.9 6.0 6.0 6.0 6.0 6.0 6.0 6.1\n [91] 6.1 6.1 6.1 6.1 6.1 6.2 6.2 6.2 6.2 6.3 6.3 6.3 6.3 6.3 6.3 6.3 6.3 6.3\n[109] 6.4 6.4 6.4 6.4 6.4 6.4 6.4 6.5 6.5 6.5 6.5 6.5 6.6 6.6 6.7 6.7 6.7 6.7\n[127] 6.7 6.7 6.7 6.7 6.8 6.8 6.8 6.9 6.9 6.9 6.9 7.0 7.1 7.2 7.2 7.2 7.3 7.4\n[145] 7.6 7.7 7.7 7.7 7.7 7.9\n\n\nTam olmasa da, yaklaşık olarak eşit sayıda gruplar olduğu görülmekte.\nSon olarak cut isimli fonksiyonlar benzer bir çalışma yapabiliriz. Bu fonksiyon, elimizdeki bir rakam vektörünü, istediğimiz aralıklarla bölmemizi sağlar. Mesela Sepal.Length vektörünü, en küçük elemanı koruyacak şekilde 4 parçaya ayıralım:\n\ncut(iris$Sepal.Length, 4, include.lowest = TRUE)\n\n  [1] [4.3,5.2] [4.3,5.2] [4.3,5.2] [4.3,5.2] [4.3,5.2] (5.2,6.1] [4.3,5.2]\n  [8] [4.3,5.2] [4.3,5.2] [4.3,5.2] (5.2,6.1] [4.3,5.2] [4.3,5.2] [4.3,5.2]\n [15] (5.2,6.1] (5.2,6.1] (5.2,6.1] [4.3,5.2] (5.2,6.1] [4.3,5.2] (5.2,6.1]\n [22] [4.3,5.2] [4.3,5.2] [4.3,5.2] [4.3,5.2] [4.3,5.2] [4.3,5.2] [4.3,5.2]\n [29] [4.3,5.2] [4.3,5.2] [4.3,5.2] (5.2,6.1] [4.3,5.2] (5.2,6.1] [4.3,5.2]\n [36] [4.3,5.2] (5.2,6.1] [4.3,5.2] [4.3,5.2] [4.3,5.2] [4.3,5.2] [4.3,5.2]\n [43] [4.3,5.2] [4.3,5.2] [4.3,5.2] [4.3,5.2] [4.3,5.2] [4.3,5.2] (5.2,6.1]\n [50] [4.3,5.2] (6.1,7]   (6.1,7]   (6.1,7]   (5.2,6.1] (6.1,7]   (5.2,6.1]\n [57] (6.1,7]   [4.3,5.2] (6.1,7]   [4.3,5.2] [4.3,5.2] (5.2,6.1] (5.2,6.1]\n [64] (5.2,6.1] (5.2,6.1] (6.1,7]   (5.2,6.1] (5.2,6.1] (6.1,7]   (5.2,6.1]\n [71] (5.2,6.1] (5.2,6.1] (6.1,7]   (5.2,6.1] (6.1,7]   (6.1,7]   (6.1,7]  \n [78] (6.1,7]   (5.2,6.1] (5.2,6.1] (5.2,6.1] (5.2,6.1] (5.2,6.1] (5.2,6.1]\n [85] (5.2,6.1] (5.2,6.1] (6.1,7]   (6.1,7]   (5.2,6.1] (5.2,6.1] (5.2,6.1]\n [92] (5.2,6.1] (5.2,6.1] [4.3,5.2] (5.2,6.1] (5.2,6.1] (5.2,6.1] (6.1,7]  \n [99] [4.3,5.2] (5.2,6.1] (6.1,7]   (5.2,6.1] (7,7.9]   (6.1,7]   (6.1,7]  \n[106] (7,7.9]   [4.3,5.2] (7,7.9]   (6.1,7]   (7,7.9]   (6.1,7]   (6.1,7]  \n[113] (6.1,7]   (5.2,6.1] (5.2,6.1] (6.1,7]   (6.1,7]   (7,7.9]   (7,7.9]  \n[120] (5.2,6.1] (6.1,7]   (5.2,6.1] (7,7.9]   (6.1,7]   (6.1,7]   (7,7.9]  \n[127] (6.1,7]   (5.2,6.1] (6.1,7]   (7,7.9]   (7,7.9]   (7,7.9]   (6.1,7]  \n[134] (6.1,7]   (5.2,6.1] (7,7.9]   (6.1,7]   (6.1,7]   (5.2,6.1] (6.1,7]  \n[141] (6.1,7]   (6.1,7]   (5.2,6.1] (6.1,7]   (6.1,7]   (6.1,7]   (6.1,7]  \n[148] (6.1,7]   (6.1,7]   (5.2,6.1]\nLevels: [4.3,5.2] (5.2,6.1] (6.1,7] (7,7.9]\n\n\nBu işlem, vektörü 4 parçaya böldü ve her elemanı bir gruba dahil eden bir faktör vektörü geri döndürdü. Şimdi ise quantile fonksiyonunun çıktısını, kesim noktaları olarak tanımlayalım:\n\ncut(iris$Sepal.Length, quantile(iris$Sepal.Length), include.lowest = TRUE)\n\n  [1] [4.3,5.1] [4.3,5.1] [4.3,5.1] [4.3,5.1] [4.3,5.1] (5.1,5.8] [4.3,5.1]\n  [8] [4.3,5.1] [4.3,5.1] [4.3,5.1] (5.1,5.8] [4.3,5.1] [4.3,5.1] [4.3,5.1]\n [15] (5.1,5.8] (5.1,5.8] (5.1,5.8] [4.3,5.1] (5.1,5.8] [4.3,5.1] (5.1,5.8]\n [22] [4.3,5.1] [4.3,5.1] [4.3,5.1] [4.3,5.1] [4.3,5.1] [4.3,5.1] (5.1,5.8]\n [29] (5.1,5.8] [4.3,5.1] [4.3,5.1] (5.1,5.8] (5.1,5.8] (5.1,5.8] [4.3,5.1]\n [36] [4.3,5.1] (5.1,5.8] [4.3,5.1] [4.3,5.1] [4.3,5.1] [4.3,5.1] [4.3,5.1]\n [43] [4.3,5.1] [4.3,5.1] [4.3,5.1] [4.3,5.1] [4.3,5.1] [4.3,5.1] (5.1,5.8]\n [50] [4.3,5.1] (6.4,7.9] (5.8,6.4] (6.4,7.9] (5.1,5.8] (6.4,7.9] (5.1,5.8]\n [57] (5.8,6.4] [4.3,5.1] (6.4,7.9] (5.1,5.8] [4.3,5.1] (5.8,6.4] (5.8,6.4]\n [64] (5.8,6.4] (5.1,5.8] (6.4,7.9] (5.1,5.8] (5.1,5.8] (5.8,6.4] (5.1,5.8]\n [71] (5.8,6.4] (5.8,6.4] (5.8,6.4] (5.8,6.4] (5.8,6.4] (6.4,7.9] (6.4,7.9]\n [78] (6.4,7.9] (5.8,6.4] (5.1,5.8] (5.1,5.8] (5.1,5.8] (5.1,5.8] (5.8,6.4]\n [85] (5.1,5.8] (5.8,6.4] (6.4,7.9] (5.8,6.4] (5.1,5.8] (5.1,5.8] (5.1,5.8]\n [92] (5.8,6.4] (5.1,5.8] [4.3,5.1] (5.1,5.8] (5.1,5.8] (5.1,5.8] (5.8,6.4]\n [99] [4.3,5.1] (5.1,5.8] (5.8,6.4] (5.1,5.8] (6.4,7.9] (5.8,6.4] (6.4,7.9]\n[106] (6.4,7.9] [4.3,5.1] (6.4,7.9] (6.4,7.9] (6.4,7.9] (6.4,7.9] (5.8,6.4]\n[113] (6.4,7.9] (5.1,5.8] (5.1,5.8] (5.8,6.4] (6.4,7.9] (6.4,7.9] (6.4,7.9]\n[120] (5.8,6.4] (6.4,7.9] (5.1,5.8] (6.4,7.9] (5.8,6.4] (6.4,7.9] (6.4,7.9]\n[127] (5.8,6.4] (5.8,6.4] (5.8,6.4] (6.4,7.9] (6.4,7.9] (6.4,7.9] (5.8,6.4]\n[134] (5.8,6.4] (5.8,6.4] (6.4,7.9] (5.8,6.4] (5.8,6.4] (5.8,6.4] (6.4,7.9]\n[141] (6.4,7.9] (6.4,7.9] (5.1,5.8] (6.4,7.9] (6.4,7.9] (6.4,7.9] (5.8,6.4]\n[148] (6.4,7.9] (5.8,6.4] (5.8,6.4]\nLevels: [4.3,5.1] (5.1,5.8] (5.8,6.4] (6.4,7.9]\n\n\nSon olarak elde ettiğimiz faktör vektörünün frekans tablosunu elde edelim:\n\ntable(cut(iris$Sepal.Length, quantile(iris$Sepal.Length), include.lowest = TRUE))\n\n\n[4.3,5.1] (5.1,5.8] (5.8,6.4] (6.4,7.9] \n       41        39        35        35 \n\n\nYaklaşık olarak eşit gruplar elde ettik. Sonuç olarak verimizin dağılımı bu şekilde",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Bilimsel Hikaye Anlatımı 1</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/10-bilimsel-hikaye-01.html#hatta-grafiğini-yapalım",
    "href": "02-veri-analizi/10-bilimsel-hikaye-01.html#hatta-grafiğini-yapalım",
    "title": "\n14  Bilimsel Hikaye Anlatımı 1\n",
    "section": "\n14.3 Hatta grafiğini yapalım!",
    "text": "14.3 Hatta grafiğini yapalım!\nR bize aynı zamanda bu dağılımı görselleştirme imkanı da sunuyor. Mesela kutu grafikleri (boxplot) elimizdeki verinin dağılımını gösteren yegane görselleştirme metodudur. Burada boxplot fonksiyonu ile birlikte bir rakam vektörü kullanmamız gerektiğine dikkat edin lütfen. Yani sadece sürekli (continious) veri tipleriyle işlem yapabiliriz. Faktör gibi kategori (disecrete) veri tipleri tek başlarına kullanılamaz.\nBurada kullandığımız outline opsiyonu, outlier değerlerin gösterilmemesi gerektiğini belirtmektedir.\n\nboxplot(iris$Sepal.Length, outline = FALSE)\n\n\n\n\n\n\n\nKutu grafikleri, sürekli veri tiplerinin dağılımını görselleştirir. Ortadaki kalın çizgi bize ortanca değeri gösterir.\n\nEn aşağıdaki çizgi ise minimum değeri\nkesikli çizgi birinci çeyreklik kısmı\nkutu içerisinde ikinci ve üçüncü çeyreklik kısımlar ortanca değer ile ayrılır\nen üstteki değerle kutunun arasındaki kesikli çizgi ise dördüncü çeyrekliği gösterir\n\n\nsummary(iris$Sepal.Length)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  4.300   5.100   5.800   5.843   6.400   7.900 \n\n\nEn küçük değer 4.3, en büyük ise 7.9 oluyor. İstersek, petal uzunlukları için de aynısını gerçekleştirebiliriz.\n\nboxplot(iris$Petal.Length)\n\n\n\n\n\n\n\n\n14.3.1 Bağlantıları kurmak: Hikaye anlatımı\nPeki, Sepal uzunluğunun türler ile olan ilişkisi nasıldır?\n\nboxplot(iris$Sepal.Length~iris$Species)\n\n\n\n\n\n\n\nBurada ~ işareti (sağ alt tuşu + ü), soldaki değeri, sağdaki değere göre ifade et şeklinde özetlenebilir. Aslında bir değişkeni, başka bir değişken kullanarak modelliyoruz. Bu konuya ilerleyen derslerde geleceğiz.\n\n\n\n\n\n\nSoru\n\n\n\nAcaba bu grafikte ne dikkatinizi çekti? Derse 5 dakika ara veriniz ve sohbet kısmından yorumlarınızı yazınız.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Bilimsel Hikaye Anlatımı 1</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/10-bilimsel-hikaye-01.html#ggplot2-ileri-seviye-görselleştirme",
    "href": "02-veri-analizi/10-bilimsel-hikaye-01.html#ggplot2-ileri-seviye-görselleştirme",
    "title": "\n14  Bilimsel Hikaye Anlatımı 1\n",
    "section": "\n14.4 ggplot2: İleri seviye görselleştirme",
    "text": "14.4 ggplot2: İleri seviye görselleştirme\nBuraya kadar normal R grafiklerini gördük. Ancak R üzerinde başka görselleştirme kütüphaneleri de mevcuttur. Bunlardan bir tanesi de ggplot2.\nBu kütüphaneyi kullanmak için öncelikle, R içerisine yükleme yapmalyız:\n\ninstall.packages(\"ggplot2\")\n\nŞimdi yüklediğimiz kütüphaneyi, R içerisine aktaralım:\n\nlibrary(ggplot2)\n\nKutu grafiğini yapalım:\n\nggplot(data = iris, aes(x = Sepal.Length, y = Species)) + geom_boxplot()\n\n\n\n\n\n\n\nHaftaya daha ayrıntılı işleyeceğiz!",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Bilimsel Hikaye Anlatımı 1</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/11-bilimsel-hikaye-02.html",
    "href": "02-veri-analizi/11-bilimsel-hikaye-02.html",
    "title": "\n15  Bilimsel Hikaye Anlatımı 2\n",
    "section": "",
    "text": "15.1 Grafik dilbilgisi\nBir grafiği gözünüzün önüne getirin, acaba hangi ögeler var?\nMesela öncelikle boş bir grafik düzlemi oluşturalım:\nggplot()\nŞimdi veriyi ve eksenleri ekleyelim:\nggplot(data = iris, aes(x = Species, y = Petal.Length))\nSon olarak da kutu grafiğini geometrisini ekleyelim:\nggplot(data = iris, aes(x = Species, y = Petal.Length)) + geom_boxplot()\nBu mantığı kullanarak farklı geometriler ekleyelibiriz:\nggplot(data = iris, aes(x = Species, y = Petal.Length)) + geom_boxplot() + geom_point()",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Bilimsel Hikaye Anlatımı 2</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/11-bilimsel-hikaye-02.html#grafik-dilbilgisi",
    "href": "02-veri-analizi/11-bilimsel-hikaye-02.html#grafik-dilbilgisi",
    "title": "\n15  Bilimsel Hikaye Anlatımı 2\n",
    "section": "",
    "text": "Kullanılacak veri\nGrafik düzlemi\n\n\\(x\\) ve \\(y\\) eksenleri\nGörselleştirme\n\nnoktlar\nkutu grafiği vs",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Bilimsel Hikaye Anlatımı 2</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/11-bilimsel-hikaye-02.html#histogram",
    "href": "02-veri-analizi/11-bilimsel-hikaye-02.html#histogram",
    "title": "\n15  Bilimsel Hikaye Anlatımı 2\n",
    "section": "\n15.2 Histogram",
    "text": "15.2 Histogram\nPeki, Petal uzunlukları irisi bitkilerinde nasıl değişiyor?\n\nggplot(data = iris, aes(x = Petal.Length)) + geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nAcaba buradaki sütunları türlere göre boyayabilir miyiz?\n\nggplot(data = iris, aes(x = Petal.Length)) + geom_histogram(aes(fill = Species))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nDikkat ederseniz, veri çerçevesi içersindeki sütunları grafik içerisinde bir parametre olarak kullanmak istiyorsak aes() içerisine yazıyoruz.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Bilimsel Hikaye Anlatımı 2</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/11-bilimsel-hikaye-02.html#yoğunluk-grafikleri-güzel-görünen-histogramlar",
    "href": "02-veri-analizi/11-bilimsel-hikaye-02.html#yoğunluk-grafikleri-güzel-görünen-histogramlar",
    "title": "\n15  Bilimsel Hikaye Anlatımı 2\n",
    "section": "\n15.3 Yoğunluk grafikleri (güzel görünen histogramlar)",
    "text": "15.3 Yoğunluk grafikleri (güzel görünen histogramlar)\n\nggplot(data = iris, aes(x = Petal.Length)) + geom_density(aes(fill = Species), alpha = 0.8)",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Bilimsel Hikaye Anlatımı 2</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/12-bilimsel-hikaye-03.html",
    "href": "02-veri-analizi/12-bilimsel-hikaye-03.html",
    "title": "\n16  Bilimsel Hikaye Anlatımı 3\n",
    "section": "",
    "text": "İlk olarak library fonksiyonunu kullanarak “ggplot2” yi yüklüyoruz.\nBunu yazdığınızda hata alıyorsanız install.packages(“ggplot2”) yazabilirsiniz.\n\nlibrary(\"ggplot2\")\n\nggplot() Hazırlayacağımız grafiğin alt yapısını oluşturur.\nggplot içerisinde çoğunlukla veri çerçevisi kullanıyoruz, kullandığımız bilginin veri çerçevesi olması gerekiyor.\n\nggplot()\n\n\n\n\n\n\n\nÖncelikle iris veri çerçevesini kullanıyoruz, iris veri çerçevesi R içinde hazır geliyor.\nSütun isimlerini hatırlamak gerekiyor.\n\nhead(iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\nBir grafik oluşturalım. Data içerisine kullanacağımız veri çerçevesinin ismini yazmalıyız.\n\nggplot(data = iris, aes(x= Petal.Width, y = Petal.Length))\n\n\n\n\n\n\n\nBir opsiyon daha ekleyelim. Veriyi belirledik üstüne görselleştirmeler ekleyelim.\n\nggplot(data = iris, aes(x= Petal.Width, y = Petal.Length)) + geom_point()\n\n\n\n\n\n\n\nRenklendirme yapalım. Aes opsiyonu ile gerçekleştiriyoruz.\n\nggplot(data = iris, aes(x= Petal.Width, y = Petal.Length)) + geom_point(aes(color = Species))\n\n\n\n\n\n\n\n“ggtitle()” komutu ile grafiğin içine başlık ekleyebiliriz.\n\nggplot(data = iris, aes(x= Petal.Width, y = Petal.Length)) + geom_point(aes(color = Species)) + ggtitle(label = \"İris veri cercevesi\")\n\n\n\n\n\n\n\n“subtitle” ile alt başlık da oluşturabiliriz.\n\nggplot(data = iris, aes(x= Petal.Width, y = Petal.Length)) + geom_point(aes(color = Species)) + ggtitle(label = \"İris veri cercevesi\", subtitle = \"İris veri cercevesindeki bitkilerin petal uzunluk ve genisliklerinin nokta grafi ile gösterimi. Renkler, farklı turleri temsil etmekte\")\n\n\n\n\n\n\n\nİstersek bu grafiği kaydedebiliriz. Plots kısmında “Export” a tıklayıp save as pdf e tıklayıp Landscape olarak kaydedebilirsiniz.\n“xlab” ve “ylab” komutları ile grafiğin x ve y eksenini Türkçeleştirebilirsiniz fakat Türkçe olunca her zaman kaydedilemiyor.\n\nggplot(data = iris, aes(x= Petal.Width, y = Petal.Length)) + geom_point(aes(color = Species)) + ggtitle(label = \"İris veri cercevesi\", subtitle = \"İris veri cercevesindeki bitkilerin petal uzunluk ve genisliklerinin nokta grafi ile gösterimi. Renkler, farklı turleri temsil etmekte\") + xlab(\"Petal Genisligi\") + ylab(\"Petal Uzunlugu\")\n\n\n\n\n\n\n\nGrafik de türlerin şekillerini değiştirmek istersek. “shape” komutunu kullanabiliriz.\n\nggplot(data = iris, aes(x= Petal.Width, y = Petal.Length)) + geom_point(aes(color = Species, shape = Species))\n\n\n\n\n\n\n\nGrafikteki noktaların boyutlarını da değiştirebiliriz.\n\nggplot(data = iris, aes(x= Petal.Width, y = Petal.Length)) + geom_point(aes(color = Species, shape = Species, size = Sepal.Length))\n\n\n\n\n\n\n\nKutu grafikleri. Kutu grafiklerini oluşturmak için ise “geom_boxlot()” kullanmalıyız.\n\nggplot(data = iris, aes(y = Petal.Length)) + geom_boxplot()\n\n\n\n\n\n\n\n“X” eksenine türleri ekleme\n\nggplot(data = iris, aes(y = Petal.Length, x = Species)) + geom_boxplot()\n\n\n\n\n\n\n\nKutu grafiğinde renk ekleme.\n\nggplot(data = iris, aes(y = Petal.Length, x = Species)) + geom_boxplot(aes(color = Species))\n\n\n\n\n\n\n\n“Color” komutu çoğunlukla dış kısmı boyuyor. “fill” ise doldurma anlamına gelmekte iç kısımları boyuyor.\n\nggplot(data = iris, aes(y = Petal.Length, x = Species)) + geom_boxplot(aes(color = Species, fill = Species))\n\n\n\n\n\n\n\nGrafige başlık ekleme ile x ve y eksenini isimlendirme.\n\nggplot(data = iris, aes(y = Petal.Length, x = Species)) + geom_boxplot(aes(color = Species, fill = Species)) + ggtitle(label = \"İris bitkisi turlere gore sepal uzunluklar\") + xlab(\"Tur\") + ylab(\"Petal Uzunlugu\")\n\n\n\n\n\n\n\nHistogramlar bir verinin dağılımını bize veriyor. Histogramları oluştururken tek bir eksen kurmalıyız o da “X” ekseni.\n\nggplot(data = iris, aes(x = Petal.Length)) + geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nÜstekki komutu yazdığınızda uyarı alacaksınız. Bu uyarının anlamı bin boyutları oluşturduğumuz histogramda 30 farklı bin var. Bin boyutunu değiştirebiliriz.\n\nggplot(data = iris, aes(x = Petal.Length)) + geom_histogram(bins = 10)\n\n\n\n\n\n\nggplot(data = iris, aes(x = Petal.Length)) + geom_histogram(bins = 5)\n\n\n\n\n\n\nggplot(data = iris, aes(x = Petal.Length)) + geom_histogram(bins = 30)\n\n\n\n\n\n\n\n“X” Ekseni bizim belirlediğimiz değişkeni ifade ederken, “Y” ekseni ise onun frekansı(kaç tane olduğu). Bin ön tanımlı olarak 30 geliyor isterseniz değiştirebilirsiniz.\nHistogram grafiğine renk ekleyebiliriz. “fill” opsiyonunu kullanıyoruz, kutuların içini boyayacağız.\n\nggplot(data = iris, aes(x = Petal.Length)) + geom_histogram(bins = 30, aes(fill = Species))\n\n\n\n\n\n\n\nOluşturduğumuz histograma, başlık, y ve x ekseni isimleri ekleyelim.\n\nggplot(data = iris, aes(x = Petal.Length)) + geom_histogram(bins = 30, aes(fill = Species)) + ggtitle(label = \"İris bitkisinde petal uzunluklarının histogrami\") + xlab(\"Petal uzunlugu\") + ylab(\"Frekans\")\n\n\n\n\n\n\n\nHistogramın bir sonraki aşaması\nYogunluk grafikleri, histogramlara göre göze daha hoş görünen grafikler .\n\nggplot(data = iris, aes(x = Petal.Length)) + geom_density()\n\n\n\n\n\n\n\nBiraz daha güzelleştirelim\n\nggplot(data = iris, aes(x = Petal.Length)) + geom_density(aes(fill = Species))\n\n\n\n\n\n\n\nRenkleri fill opsiyonu ile verdiğimiz için üç farklı popülasyon içindeki dağılımları vermiş oldu.\nGrafiğe transparanlık ekleyelim.\n\nggplot(data = iris, aes(x = Petal.Length)) + geom_density(aes(fill = Species), alpha = 0.9)\n\n\n\n\n\n\n\nGrafiğe isim ekleyelim.\n\nggplot(data = iris, aes(x = Petal.Length)) + geom_density(aes(fill = Species), alpha = 0.9) + ggtitle(label = \"Iris bitkisinde petal uzunlukları yogunluk grafigi\")\n\n\n\n\n\n\n\nKutu grafikleri ile ilgili bir grafik. Kutu grafiğine benziyor ama yoğunlukları da vermekte.\n\nggplot(data = iris, aes(x = Species, y = Petal.Length)) + geom_violin()\n\n\n\n\n\n\n\nBu grafiği renklendirelim\n\nggplot(data = iris, aes(x = Species, y = Petal.Length)) + geom_violin(aes(fill = Species))\n\n\n\n\n\n\n\nBu grafiğin üstüne farklı görselleştirmeler ekleyebilme imkanımız var.\n\nggplot(data = iris, aes(x = Species, y = Petal.Length)) + geom_violin() + geom_point()\n\n\n\n\n\n\n\ngeom_jitter fonksiyonu ile de görselleştirme imkanımız var.\n\nggplot(data = iris, aes(x = Species, y = Petal.Length)) + geom_violin() + geom_jitter()\n\n\n\n\n\n\n\nNoktaların dağılımlarını da ayarlayabiliriz.\n\nggplot(data = iris, aes(x = Species, y = Petal.Length)) + geom_violin() + geom_jitter(width = 0.5)\n\n\n\n\n\n\nggplot(data = iris, aes(x = Species, y = Petal.Length)) + geom_violin() + geom_jitter(width = 0.1)\n\n\n\n\n\n\n\nSütun grafikleri oluşturma.\n\nggplot(data = iris, aes(y = Petal.Length)) + geom_bar()\n\n\n\n\n\n\nggplot(data = iris, aes(x = Petal.Length)) + geom_bar()",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Bilimsel Hikaye Anlatımı 3</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/13-t-test.html",
    "href": "02-veri-analizi/13-t-test.html",
    "title": "\n17  T-Test\n",
    "section": "",
    "text": "17.1 t.test()\nTanım olarak t-testi, iki grubun ortalamaları arasında anlamlı bir fark olup olmadığını test etmek için kullanılabilir.\nBunu göstermek için iki farklı dağlım simüle edelim.\ndagilim1 &lt;- rnorm(n = 1000, mean = 2, sd = 1)\ndagilim2 &lt;- rnorm(n = 1000, mean = 5, sd = 1)\nHistogramlar ile bu dağılımları inceleyelim:\npar(mfrow=c(1,2))\nhist(dagilim1)\nhist(dagilim2)\nİstersek yoğunluk grafiğiyle de bunu görselleştirebiliriz. Burada iki dağılımı alıp, bir veri çerçevesinin içersine yerleştirdik, ve dagilim1 ve dagilim2 olarak iki farklı faktör verisi oluşturduk:\nsim &lt;- data.frame(\n  dagilim = c(dagilim1, dagilim2), \n  seviye = c(\n    rep(\"dagilim1\", 1000), \n    rep(\"dagilim2\", 1000)\n    )\n  )\n\nlibrary(ggplot2)\n\nggplot(data = sim, aes(x=dagilim)) + geom_density(aes(fill = seviye), alpha = 0.9)\nDikkat ederseniz bu iki dağılımın ortalamarı birbirlerinden farklı. Peki bu fark anlamlı mı? Bunu tespit etmek için t.test kullanabiliriz:\ntest &lt;- t.test(x = dagilim1, y = dagilim2)\n\ntest\n\n\n    Welch Two Sample t-test\n\ndata:  dagilim1 and dagilim2\nt = -67.613, df = 1998, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -3.103395 -2.928439\nsample estimates:\nmean of x mean of y \n 2.009099  5.025016\nBurada dikkat etmemiz gereken iki nokta var:\nP value bizim için önemli bir değer. T testi sonunda elde ettiğimiz p-değerini şu şekilde geri döndürebiliriz:\ntest$p.value\n\n[1] 0\nDikkat ederseniz bu değer çok düşük. Bu sonuç aslında bu iki dağılımın ortalamalarının birbirlerinden farklı olduğunu gösteriyor bize.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>T-Test</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/13-t-test.html#t.test",
    "href": "02-veri-analizi/13-t-test.html#t.test",
    "title": "\n17  T-Test\n",
    "section": "",
    "text": "dağılım1, örnek sayısı = 1000, ortalama = 2, standart sapma = 1\ndağılım2, örnek sayısı = 1000, ortalama = 5, standart sapma = 2\n\n\n\n\n\n\n\n\n\n\nmean of x, mean of y satırı\np-value",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>T-Test</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/13-t-test.html#hipotez-testi",
    "href": "02-veri-analizi/13-t-test.html#hipotez-testi",
    "title": "\n17  T-Test\n",
    "section": "\n17.2 Hipotez testi",
    "text": "17.2 Hipotez testi\nBu kısım biraz kafa karıştırıcı. Eğer ilk dersleri hatırlarsanız, bilimde bir şeyi doğrudan kanıtlayamadığımızı hatırlarsınız. Bu nedenle bir hipotezi doğrudan kanıtlama imkanımız yoktur. Bir hipotezi, ancak onun karşıtını reddederek kabul edebiliriz.\nNasıl mı? Bir önceki örnekte iki dağılımın birbirinden farklı olduğu hipotezini ortaya atmıştık. Bu mantığa göre, bu hipotezi test etmenin yolu, bu hipotezin zıddını test etmekten geçer.\nYani aslında ortaya iki tane hipotez atıyoruz:\n\nH0 (sıfır hipotezi): Bu iki dağılımın ortamaları birbirine eşittir.\nHA (alternatif hipotez): Bu iki dağılımın ortalamarı birbirinden farklıdır.\n\nYapmaya çalıştığımız ise doğrudan sıfır hipotezini reddetmeye çalışmak. Bu sayede alternatif hipotezi kabul edebiliriz.\nTestimiz sonucunda bir p-değeri elde etmiştik hatırlarsınız. Bu p-değeri işte, sıfır hipotezinin oluşma olasılığını ifade etmekte. Bizim elde ettiğimiz p-değeri neydi?\n\ntest$p.value\n\n[1] 0\n\n\nBu değer çok çok çok düşük bir değer. Yani bu iki dağılımın ortalamalarının aynı olması çok düşük bir olasılık. Bu olasılığın anlamlı olup olmadığını öğrenmek için ise belirli \\(alpha\\) değerleri kullanılır:\n\n0.001 (binde 1 hata olasılığı)\n0.01 (%1 hata olasılığı)\n0.05 (%5 hata olasığı)\n\nÖrnek vermek gerekirse, 0.0001 \\(alpha\\) değeri altında elde ettiğimiz sonuç anlamlı mı?\n\ntest$p.value &lt; 0.001\n\n[1] TRUE\n\n\nŞimdi tekrar örneğimize geri dönelim:\n\ntest\n\n\n    Welch Two Sample t-test\n\ndata:  dagilim1 and dagilim2\nt = -67.613, df = 1998, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -3.103395 -2.928439\nsample estimates:\nmean of x mean of y \n 2.009099  5.025016 \n\n\nŞu satıra bakalım:\n\nalternative hypothesis: true difference in means is not equal to 0\n\nBunun anlamı aslında şu: 0.0001 hata olasılığı durumunda, bu iki dağılımın ortalamaları anlamlı bir şekilde farklı! Yani sıfır hipotezini reddedip, alternatif hipotezi kabul ediyoruz!",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>T-Test</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/13-t-test.html#ikinci-bir-örnek",
    "href": "02-veri-analizi/13-t-test.html#ikinci-bir-örnek",
    "title": "\n17  T-Test\n",
    "section": "\n17.3 İkinci bir örnek",
    "text": "17.3 İkinci bir örnek\nŞimdi ise, birbirine çok benzer iki dağılım simüle edelim:\n\ndağılım1, örnek sayısı = 1000, ortalama = 2, standart sapma = 1\ndağılım2, örnek sayısı = 1000, ortalama = 2, standart sapma = 2\n\n\ndagilim1 &lt;- rnorm(n = 1000, mean = 2, sd = 1)\ndagilim2 &lt;- rnorm(n = 1000, mean = 2, sd = 1)\n\nsim &lt;- data.frame(\n  dagilim = c(dagilim1, dagilim2), \n  seviye = c(\n    rep(\"dagilim1\", 1000), \n    rep(\"dagilim2\", 1000)\n    )\n  )\n\nlibrary(ggplot2)\n\nggplot(data = sim, aes(x=dagilim)) + geom_density(aes(fill = seviye), alpha = 0.9)\n\n\n\n\n\n\n\nDikkat ederseniz, bu dağılımların ortalamaları üst üste bindi. Peki t-testi uygularsak nasıl bir sonuç elde edeceğiz?\n\ntest &lt;- t.test(x = dagilim1, y = dagilim2)\n\ntest\n\n\n    Welch Two Sample t-test\n\ndata:  dagilim1 and dagilim2\nt = -3.3399, df = 1997.6, p-value = 0.0008534\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -0.24027979 -0.06249529\nsample estimates:\nmean of x mean of y \n 1.911038  2.062425 \n\n\nBu sonuçta bakmamız gereken şey aslında şu: Bu iki dağılımın ortalamaları çok az da olsa birbirlerinden farklı. Peki bu farklılık anlamlı mı?\n\ntest$p.value&lt; 0.001\n\n[1] TRUE\n\n\nEğer 0.001 \\(alpha\\) değerini seçtiğimizde bu iki popülasyonun ortamalarının aynı olma ihtimalinin çok yüksek olduğunu görüyoruz. Bu nedenle sıfır hipotezini reddedmiyoruz.",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>T-Test</span>"
    ]
  },
  {
    "objectID": "02-veri-analizi/13-t-test.html#iris-veri-seti-ile-çalışma",
    "href": "02-veri-analizi/13-t-test.html#iris-veri-seti-ile-çalışma",
    "title": "\n17  T-Test\n",
    "section": "\n17.4 Iris veri seti ile çalışma",
    "text": "17.4 Iris veri seti ile çalışma\nŞimdi ise iris veri seti ile çalışalım.\nPetal uzunluklarına bakabilir miyiz yine?\n\nggplot(data = iris, aes(x = Petal.Length)) + geom_density(aes(fill = Species), alpha = 0.7)\n\n\n\n\n\n\n\nAcaba, versicolor ve virginica türlerinin petal uzunlukları birbirlerinden anlamlı olarak farklı mı (\\(alpha\\) değerini 0.05 alınız)?\nÖncelikle sadece versicolor ve virginica türlerine ait petal uzunluklarının olduğu iki farklı vektör oluşturmalıyız:\n\nversicolor_petal_length  &lt;- iris$Petal.Length[iris$Species == \"versicolor\"]\nvirginica_petal_length  &lt;- iris$Petal.Length[iris$Species == \"virginica\"]\n\nŞimdi t testini uygulayalım:\n\ntest &lt;- t.test(x = versicolor_petal_length, y = virginica_petal_length)\n\nSonuçları inceleyelim:\n\ntest\n\n\n    Welch Two Sample t-test\n\ndata:  versicolor_petal_length and virginica_petal_length\nt = -12.604, df = 95.57, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -1.49549 -1.08851\nsample estimates:\nmean of x mean of y \n    4.260     5.552 \n\n\nPeki sonuç anlamlı mı?\n\ntest$p.value &lt; 0.05\n\n[1] TRUE\n\n\nEvet, versicolor ve virginica türlerinin petal uzunlukları birbirlerinden anlamlı olarak farklı!",
    "crumbs": [
      "Veri Analizi",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>T-Test</span>"
    ]
  },
  {
    "objectID": "03-bilgisayarli-dusunme/01-ileri-seviye-r-01.html",
    "href": "03-bilgisayarli-dusunme/01-ileri-seviye-r-01.html",
    "title": "\n18  Kontrol yapıları\n",
    "section": "",
    "text": "18.1 Döngüler (for)\nVeri ile çalışırken çoğunlukla belirli fonksiyonları art arda, farklı verilere uygulamamız gerekir. Dolayısıyla aynı işi döngü halinde yapmalıyız.\nBasit bir örnek verelim. Önce bir sayı vektörü oluşturalım:\nyaprak_uzunlugu &lt;- c(2.3, 3.4, 4.5, 1.2, 3.4, \n                    3, 1.8, 6.3, 2.1, 5)\nBu vektörün her elemanına 5 ekleyerek çıkan sonucu ikiye bölmek istediğimiz düşünelim. Çok mantıksız bir örnek olabilir ama olayın işleyişini kavramamıza yardımcı olacaktır.\nÖnce ilk eleman için yapalım. Vektörler ve vektörlerde indisleme konusunu hatırlamak isterseniz Bölüm 8’i tekrar gözden geçirebilirsiniz.\n(yaprak_uzunlugu[1]+5)/2\n\n[1] 3.65\nŞimdi ise ikinci eleman için bunu yapalım:\n(yaprak_uzunlugu[2]+5)/2\n\n[1] 4.2\nDikkat ederseniz sadece kullandığımız vektördeki indis değişiyor. Dolayısıyla for döngüsü kullanırsak bu işi daha kolay bir şekilde halledebiliriz.\nÖncelikle for döngüsünün genel yapısına bakalım:\nBurada DÖNGÜ ile belirtilen kısma, hangi elemanlardan bir döngü oluşturacağımızı yazıyoruz. for döngüsü bize o elemanları tek tek seçme şansı veriyor. Daha sonra süslü parantezler içerisindeli YAPILACAK İŞ adımı çalıştırılıyor.\nAncak bu yapıyı yukarıdaki gibi kullanmalıyız.\nŞimdi döngümüzü yazalım:\nfor (i in 1:length(yaprak_uzunlugu)){\n    sonuc &lt;- (yaprak_uzunlugu[i]+5)/2\n    print(sonuc)\n}\n\n[1] 3.65\n[1] 4.2\n[1] 4.75\n[1] 3.1\n[1] 4.2\n[1] 4\n[1] 3.4\n[1] 5.65\n[1] 3.55\n[1] 5\nBu işlemi yakından inceleyelim. Önce bir sayı vektörü oluşturuyoruz. Ancak bu sayı vektörünü kullanacağımız vektörün uzunluğuna göre belirliyoruz. Yani elimizde 1’den 10’a kadar bir sayı dizisi oluştuyor.\ni in 1:length(yaprak_uzunlugu) cümlesini kullandığımızda R bize elimizdeki eleman kümesini tek tek seçme şansı veriyor.\n1:length(yaprak_uzunlugu)\n\n [1]  1  2  3  4  5  6  7  8  9 10\nFor döngüsü ise i adından bir değişken oluşturuyor. Önce i değişkenine birinci eleman olan 1 değerini atıyor ve belirtilen işlemi yapıyor.\nO işlem bitince, i değerine ikinci elemanı atanıyor ve bu sefer i &lt;- 2 için işlemi gerçekleştiriyor.\nBu işlem oluşturduğumuz sayı vektörü bitene kadar devam ediyor.\nBir önceki örnekte vektördeki eleman sırasını kullandık. İstersek doğrudan vektördeki elemanları da kullanabiliriz. Bunun için ise i yerine eleman isimli bir değişken oluşturalım:\nfor (eleman in yaprak_uzunlugu){\n    sonuc &lt;- (eleman+5)/2\n    print(sonuc)\n}\n\n[1] 3.65\n[1] 4.2\n[1] 4.75\n[1] 3.1\n[1] 4.2\n[1] 4\n[1] 3.4\n[1] 5.65\n[1] 3.55\n[1] 5\nGördüğünüz iki for döngüsü de aynı işi yapmaktadır. İlk döngüde Bunu şu şekile görselleştirebiliriz (Şekil 18.1).\nfor\nilk\nBirinci elemanıseçislem\nİstenen işlemi gerçekleştirilk-&gt;islem\nson\nSon eleman mı?devam\nSonraki elemana geçson-&gt;devam\nFALSEsonlandır\nDöngüyü sonlandırson-&gt;sonlandır\nTRUEdevam-&gt;islem\nislem-&gt;son\n\n\n\n\nŞekil 18.1: for döngüsü hakkındaki diyagram",
    "crumbs": [
      "Bilgisayarlı Düşünme",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Kontrol yapıları</span>"
    ]
  },
  {
    "objectID": "03-bilgisayarli-dusunme/01-ileri-seviye-r-01.html#döngüler-for",
    "href": "03-bilgisayarli-dusunme/01-ileri-seviye-r-01.html#döngüler-for",
    "title": "\n18  Kontrol yapıları\n",
    "section": "",
    "text": "for ( ÇALIŞILACAK ELEMAN KÜMESİ ){\n    YAPILACAK İŞ\n}",
    "crumbs": [
      "Bilgisayarlı Düşünme",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Kontrol yapıları</span>"
    ]
  },
  {
    "objectID": "03-bilgisayarli-dusunme/01-ileri-seviye-r-01.html#kontrol-yapısı-if-else",
    "href": "03-bilgisayarli-dusunme/01-ileri-seviye-r-01.html#kontrol-yapısı-if-else",
    "title": "\n18  Kontrol yapıları\n",
    "section": "\n18.2 Kontrol yapısı (if-else)",
    "text": "18.2 Kontrol yapısı (if-else)\nEğer yapacağımız analiz adımında veriye bağlı olarak koşullu bir analiz gerçekleştirilecekse if-else yapısını kullanıyoruz.\nMesela, elimizde bir sayımız olsun. Eğer bu sayı 5’ten büyük veya eşit ise ekrana “Bu sayı 5’den büyük veya eşittir” yazsın. Eğer 5’den küçük ise, “Bu sayı 5’den küçüktür” yazsın.\nŞekil 18.2 bize bu işlemi şematize edecektir.\n\n\n\n\n\ng\nsayi\nSayıkontrol\n5'den büyük  veya  5'e eşitsayi-&gt;kontrol\nilk\nEkrana yazdır:5'den büyük  veya  5'e eşitkontrol-&gt;ilk\nTRUEikinci\nEkrana yazdır:5'den küçükkontrol-&gt;ikinci\nFALSEsonlandir\nİşlemi sonlandırilk-&gt;sonlandir\nikinci-&gt;sonlandir\n\n\n\n\nŞekil 18.2: if-else döngüsü hakkındaki diyagram\n\n\n\n\nİlk olarak bir sayı belirleyelim:\n\nsayi &lt;- 12\n\nİlk koşulu çalıştıralım:\n\nsayi &gt;= 5\n\n[1] TRUE\n\n\nBu işlemin sonucunda TRUE değeri geri döndürüldü. Burada bir karşılaştırma işlemi yaptık. Yani elimizdeki sayı 5’e eşit veya 5’den büyük. Ama asla 5’den küçük değil.\nŞimdi if-else yapısına bakalım:\nif ( KOŞUL ){\n    KOŞUL DOĞRU İSE BURAYI ÇALIŞTIR\n} else {\n    KOŞUL DOĞRU DEĞİL İSE BURAYI ÇALIŞTIR\n}\nİlk önce bir koşul belirliyoruz (sayının 5’e eşit veya 5’den büyük olması). Eğer bu koşul doğru ise ilk yapı çalışıyor, eğer bu koşul doğru değil ise ikinci satır çalışıyor.\nŞimdi bu örnek ile gerçekten çalışabilir bir kod yazalım:\n\nsayi &lt;- 12\n\nif (sayi &gt;= 5) {\n  print(\"bu sayi bese esit veya besten buyuktur\")\n} else{\n  print(\"bu sayi besten kucuktur\")\n}\n\n[1] \"bu sayi bese esit veya besten buyuktur\"",
    "crumbs": [
      "Bilgisayarlı Düşünme",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Kontrol yapıları</span>"
    ]
  },
  {
    "objectID": "03-bilgisayarli-dusunme/01-ileri-seviye-r-01.html#farklı-yapıları-birleştirelim",
    "href": "03-bilgisayarli-dusunme/01-ileri-seviye-r-01.html#farklı-yapıları-birleştirelim",
    "title": "\n18  Kontrol yapıları\n",
    "section": "\n18.3 Farklı yapıları birleştirelim",
    "text": "18.3 Farklı yapıları birleştirelim\nŞimdi tekrar yaprak uzunluğu örneğimize gelelim ve bu iki yapıyı birleştirelim. Bu sefer her elemana farklı işlemler uygulamaya çalışalım.\n\nyaprak_uzunlugu &lt;- c(2.3, 3.4, 4.5, 1.2, 3.4, \n                    3, 1.8, 6.3, 2.1, 5)\n\nElimizde artık iki tane koşul olsun:\n\nEğer eleman 5’den büyük veya eşitse elemana 5 ekle ve ikiye böl.\nEğer eleman 5’den küçükse elemana 10 ekle ve 3’e böl.\n\nYine örneğimiz biraz rastgele oldu. Böyle bir senaryo için if-else yapısı kullanmalıyız. Önce cevabı görelim, daha sonra adım adım inceleyelim:\n\nfor (eleman in yaprak_uzunlugu){\n    if (eleman &gt;= 5){\n        sonuc &lt;- (eleman+5)/2\n        cat(\"yaprak uzunlugu 5'den buyuk veya esit, ilk formul uygulandı:\", sonuc, \"\\n\")\n    } else {\n        sonuc &lt;- (eleman+10)/3\n        cat(\"yaprak uzunlugu 5'den kucuk, ikinci formul uygulandı:\", sonuc, \"\\n\")\n    }\n}\n\nyaprak uzunlugu 5'den kucuk, ikinci formul uygulandı: 4.1 \nyaprak uzunlugu 5'den kucuk, ikinci formul uygulandı: 4.466667 \nyaprak uzunlugu 5'den kucuk, ikinci formul uygulandı: 4.833333 \nyaprak uzunlugu 5'den kucuk, ikinci formul uygulandı: 3.733333 \nyaprak uzunlugu 5'den kucuk, ikinci formul uygulandı: 4.466667 \nyaprak uzunlugu 5'den kucuk, ikinci formul uygulandı: 4.333333 \nyaprak uzunlugu 5'den kucuk, ikinci formul uygulandı: 3.933333 \nyaprak uzunlugu 5'den buyuk veya esit, ilk formul uygulandı: 5.65 \nyaprak uzunlugu 5'den kucuk, ikinci formul uygulandı: 4.033333 \nyaprak uzunlugu 5'den buyuk veya esit, ilk formul uygulandı: 5 \n\n\nŞimdi bu yapıyı daha iyi anlamak için görselleşirelim (Şekil 18.3):\n\n\n\n\n\ng\neleman\nBirinci elemanı seçkontrol\n5'den büyük  veya  5'e eşit mi?eleman-&gt;kontrol\nilk\nBirinci formülü uygulaSonucu ekrana yazdırkontrol-&gt;ilk\nTRUEikinci\nİkinci formülü uygulaSonucu ekrana yazdırkontrol-&gt;ikinci\nFALSEson\nSon eleman mı?devam\nSonraki elemanı seçson-&gt;devam\nFALSEDöngüyü sonlandır.\nDöngüyü sonlandır.son-&gt;Döngüyü sonlandır.\nTRUEilk-&gt;son\nikinci-&gt;son\ndevam-&gt;kontrol\nBaşla\nBaşlaBaşla-&gt;eleman\n\n\n\n\nŞekil 18.3: İki kontrol yapısını da birleştirmek",
    "crumbs": [
      "Bilgisayarlı Düşünme",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Kontrol yapıları</span>"
    ]
  },
  {
    "objectID": "03-bilgisayarli-dusunme/01-ileri-seviye-r-01.html#ödev",
    "href": "03-bilgisayarli-dusunme/01-ileri-seviye-r-01.html#ödev",
    "title": "\n18  Kontrol yapıları\n",
    "section": "\n18.4 Ödev",
    "text": "18.4 Ödev\nBurada öğrendiklerimizi pekiştirmek için Bölüm 27’de bulunan ödeve bakalım ve haftaya kadar cevaplayalım.",
    "crumbs": [
      "Bilgisayarlı Düşünme",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Kontrol yapıları</span>"
    ]
  },
  {
    "objectID": "03-bilgisayarli-dusunme/02-ileri-seviye-r-02.html",
    "href": "03-bilgisayarli-dusunme/02-ileri-seviye-r-02.html",
    "title": "\n19  Fonksiyonlar\n",
    "section": "",
    "text": "19.1 Örnek fonksiyon\nİlk fonksiyonumuz çok basit bir işlemi gerçekleştirsin. İki sayıyı toplasın!\nFonksiyonumuz iki tane girdiye sahip olsun:\nÇıktısı ise sonuc olsun.\nFonksiyon ismi ise toplam olsun.\ntoplam &lt;- function(a,b){\n    sonuc &lt;- a + b\n    return(sonuc)\n}\nÖnce fonksiyon ismini toplam yazdık ve function komutu ile, R’a bir fonsksiyon yazacağımız beyan ettik. Bu fonksiyonun paramtreleri olarak kullanacağımız değişkenleri belirledik (a ve b).\nDaha sonra bu değişkenleri kullanarak işimizi gerçekleştirdik ve sonuc değişkenini oluşturduk. Bu sonuç değişkenini ise, return komutu ile geri döndürdük.\nHer fonksiyonda mutlaka bir değer geri döndürmelisiniz.\nŞimdi fonksiyonu kullanalım:\ntoplam(a = 5, b = 12)\n\n[1] 17\nŞimdi başka iki örnek kullanalım:\ntoplam(a = 12, b = 45)\n\n[1] 57",
    "crumbs": [
      "Bilgisayarlı Düşünme",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Fonksiyonlar</span>"
    ]
  },
  {
    "objectID": "03-bilgisayarli-dusunme/02-ileri-seviye-r-02.html#örnek-fonksiyon",
    "href": "03-bilgisayarli-dusunme/02-ileri-seviye-r-02.html#örnek-fonksiyon",
    "title": "\n19  Fonksiyonlar\n",
    "section": "",
    "text": "a\nb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nÖnemli\n\n\n\nFonkisyonları kullanmadan önce mutlaka tanımlamalısınız! Eğer fonksiyonu tanımlamazsanız, kullanamazsınız.",
    "crumbs": [
      "Bilgisayarlı Düşünme",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Fonksiyonlar</span>"
    ]
  },
  {
    "objectID": "03-bilgisayarli-dusunme/02-ileri-seviye-r-02.html#başka-bir-fonksiyon",
    "href": "03-bilgisayarli-dusunme/02-ileri-seviye-r-02.html#başka-bir-fonksiyon",
    "title": "\n19  Fonksiyonlar\n",
    "section": "\n19.2 Başka bir fonksiyon",
    "text": "19.2 Başka bir fonksiyon\nŞimdi ise, sıcaklık dönüşümü için bir fonksiyon yazalım. Santigrad derece cinsinden bir sıcaklık birimini Kelvin’e çevirelim.\nBu dönüşüm için, santigrad cinsinden dereceye, 273.15 eklememiz gerek.\nYazacağımız fonksiyon santigrad cinsinden sıcaklık birimini alsın ve Kelvin’e çevirsin. Fonkisyonun ismi ise kelvin_donusturucu olsun.\n\nkelvin_donusturucu &lt;- function(derece){\n    sonuc &lt;- derece + 273.15\n    return(sonuc)\n}\n\nBu fonksiyonu kullanalım şimdi:\n\nkelvin_donusturucu(derece = 30)\n\n[1] 303.15",
    "crumbs": [
      "Bilgisayarlı Düşünme",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Fonksiyonlar</span>"
    ]
  },
  {
    "objectID": "03-bilgisayarli-dusunme/03-dna-dizisi-yukleme.html",
    "href": "03-bilgisayarli-dusunme/03-dna-dizisi-yukleme.html",
    "title": "\n20  DNA ile çalışma\n",
    "section": "",
    "text": "R üzerinde DNA dizileri ile çalışabiliriz. Bunun için seqinr paketini yüklemelisiniz.\n\ninstall.packages(\"seqinr\")\n\nDaha sonra R oturumunza eklemelisniz:\n\nlibrary(seqinr)\n\nÖncelikle şu bağlantıya sağ tıklayıp farklı kaydete basalım:\nÖrnek DNA verisi\nÖncelikle veriyi okuyalım:\n\ndna &lt;- read.fasta(file = \"data/example.fna\")\n\n\n\n\n\n\n\nVerim nerede?\n\n\n\nBenim verimi indirdiğim yer, projemin çalışma klasörü içerisindeki data isimli klasör. Siz alıştırmayı yaparken, file kısmına kendi bilgisayarınızdaki veriyi verin. Yoksa hata alırsınız.\n\n\nBu işlemin soncunda elimize bir liste geçti. İsterseniz names fonksiyonu ile bu listedeki dizilerin fasta isimlerini inceleyelim:\n\nnames(dna)\n\n[1] \"ENA|BAA20512|BAA20512.1\" \"ENA|CAA23748|CAA23748.1\"\n[3] \"ENA|CAA24095|CAA24095.1\" \"ENA|CAA28435|CAA28435.1\"\n\n\nŞimdi birinci elemanı inceleyelim kısaca. Listelerde indisleme yapmayı hatırlayın. Liste içerisindeki elemanlara erişmek için [[ fonksiyonunu kullanmamız gerekir:\n\ndna[[1]]\n\n  [1] \"a\" \"t\" \"g\" \"a\" \"g\" \"t\" \"c\" \"t\" \"c\" \"t\" \"c\" \"t\" \"g\" \"a\" \"t\" \"a\" \"a\" \"g\"\n [19] \"g\" \"a\" \"c\" \"a\" \"a\" \"g\" \"g\" \"c\" \"t\" \"g\" \"c\" \"t\" \"g\" \"t\" \"g\" \"a\" \"a\" \"a\"\n [37] \"g\" \"c\" \"c\" \"c\" \"t\" \"a\" \"t\" \"g\" \"g\" \"g\" \"c\" \"t\" \"a\" \"a\" \"g\" \"a\" \"t\" \"c\"\n [55] \"a\" \"g\" \"c\" \"c\" \"c\" \"c\" \"a\" \"a\" \"a\" \"g\" \"c\" \"c\" \"g\" \"a\" \"t\" \"g\" \"a\" \"t\"\n [73] \"a\" \"t\" \"c\" \"g\" \"g\" \"c\" \"g\" \"c\" \"t\" \"g\" \"a\" \"a\" \"g\" \"c\" \"t\" \"c\" \"t\" \"c\"\n [91] \"g\" \"g\" \"c\" \"a\" \"g\" \"a\" \"a\" \"t\" \"g\" \"c\" \"t\" \"g\" \"a\" \"c\" \"c\" \"g\" \"t\" \"c\"\n[109] \"t\" \"a\" \"c\" \"c\" \"c\" \"t\" \"c\" \"a\" \"g\" \"a\" \"c\" \"c\" \"a\" \"a\" \"g\" \"a\" \"c\" \"c\"\n[127] \"t\" \"a\" \"c\" \"t\" \"t\" \"c\" \"g\" \"c\" \"t\" \"c\" \"a\" \"c\" \"t\" \"g\" \"g\" \"g\" \"a\" \"t\"\n[145] \"g\" \"a\" \"c\" \"c\" \"t\" \"g\" \"a\" \"g\" \"c\" \"c\" \"c\" \"t\" \"g\" \"g\" \"g\" \"t\" \"c\" \"c\"\n[163] \"g\" \"g\" \"t\" \"c\" \"c\" \"t\" \"g\" \"t\" \"g\" \"a\" \"a\" \"g\" \"a\" \"a\" \"g\" \"c\" \"a\" \"t\"\n[181] \"g\" \"g\" \"c\" \"a\" \"a\" \"g\" \"g\" \"t\" \"t\" \"a\" \"t\" \"c\" \"a\" \"t\" \"g\" \"g\" \"g\" \"t\"\n[199] \"g\" \"c\" \"a\" \"g\" \"t\" \"g\" \"g\" \"c\" \"c\" \"g\" \"a\" \"t\" \"g\" \"c\" \"c\" \"g\" \"t\" \"t\"\n[217] \"t\" \"c\" \"a\" \"a\" \"a\" \"a\" \"a\" \"t\" \"a\" \"g\" \"a\" \"c\" \"g\" \"a\" \"c\" \"c\" \"t\" \"t\"\n[235] \"g\" \"t\" \"g\" \"g\" \"g\" \"a\" \"g\" \"g\" \"t\" \"c\" \"t\" \"g\" \"g\" \"c\" \"c\" \"t\" \"c\" \"c\"\n[253] \"c\" \"t\" \"g\" \"a\" \"g\" \"c\" \"g\" \"a\" \"a\" \"c\" \"t\" \"t\" \"c\" \"a\" \"t\" \"g\" \"c\" \"t\"\n[271] \"t\" \"c\" \"c\" \"a\" \"a\" \"g\" \"c\" \"t\" \"g\" \"c\" \"g\" \"t\" \"g\" \"t\" \"t\" \"g\" \"a\" \"c\"\n[289] \"c\" \"c\" \"g\" \"g\" \"c\" \"c\" \"a\" \"a\" \"c\" \"t\" \"t\" \"c\" \"a\" \"a\" \"g\" \"a\" \"t\" \"c\"\n[307] \"c\" \"t\" \"c\" \"g\" \"c\" \"a\" \"c\" \"a\" \"c\" \"a\" \"a\" \"t\" \"g\" \"t\" \"c\" \"a\" \"t\" \"c\"\n[325] \"g\" \"t\" \"g\" \"g\" \"t\" \"c\" \"a\" \"t\" \"c\" \"g\" \"g\" \"c\" \"a\" \"t\" \"g\" \"c\" \"t\" \"c\"\n[343] \"t\" \"t\" \"c\" \"c\" \"c\" \"t\" \"g\" \"g\" \"a\" \"g\" \"a\" \"c\" \"t\" \"t\" \"c\" \"c\" \"c\" \"c\"\n[361] \"c\" \"c\" \"a\" \"g\" \"a\" \"g\" \"g\" \"t\" \"t\" \"c\" \"a\" \"c\" \"a\" \"t\" \"g\" \"t\" \"c\" \"a\"\n[379] \"g\" \"t\" \"t\" \"g\" \"a\" \"c\" \"a\" \"a\" \"g\" \"t\" \"t\" \"t\" \"t\" \"t\" \"c\" \"c\" \"a\" \"g\"\n[397] \"a\" \"a\" \"c\" \"t\" \"t\" \"g\" \"g\" \"c\" \"t\" \"c\" \"t\" \"g\" \"g\" \"c\" \"t\" \"c\" \"t\" \"c\"\n[415] \"t\" \"c\" \"t\" \"g\" \"a\" \"g\" \"a\" \"a\" \"g\" \"t\" \"a\" \"c\" \"c\" \"g\" \"c\" \"t\" \"a\" \"a\"\nattr(,\"name\")\n[1] \"ENA|BAA20512|BAA20512.1\"\nattr(,\"Annot\")\n[1] \"&gt;ENA|BAA20512|BAA20512.1 Cyprinus carpio (common carp) alpha-globin \"\nattr(,\"class\")\n[1] \"SeqFastadna\"\n\n\nBu aslında bir vektör. Her DNA nükletoditi, vektörün bir elemanı olarak ifade edilmektedir.\nArtık bir fasta dizisini, R içersisine aktarmayı biliyorsunuz. Tebrikler.",
    "crumbs": [
      "Bilgisayarlı Düşünme",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>DNA ile çalışma</span>"
    ]
  },
  {
    "objectID": "03-bilgisayarli-dusunme/04-dna-dizi-islemleri.html",
    "href": "03-bilgisayarli-dusunme/04-dna-dizi-islemleri.html",
    "title": "\n21  DNA ile çalışma\n",
    "section": "",
    "text": "21.1 Soru 1\nBu dosya içerisindeki birinci DNA dizisinin komplementer ipliğini, bir vektör olarak geri döndüren fonksiyonu yazınız:\ntamamlayici &lt;- function(dna){\n  # once bos bir vektor olusturalim\n  complementary &lt;- c()\n  \n  # DNA dizinin hepsini buyuk karaktere cevirelim\n  dna &lt;- toupper(dna)\n  for ( baz in dna){\n    # her baz icin asagidaki kosullari test et\n    # eger kosul uygunsa, complementary vektorune uygun bazi ekle\n    if (baz == \"A\"){complementary &lt;- c(complementary, \"T\")}\n    if (baz == \"T\"){complementary &lt;- c(complementary, \"A\")}\n    if (baz == \"G\"){complementary &lt;- c(complementary, \"C\")}\n    if (baz == \"C\"){complementary &lt;- c(complementary, \"G\")}\n  }\n  return(complementary)\n}\nŞimdi fonksiyonu test edelim:\ntamamlayici(dna[[1]])\n\n  [1] \"T\" \"A\" \"C\" \"T\" \"C\" \"A\" \"G\" \"A\" \"G\" \"A\" \"G\" \"A\" \"C\" \"T\" \"A\" \"T\" \"T\" \"C\"\n [19] \"C\" \"T\" \"G\" \"T\" \"T\" \"C\" \"C\" \"G\" \"A\" \"C\" \"G\" \"A\" \"C\" \"A\" \"C\" \"T\" \"T\" \"T\"\n [37] \"C\" \"G\" \"G\" \"G\" \"A\" \"T\" \"A\" \"C\" \"C\" \"C\" \"G\" \"A\" \"T\" \"T\" \"C\" \"T\" \"A\" \"G\"\n [55] \"T\" \"C\" \"G\" \"G\" \"G\" \"G\" \"T\" \"T\" \"T\" \"C\" \"G\" \"G\" \"C\" \"T\" \"A\" \"C\" \"T\" \"A\"\n [73] \"T\" \"A\" \"G\" \"C\" \"C\" \"G\" \"C\" \"G\" \"A\" \"C\" \"T\" \"T\" \"C\" \"G\" \"A\" \"G\" \"A\" \"G\"\n [91] \"C\" \"C\" \"G\" \"T\" \"C\" \"T\" \"T\" \"A\" \"C\" \"G\" \"A\" \"C\" \"T\" \"G\" \"G\" \"C\" \"A\" \"G\"\n[109] \"A\" \"T\" \"G\" \"G\" \"G\" \"A\" \"G\" \"T\" \"C\" \"T\" \"G\" \"G\" \"T\" \"T\" \"C\" \"T\" \"G\" \"G\"\n[127] \"A\" \"T\" \"G\" \"A\" \"A\" \"G\" \"C\" \"G\" \"A\" \"G\" \"T\" \"G\" \"A\" \"C\" \"C\" \"C\" \"T\" \"A\"\n[145] \"C\" \"T\" \"G\" \"G\" \"A\" \"C\" \"T\" \"C\" \"G\" \"G\" \"G\" \"A\" \"C\" \"C\" \"C\" \"A\" \"G\" \"G\"\n[163] \"C\" \"C\" \"A\" \"G\" \"G\" \"A\" \"C\" \"A\" \"C\" \"T\" \"T\" \"C\" \"T\" \"T\" \"C\" \"G\" \"T\" \"A\"\n[181] \"C\" \"C\" \"G\" \"T\" \"T\" \"C\" \"C\" \"A\" \"A\" \"T\" \"A\" \"G\" \"T\" \"A\" \"C\" \"C\" \"C\" \"A\"\n[199] \"C\" \"G\" \"T\" \"C\" \"A\" \"C\" \"C\" \"G\" \"G\" \"C\" \"T\" \"A\" \"C\" \"G\" \"G\" \"C\" \"A\" \"A\"\n[217] \"A\" \"G\" \"T\" \"T\" \"T\" \"T\" \"T\" \"A\" \"T\" \"C\" \"T\" \"G\" \"C\" \"T\" \"G\" \"G\" \"A\" \"A\"\n[235] \"C\" \"A\" \"C\" \"C\" \"C\" \"T\" \"C\" \"C\" \"A\" \"G\" \"A\" \"C\" \"C\" \"G\" \"G\" \"A\" \"G\" \"G\"\n[253] \"G\" \"A\" \"C\" \"T\" \"C\" \"G\" \"C\" \"T\" \"T\" \"G\" \"A\" \"A\" \"G\" \"T\" \"A\" \"C\" \"G\" \"A\"\n[271] \"A\" \"G\" \"G\" \"T\" \"T\" \"C\" \"G\" \"A\" \"C\" \"G\" \"C\" \"A\" \"C\" \"A\" \"A\" \"C\" \"T\" \"G\"\n[289] \"G\" \"G\" \"C\" \"C\" \"G\" \"G\" \"T\" \"T\" \"G\" \"A\" \"A\" \"G\" \"T\" \"T\" \"C\" \"T\" \"A\" \"G\"\n[307] \"G\" \"A\" \"G\" \"C\" \"G\" \"T\" \"G\" \"T\" \"G\" \"T\" \"T\" \"A\" \"C\" \"A\" \"G\" \"T\" \"A\" \"G\"\n[325] \"C\" \"A\" \"C\" \"C\" \"A\" \"G\" \"T\" \"A\" \"G\" \"C\" \"C\" \"G\" \"T\" \"A\" \"C\" \"G\" \"A\" \"G\"\n[343] \"A\" \"A\" \"G\" \"G\" \"G\" \"A\" \"C\" \"C\" \"T\" \"C\" \"T\" \"G\" \"A\" \"A\" \"G\" \"G\" \"G\" \"G\"\n[361] \"G\" \"G\" \"T\" \"C\" \"T\" \"C\" \"C\" \"A\" \"A\" \"G\" \"T\" \"G\" \"T\" \"A\" \"C\" \"A\" \"G\" \"T\"\n[379] \"C\" \"A\" \"A\" \"C\" \"T\" \"G\" \"T\" \"T\" \"C\" \"A\" \"A\" \"A\" \"A\" \"A\" \"G\" \"G\" \"T\" \"C\"\n[397] \"T\" \"T\" \"G\" \"A\" \"A\" \"C\" \"C\" \"G\" \"A\" \"G\" \"A\" \"C\" \"C\" \"G\" \"A\" \"G\" \"A\" \"G\"\n[415] \"A\" \"G\" \"A\" \"C\" \"T\" \"C\" \"T\" \"T\" \"C\" \"A\" \"T\" \"G\" \"G\" \"C\" \"G\" \"A\" \"T\" \"T\"",
    "crumbs": [
      "Bilgisayarlı Düşünme",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>DNA ile çalışma</span>"
    ]
  },
  {
    "objectID": "03-bilgisayarli-dusunme/04-dna-dizi-islemleri.html#soru-2-gc-oranı-bulma",
    "href": "03-bilgisayarli-dusunme/04-dna-dizi-islemleri.html#soru-2-gc-oranı-bulma",
    "title": "\n21  DNA ile çalışma\n",
    "section": "\n21.2 Soru 2: G+C oranı bulma",
    "text": "21.2 Soru 2: G+C oranı bulma\nBir DNA dizisindeki G + C nükleotidi oranını aşağıdaki şekilde bulabilirsiniz.\n\\[\nGC = \\frac{G+C}{A+G+C+T}\n\\] Yüklediğimiz fasta dosyasında, birinci DNA dizinin GC oranını bulan fonksiyonu yazınız.",
    "crumbs": [
      "Bilgisayarlı Düşünme",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>DNA ile çalışma</span>"
    ]
  },
  {
    "objectID": "03-bilgisayarli-dusunme/04-dna-dizi-islemleri.html#soru-3-amino-asit-birincil-ipliği-oluşturma",
    "href": "03-bilgisayarli-dusunme/04-dna-dizi-islemleri.html#soru-3-amino-asit-birincil-ipliği-oluşturma",
    "title": "\n21  DNA ile çalışma\n",
    "section": "\n21.3 Soru 3: Amino asit birincil ipliği oluşturma",
    "text": "21.3 Soru 3: Amino asit birincil ipliği oluşturma\nŞu dosyaya sağ tıklayıp farklı kaydete basınız.\nBu dosyada DNA kodon tablosu bulunmaktadır. Bu dosyayı kullanarak fasta dosyasında bulunan birinci DNA dizisini bir amino asit vektörü olarak geri döndüren fonksiyonu yazınız.",
    "crumbs": [
      "Bilgisayarlı Düşünme",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>DNA ile çalışma</span>"
    ]
  },
  {
    "objectID": "03-bilgisayarli-dusunme/05-dna-dizi-islemleri.html",
    "href": "03-bilgisayarli-dusunme/05-dna-dizi-islemleri.html",
    "title": "\n22  DNA dizi işlemleri - 3\n",
    "section": "",
    "text": "22.1 Hamming uzaklığı\nİki DNA dizisi arasındaki tespit edilen Nükleotid farklılıkları, Moleküler Biyoloji’de filogenetik analizler ya da mikrodizin teknolojisi (Mohammadi-Kambs vd. 2017) gibi farklı alanlarında işimize yaramaktadır. Örnek vermek gerekirse, biyoinformatik dersinde gördüğümüz filogenetik ağaçları oluşturmak için uzaklık matrisi oluşturmuştuk. Uzaklık matrisi aslında DNA dizileri arasındaki farklılıkları belirtmektedir. Bu farklılıklardan bir tanesi de DNA dizileri arasındaki tek nükleotid farklılıklarının toplamıdır.\nAşağıdaki iki farklı diziyi inceleyelim:\nAcaba kaç tane tek nükleotid farklılığı var? Sadece üç pozisyonda eşleşme yok.\nHamming uzaklığı eşit uzunluğa sahip iki karakter vektörünün sembolleri arasında gözlenen toplam pozisyonel farklılıklardır.\nBu bilgiyi kullanarak aşağıdaki iki dizi arasındaki tek nükleotid farklılıklarını geri döndüren fonksiyonu yazınız. Fonksiyonun ismi hamming_uzakligi olsun. Bu fonksiyonu oluştururken for ve if-else yapılarını kullanınız.\ndizi1 &lt;- c(\"G\", \"A\", \"G\", \"C\", \"C\", \"T\", \"A\", \"C\", \"T\", \"A\", \"A\", \"T\", \"G\", \"G\", \"G\", \"A\", \"T\")\n  \ndizi2 &lt;- c(\"C\", \"A\", \"T\", \"C\", \"C\", \"T\", \"G\", \"C\", \"T\", \"G\", \"C\", \"C\", \"G\", \"G\", \"G\", \"G\", \"T\")",
    "crumbs": [
      "Bilgisayarlı Düşünme",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>DNA dizi işlemleri - 3</span>"
    ]
  },
  {
    "objectID": "03-bilgisayarli-dusunme/05-dna-dizi-islemleri.html#hamming-uzaklığı",
    "href": "03-bilgisayarli-dusunme/05-dna-dizi-islemleri.html#hamming-uzaklığı",
    "title": "\n22  DNA dizi işlemleri - 3\n",
    "section": "",
    "text": "A T G C T A T C\nA G G C T T A C\n\n\n\n\n\n\n\n\n\n\nİpucu\n\n\n\nİki farklı karakter birbirine eşit olmadığı sorgusunu yapmak için != (eşit değil mi?) yapısını kullanabilirsiniz. Eğer karakterler eşit değilse TRUE değeri geri döndürülecektir.\n\n\"A\" != \"T\"\n\n[1] TRUE\n\n\n\n\n\n\n\n\n\n\nNot\n\n\n\nBu fonksiyonu for ve if-else yapılarını kullanmadan da yazabilirsiniz. Ancak amacımız şu anda bu yapıların kullanımını öğrenmek olduğu için kendinizi biraz zorlayın.",
    "crumbs": [
      "Bilgisayarlı Düşünme",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>DNA dizi işlemleri - 3</span>"
    ]
  },
  {
    "objectID": "03-bilgisayarli-dusunme/05-dna-dizi-islemleri.html#gc-kayması",
    "href": "03-bilgisayarli-dusunme/05-dna-dizi-islemleri.html#gc-kayması",
    "title": "\n22  DNA dizi işlemleri - 3\n",
    "section": "\n22.2 GC kayması",
    "text": "22.2 GC kayması\nNormalde nükleotidlerin genom içerisinde rastgele bir şekilde homojen olarak dağılması beklenir. Ancak bazı durumlarda bu gerçekleşmez ve genomun farklı bölgelerinde nükleotid oranları değişebilir (Lu 2020). Bu durum özellikle bakteri genomlarında daha sık bir şekilde gözlenir ve DNA’nın iki farklı ipliğinde nükleotid oranlarında bir farklılaşmaya sebep olur.\nBu değişim sayesinde, bakterilerde replikasyon başlangıç noktasını tespit edebiliriz.\nGC kaymasını aşağıdaki formüle göre hesaplayabilriz:\n\\[\nGC = \\frac{G-C}{G+C}\n\\]\nBu formül uyarınca, aşağıdaki DNA dizisinin GC kayma değerini hesaplayan fonksiyonu yazınız. Fonksiyonun ismi GC_kaymasi olsun.\n\ndizi &lt;- c(\"G\", \"A\", \"G\", \"C\", \"C\", \"T\", \"A\", \"C\", \"T\", \"A\", \"A\", \"T\", \"G\", \"G\", \"G\", \"A\", \"T\", \"C\", \"A\", \"T\", \"C\", \"C\", \"T\", \"G\", \"C\", \"T\", \"G\", \"C\", \"C\", \"G\", \"G\", \"G\", \"G\", \"T\")\n\n\n\n\n\n\n\nİpucu\n\n\n\nÖnceki derslerde yazdığımız GC değerini hesaplayan fonksiyonu hatırayınız.\n\n\n\n\n\n\nLu, Steven L., Jennifer AND Salzberg. 2020. “SkewIT: The Skew Index Test for large-scale GC Skew analysis of bacterial genomes”. PLOS Computational Biology 16 (12): 1-16. https://doi.org/10.1371/journal.pcbi.1008439.\n\n\nMohammadi-Kambs, Mina, Kathrin Hölz, Mark M. Somoza, ve Albrecht Ott. 2017. “Hamming Distance as a Concept in DNA Molecular Recognition”. ACS Omega 2 (4): 1302-8. https://doi.org/10.1021/acsomega.7b00053.",
    "crumbs": [
      "Bilgisayarlı Düşünme",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>DNA dizi işlemleri - 3</span>"
    ]
  },
  {
    "objectID": "03-bilgisayarli-dusunme/06-adim-adim-kodlama-translasyon.html",
    "href": "03-bilgisayarli-dusunme/06-adim-adim-kodlama-translasyon.html",
    "title": "\n23  Translasyon fonksiyonu anlatımı\n",
    "section": "",
    "text": "23.1 Ön bilgileri yükleyelim\nBurada internet sitesinin github sayfasında bulunan dosyalar internet üzerinden yüklenmektedir. Dosyaları bu şekilde de yükleyebilirsiniz. Ayrıntılı bilgi için: {Bölüm 12}\nŞimdi DNA dizisini yükleyelim:\nfasta &lt;- read.fasta(file = \"https://raw.githubusercontent.com/emrahkirdok/ybva/main/03-bilgisayarli-dusunme/data/example.fna\", forceDNAtolower = FALSE)\nBir sonraki adımda, kodon dosyamızı yükleyelim:\nkodon &lt;- read.table(file = \"https://raw.githubusercontent.com/emrahkirdok/ybva/main/03-bilgisayarli-dusunme/data/codon.txt\", sep = \"\\t\", header = TRUE)",
    "crumbs": [
      "Bilgisayarlı Düşünme",
      "<span class='chapter-number'>23</span>  <span class='chapter-title'>Translasyon fonksiyonu anlatımı</span>"
    ]
  },
  {
    "objectID": "03-bilgisayarli-dusunme/06-adim-adim-kodlama-translasyon.html#bir-kodonu-nasıl-seçebiliriz",
    "href": "03-bilgisayarli-dusunme/06-adim-adim-kodlama-translasyon.html#bir-kodonu-nasıl-seçebiliriz",
    "title": "\n23  Translasyon fonksiyonu anlatımı\n",
    "section": "\n23.2 Bir kodonu nasıl seçebiliriz?",
    "text": "23.2 Bir kodonu nasıl seçebiliriz?\nÖnce örnek bir DNA verisi oluşturalım:\n\nornek &lt;- c(\"A\", \"T\", \"G\", \"A\", \"C\" , \"G\", \"A\", \"T\", \"T\", \"T\", \"G\", \"A\")\n\nBirinci kodon:\n\nornek[1:3]\n\n[1] \"A\" \"T\" \"G\"\n\n\nİkinci kodon:\n\nornek[4:6]\n\n[1] \"A\" \"C\" \"G\"\n\n\nŞimdi başlangıç pozisyonlarını oluşturalım:\n\nbaslangic &lt;- seq(1,(length(ornek)-2), 3)\n\nŞimdi kodonları tek tek seçelim:\n\nfor (i in baslangic){\n  secilen_kodon &lt;- ornek[i:(i+2)]\n  cat(\"Secilen kodon: \", secilen_kodon, \"\\n\")\n}\n\nSecilen kodon:  A T G \nSecilen kodon:  A C G \nSecilen kodon:  A T T \nSecilen kodon:  T G A \n\n\nAncak geri döndürdüğümüz secilen_kodon değeri aslında bir vektör. Kodon tablosunda arama yapmak için, bunu vektöre çevirmeliyiz. Bir örnek:\n\npaste(ornek[4:6], collapse=\"\")\n\n[1] \"ACG\"\n\n\nŞimdi bunu da for döngümüze ekleyelim:\n\nfor (i in baslangic){\n  secilen_kodon &lt;- ornek[i:(i+2)]\n  secilen_kodon &lt;- paste(secilen_kodon, collapse = \"\")\n  cat(\"Secilen kodon: \", secilen_kodon, \"\\n\")\n}\n\nSecilen kodon:  ATG \nSecilen kodon:  ACG \nSecilen kodon:  ATT \nSecilen kodon:  TGA \n\n\nArtık, kodon veri setinde bulunan kodon listesi içerisinde arama yapabiliriz. Şimdi seçtiğimiz kodona uygun amino asiti geri döndürelim:\n\nfor (i in baslangic){\n  secilen_kodon &lt;- ornek[i:(i+2)]\n  secilen_kodon &lt;- paste(secilen_kodon, collapse = \"\")\n  aa &lt;- kodon[kodon$Codon == secilen_kodon, 2]\n  \n  cat(\"Secilen kodon:\", secilen_kodon, \"kodona karsilik gelen amino asit:\", aa, \"\\n\")\n}\n\nSecilen kodon: ATG kodona karsilik gelen amino asit: Met \nSecilen kodon: ACG kodona karsilik gelen amino asit: Thr \nSecilen kodon: ATT kodona karsilik gelen amino asit: Ile \nSecilen kodon: TGA kodona karsilik gelen amino asit: Stp \n\n\nPeki amino asit ipliğini nasıl oluşturabilriz?\n\naa_ipligi &lt;- c()\n\nfor (i in baslangic){\n  secilen_kodon &lt;- ornek[i:(i+2)]\n  secilen_kodon &lt;- paste(secilen_kodon, collapse = \"\")\n  aa &lt;- kodon[kodon$Codon == secilen_kodon, 2]\n  aa_ipligi &lt;- c(aa_ipligi, aa)\n  cat(\"Secilen kodon:\", secilen_kodon, \"kodona karsilik gelen amino asit:\", aa, \"\\n\")\n}\n\nSecilen kodon: ATG kodona karsilik gelen amino asit: Met \nSecilen kodon: ACG kodona karsilik gelen amino asit: Thr \nSecilen kodon: ATT kodona karsilik gelen amino asit: Ile \nSecilen kodon: TGA kodona karsilik gelen amino asit: Stp \n\ncat(aa_ipligi)\n\nMet Thr Ile Stp",
    "crumbs": [
      "Bilgisayarlı Düşünme",
      "<span class='chapter-number'>23</span>  <span class='chapter-title'>Translasyon fonksiyonu anlatımı</span>"
    ]
  },
  {
    "objectID": "03-bilgisayarli-dusunme/06-adim-adim-kodlama-translasyon.html#bunu-bir-fonksiyona-dönüştürelim",
    "href": "03-bilgisayarli-dusunme/06-adim-adim-kodlama-translasyon.html#bunu-bir-fonksiyona-dönüştürelim",
    "title": "\n23  Translasyon fonksiyonu anlatımı\n",
    "section": "\n23.3 Bunu bir fonksiyona dönüştürelim",
    "text": "23.3 Bunu bir fonksiyona dönüştürelim\n\ntranslasyon &lt;- function(ornek, kodon){\n  aa_ipligi &lt;- c()\n  baslangic &lt;- seq(1,(length(ornek)-2), 3)\n  \n  for (i in baslangic){\n    secilen_kodon &lt;- ornek[i:(i+2)]\n    secilen_kodon &lt;- paste(secilen_kodon, collapse = \"\")\n    aa &lt;- kodon[kodon$Codon == secilen_kodon, 2]\n    aa_ipligi &lt;- c(aa_ipligi, aa)\n    cat(\"Secilen kodon:\", secilen_kodon, \"kodona karsilik gelen amino asit:\", aa, \"\\n\")\n  }\n  return(aa_ipligi)\n}\n\nŞimdi bu fonksiyonu kullanalım:\n\ntranslasyon(ornek = ornek, kodon = kodon)\n\nSecilen kodon: ATG kodona karsilik gelen amino asit: Met \nSecilen kodon: ACG kodona karsilik gelen amino asit: Thr \nSecilen kodon: ATT kodona karsilik gelen amino asit: Ile \nSecilen kodon: TGA kodona karsilik gelen amino asit: Stp \n\n\n[1] \"Met\" \"Thr\" \"Ile\" \"Stp\"\n\n\nDerste kullandığımız DNA dizilerini kullanalım:\n\ntranslasyon(ornek = fasta[[1]], kodon = kodon)\n\nSecilen kodon: ATG kodona karsilik gelen amino asit: Met \nSecilen kodon: AGT kodona karsilik gelen amino asit: Ser \nSecilen kodon: CTC kodona karsilik gelen amino asit: Leu \nSecilen kodon: TCT kodona karsilik gelen amino asit: Ser \nSecilen kodon: GAT kodona karsilik gelen amino asit: Asp \nSecilen kodon: AAG kodona karsilik gelen amino asit: Lys \nSecilen kodon: GAC kodona karsilik gelen amino asit: Asp \nSecilen kodon: AAG kodona karsilik gelen amino asit: Lys \nSecilen kodon: GCT kodona karsilik gelen amino asit: Ala \nSecilen kodon: GCT kodona karsilik gelen amino asit: Ala \nSecilen kodon: GTG kodona karsilik gelen amino asit: Val \nSecilen kodon: AAA kodona karsilik gelen amino asit: Lys \nSecilen kodon: GCC kodona karsilik gelen amino asit: Ala \nSecilen kodon: CTA kodona karsilik gelen amino asit: Leu \nSecilen kodon: TGG kodona karsilik gelen amino asit: Trp \nSecilen kodon: GCT kodona karsilik gelen amino asit: Ala \nSecilen kodon: AAG kodona karsilik gelen amino asit: Lys \nSecilen kodon: ATC kodona karsilik gelen amino asit: Ile \nSecilen kodon: AGC kodona karsilik gelen amino asit: Ser \nSecilen kodon: CCC kodona karsilik gelen amino asit: Pro \nSecilen kodon: AAA kodona karsilik gelen amino asit: Lys \nSecilen kodon: GCC kodona karsilik gelen amino asit: Ala \nSecilen kodon: GAT kodona karsilik gelen amino asit: Asp \nSecilen kodon: GAT kodona karsilik gelen amino asit: Asp \nSecilen kodon: ATC kodona karsilik gelen amino asit: Ile \nSecilen kodon: GGC kodona karsilik gelen amino asit: Gly \nSecilen kodon: GCT kodona karsilik gelen amino asit: Ala \nSecilen kodon: GAA kodona karsilik gelen amino asit: Glu \nSecilen kodon: GCT kodona karsilik gelen amino asit: Ala \nSecilen kodon: CTC kodona karsilik gelen amino asit: Leu \nSecilen kodon: GGC kodona karsilik gelen amino asit: Gly \nSecilen kodon: AGA kodona karsilik gelen amino asit: Arg \nSecilen kodon: ATG kodona karsilik gelen amino asit: Met \nSecilen kodon: CTG kodona karsilik gelen amino asit: Leu \nSecilen kodon: ACC kodona karsilik gelen amino asit: Thr \nSecilen kodon: GTC kodona karsilik gelen amino asit: Val \nSecilen kodon: TAC kodona karsilik gelen amino asit: Tyr \nSecilen kodon: CCT kodona karsilik gelen amino asit: Pro \nSecilen kodon: CAG kodona karsilik gelen amino asit: Gln \nSecilen kodon: ACC kodona karsilik gelen amino asit: Thr \nSecilen kodon: AAG kodona karsilik gelen amino asit: Lys \nSecilen kodon: ACC kodona karsilik gelen amino asit: Thr \nSecilen kodon: TAC kodona karsilik gelen amino asit: Tyr \nSecilen kodon: TTC kodona karsilik gelen amino asit: Phe \nSecilen kodon: GCT kodona karsilik gelen amino asit: Ala \nSecilen kodon: CAC kodona karsilik gelen amino asit: His \nSecilen kodon: TGG kodona karsilik gelen amino asit: Trp \nSecilen kodon: GAT kodona karsilik gelen amino asit: Asp \nSecilen kodon: GAC kodona karsilik gelen amino asit: Asp \nSecilen kodon: CTG kodona karsilik gelen amino asit: Leu \nSecilen kodon: AGC kodona karsilik gelen amino asit: Ser \nSecilen kodon: CCT kodona karsilik gelen amino asit: Pro \nSecilen kodon: GGG kodona karsilik gelen amino asit: Gly \nSecilen kodon: TCC kodona karsilik gelen amino asit: Ser \nSecilen kodon: GGT kodona karsilik gelen amino asit: Gly \nSecilen kodon: CCT kodona karsilik gelen amino asit: Pro \nSecilen kodon: GTG kodona karsilik gelen amino asit: Val \nSecilen kodon: AAG kodona karsilik gelen amino asit: Lys \nSecilen kodon: AAG kodona karsilik gelen amino asit: Lys \nSecilen kodon: CAT kodona karsilik gelen amino asit: His \nSecilen kodon: GGC kodona karsilik gelen amino asit: Gly \nSecilen kodon: AAG kodona karsilik gelen amino asit: Lys \nSecilen kodon: GTT kodona karsilik gelen amino asit: Val \nSecilen kodon: ATC kodona karsilik gelen amino asit: Ile \nSecilen kodon: ATG kodona karsilik gelen amino asit: Met \nSecilen kodon: GGT kodona karsilik gelen amino asit: Gly \nSecilen kodon: GCA kodona karsilik gelen amino asit: Ala \nSecilen kodon: GTG kodona karsilik gelen amino asit: Val \nSecilen kodon: GCC kodona karsilik gelen amino asit: Ala \nSecilen kodon: GAT kodona karsilik gelen amino asit: Asp \nSecilen kodon: GCC kodona karsilik gelen amino asit: Ala \nSecilen kodon: GTT kodona karsilik gelen amino asit: Val \nSecilen kodon: TCA kodona karsilik gelen amino asit: Ser \nSecilen kodon: AAA kodona karsilik gelen amino asit: Lys \nSecilen kodon: ATA kodona karsilik gelen amino asit: Ile \nSecilen kodon: GAC kodona karsilik gelen amino asit: Asp \nSecilen kodon: GAC kodona karsilik gelen amino asit: Asp \nSecilen kodon: CTT kodona karsilik gelen amino asit: Leu \nSecilen kodon: GTG kodona karsilik gelen amino asit: Val \nSecilen kodon: GGA kodona karsilik gelen amino asit: Gly \nSecilen kodon: GGT kodona karsilik gelen amino asit: Gly \nSecilen kodon: CTG kodona karsilik gelen amino asit: Leu \nSecilen kodon: GCC kodona karsilik gelen amino asit: Ala \nSecilen kodon: TCC kodona karsilik gelen amino asit: Ser \nSecilen kodon: CTG kodona karsilik gelen amino asit: Leu \nSecilen kodon: AGC kodona karsilik gelen amino asit: Ser \nSecilen kodon: GAA kodona karsilik gelen amino asit: Glu \nSecilen kodon: CTT kodona karsilik gelen amino asit: Leu \nSecilen kodon: CAT kodona karsilik gelen amino asit: His \nSecilen kodon: GCT kodona karsilik gelen amino asit: Ala \nSecilen kodon: TCC kodona karsilik gelen amino asit: Ser \nSecilen kodon: AAG kodona karsilik gelen amino asit: Lys \nSecilen kodon: CTG kodona karsilik gelen amino asit: Leu \nSecilen kodon: CGT kodona karsilik gelen amino asit: Arg \nSecilen kodon: GTT kodona karsilik gelen amino asit: Val \nSecilen kodon: GAC kodona karsilik gelen amino asit: Asp \nSecilen kodon: CCG kodona karsilik gelen amino asit: Pro \nSecilen kodon: GCC kodona karsilik gelen amino asit: Ala \nSecilen kodon: AAC kodona karsilik gelen amino asit: Asn \nSecilen kodon: TTC kodona karsilik gelen amino asit: Phe \nSecilen kodon: AAG kodona karsilik gelen amino asit: Lys \nSecilen kodon: ATC kodona karsilik gelen amino asit: Ile \nSecilen kodon: CTC kodona karsilik gelen amino asit: Leu \nSecilen kodon: GCA kodona karsilik gelen amino asit: Ala \nSecilen kodon: CAC kodona karsilik gelen amino asit: His \nSecilen kodon: AAT kodona karsilik gelen amino asit: Asn \nSecilen kodon: GTC kodona karsilik gelen amino asit: Val \nSecilen kodon: ATC kodona karsilik gelen amino asit: Ile \nSecilen kodon: GTG kodona karsilik gelen amino asit: Val \nSecilen kodon: GTC kodona karsilik gelen amino asit: Val \nSecilen kodon: ATC kodona karsilik gelen amino asit: Ile \nSecilen kodon: GGC kodona karsilik gelen amino asit: Gly \nSecilen kodon: ATG kodona karsilik gelen amino asit: Met \nSecilen kodon: CTC kodona karsilik gelen amino asit: Leu \nSecilen kodon: TTC kodona karsilik gelen amino asit: Phe \nSecilen kodon: CCT kodona karsilik gelen amino asit: Pro \nSecilen kodon: GGA kodona karsilik gelen amino asit: Gly \nSecilen kodon: GAC kodona karsilik gelen amino asit: Asp \nSecilen kodon: TTC kodona karsilik gelen amino asit: Phe \nSecilen kodon: CCC kodona karsilik gelen amino asit: Pro \nSecilen kodon: CCA kodona karsilik gelen amino asit: Pro \nSecilen kodon: GAG kodona karsilik gelen amino asit: Glu \nSecilen kodon: GTT kodona karsilik gelen amino asit: Val \nSecilen kodon: CAC kodona karsilik gelen amino asit: His \nSecilen kodon: ATG kodona karsilik gelen amino asit: Met \nSecilen kodon: TCA kodona karsilik gelen amino asit: Ser \nSecilen kodon: GTT kodona karsilik gelen amino asit: Val \nSecilen kodon: GAC kodona karsilik gelen amino asit: Asp \nSecilen kodon: AAG kodona karsilik gelen amino asit: Lys \nSecilen kodon: TTT kodona karsilik gelen amino asit: Phe \nSecilen kodon: TTC kodona karsilik gelen amino asit: Phe \nSecilen kodon: CAG kodona karsilik gelen amino asit: Gln \nSecilen kodon: AAC kodona karsilik gelen amino asit: Asn \nSecilen kodon: TTG kodona karsilik gelen amino asit: Leu \nSecilen kodon: GCT kodona karsilik gelen amino asit: Ala \nSecilen kodon: CTG kodona karsilik gelen amino asit: Leu \nSecilen kodon: GCT kodona karsilik gelen amino asit: Ala \nSecilen kodon: CTC kodona karsilik gelen amino asit: Leu \nSecilen kodon: TCT kodona karsilik gelen amino asit: Ser \nSecilen kodon: GAG kodona karsilik gelen amino asit: Glu \nSecilen kodon: AAG kodona karsilik gelen amino asit: Lys \nSecilen kodon: TAC kodona karsilik gelen amino asit: Tyr \nSecilen kodon: CGC kodona karsilik gelen amino asit: Arg \nSecilen kodon: TAA kodona karsilik gelen amino asit: Stp \n\n\n  [1] \"Met\" \"Ser\" \"Leu\" \"Ser\" \"Asp\" \"Lys\" \"Asp\" \"Lys\" \"Ala\" \"Ala\" \"Val\" \"Lys\"\n [13] \"Ala\" \"Leu\" \"Trp\" \"Ala\" \"Lys\" \"Ile\" \"Ser\" \"Pro\" \"Lys\" \"Ala\" \"Asp\" \"Asp\"\n [25] \"Ile\" \"Gly\" \"Ala\" \"Glu\" \"Ala\" \"Leu\" \"Gly\" \"Arg\" \"Met\" \"Leu\" \"Thr\" \"Val\"\n [37] \"Tyr\" \"Pro\" \"Gln\" \"Thr\" \"Lys\" \"Thr\" \"Tyr\" \"Phe\" \"Ala\" \"His\" \"Trp\" \"Asp\"\n [49] \"Asp\" \"Leu\" \"Ser\" \"Pro\" \"Gly\" \"Ser\" \"Gly\" \"Pro\" \"Val\" \"Lys\" \"Lys\" \"His\"\n [61] \"Gly\" \"Lys\" \"Val\" \"Ile\" \"Met\" \"Gly\" \"Ala\" \"Val\" \"Ala\" \"Asp\" \"Ala\" \"Val\"\n [73] \"Ser\" \"Lys\" \"Ile\" \"Asp\" \"Asp\" \"Leu\" \"Val\" \"Gly\" \"Gly\" \"Leu\" \"Ala\" \"Ser\"\n [85] \"Leu\" \"Ser\" \"Glu\" \"Leu\" \"His\" \"Ala\" \"Ser\" \"Lys\" \"Leu\" \"Arg\" \"Val\" \"Asp\"\n [97] \"Pro\" \"Ala\" \"Asn\" \"Phe\" \"Lys\" \"Ile\" \"Leu\" \"Ala\" \"His\" \"Asn\" \"Val\" \"Ile\"\n[109] \"Val\" \"Val\" \"Ile\" \"Gly\" \"Met\" \"Leu\" \"Phe\" \"Pro\" \"Gly\" \"Asp\" \"Phe\" \"Pro\"\n[121] \"Pro\" \"Glu\" \"Val\" \"His\" \"Met\" \"Ser\" \"Val\" \"Asp\" \"Lys\" \"Phe\" \"Phe\" \"Gln\"\n[133] \"Asn\" \"Leu\" \"Ala\" \"Leu\" \"Ala\" \"Leu\" \"Ser\" \"Glu\" \"Lys\" \"Tyr\" \"Arg\" \"Stp\"",
    "crumbs": [
      "Bilgisayarlı Düşünme",
      "<span class='chapter-number'>23</span>  <span class='chapter-title'>Translasyon fonksiyonu anlatımı</span>"
    ]
  },
  {
    "objectID": "03-bilgisayarli-dusunme/06-adim-adim-kodlama-translasyon.html#fonksiyonu-biraz-daha-güzelleştirelim",
    "href": "03-bilgisayarli-dusunme/06-adim-adim-kodlama-translasyon.html#fonksiyonu-biraz-daha-güzelleştirelim",
    "title": "\n23  Translasyon fonksiyonu anlatımı\n",
    "section": "\n23.4 Fonksiyonu biraz daha güzelleştirelim",
    "text": "23.4 Fonksiyonu biraz daha güzelleştirelim\nGenel olarak kodlama yaparken şu noktalara dikkat edelim:\n\nDeğişken isimleri anlaşılır olmalı\nKodlara açıklama ekleyelim\n\n\ntranslasyon &lt;- function(dna, kodon){\n  # oncelikle bos bir amino asit iplik vektoru olusturalim\n  aa_ipligi &lt;- c()\n  \n  # kodon baslangic pozisyonlarini belirleylim\n  baslangic &lt;- seq(1,(length(dna)-2), 3)\n  \n  # her baslangic pozisyonunu tek tek alalim\n  for (i in baslangic){\n    # o baslangic pozisyonuna gore kodon secelim\n    secilen_kodon &lt;- dna[i:(i+2)]\n    # kodon vektorunu metine donusturelim\n    secilen_kodon &lt;- paste(secilen_kodon, collapse = \"\")\n    # o kodona karsilik gelen amino asidi alalım\n    aa &lt;- kodon[kodon$Codon == secilen_kodon, 2]\n    # bu amino asidi, amino asit iplik vektorune ekleyelim\n    aa_ipligi &lt;- c(aa_ipligi, aa)\n    # her adimi yazalim\n    #cat(\"Secilen kodon:\", secilen_kodon, \"kodona karsilik gelen amino asit:\", aa, \"\\n\")\n  }\n  # amino asit ipligini geri dondurelim\n  return(aa_ipligi)\n}\n\nFonksiyonu tekrar çalıştıralım:\n\nfasta &lt;- read.fasta(file = \"https://raw.githubusercontent.com/emrahkirdok/ybva/main/03-bilgisayarli-dusunme/data/example.fna\", forceDNAtolower = FALSE)\n\nkodon &lt;- read.table(file = \"https://raw.githubusercontent.com/emrahkirdok/ybva/main/03-bilgisayarli-dusunme/data/codon.txt\", sep = \"\\t\", header = TRUE)\n\ntranslasyon(dna = fasta[[2]], kodon = kodon)\n\n  [1] \"Met\" \"Val\" \"Leu\" \"Ser\" \"Pro\" \"Ala\" \"Asp\" \"Lys\" \"Thr\" \"Asn\" \"Val\" \"Lys\"\n [13] \"Ala\" \"Ala\" \"Trp\" \"Gly\" \"Lys\" \"Val\" \"Gly\" \"Ala\" \"His\" \"Ala\" \"Gly\" \"Glu\"\n [25] \"Tyr\" \"Gly\" \"Ala\" \"Glu\" \"Ala\" \"Leu\" \"Glu\" \"Arg\" \"Met\" \"Phe\" \"Leu\" \"Ser\"\n [37] \"Phe\" \"Pro\" \"Thr\" \"Thr\" \"Lys\" \"Thr\" \"Tyr\" \"Phe\" \"Pro\" \"His\" \"Phe\" \"Asp\"\n [49] \"Leu\" \"Ser\" \"His\" \"Gly\" \"Ser\" \"Ala\" \"Gln\" \"Val\" \"Lys\" \"Gly\" \"His\" \"Gly\"\n [61] \"Lys\" \"Lys\" \"Val\" \"Ala\" \"Asp\" \"Ala\" \"Leu\" \"Thr\" \"Asn\" \"Ala\" \"Val\" \"Ala\"\n [73] \"His\" \"Val\" \"Asp\" \"Asp\" \"Met\" \"Pro\" \"Asn\" \"Ala\" \"Leu\" \"Ser\" \"Ala\" \"Leu\"\n [85] \"Ser\" \"Asp\" \"Leu\" \"His\" \"Ala\" \"His\" \"Lys\" \"Leu\" \"Arg\" \"Val\" \"Asp\" \"Pro\"\n [97] \"Val\" \"Asn\" \"Phe\" \"Lys\" \"Leu\" \"Leu\" \"Ser\" \"His\" \"Cys\" \"Leu\" \"Leu\" \"Val\"\n[109] \"Thr\" \"Leu\" \"Ala\" \"Ala\" \"His\" \"Leu\" \"Pro\" \"Ala\" \"Glu\" \"Phe\" \"Thr\" \"Pro\"\n[121] \"Ala\" \"Val\" \"His\" \"Ala\" \"Ser\" \"Leu\" \"Asp\" \"Lys\" \"Phe\" \"Leu\" \"Ala\" \"Ser\"\n[133] \"Val\" \"Ser\" \"Thr\" \"Val\" \"Leu\" \"Thr\" \"Ser\" \"Lys\" \"Tyr\" \"Arg\" \"Stp\"",
    "crumbs": [
      "Bilgisayarlı Düşünme",
      "<span class='chapter-number'>23</span>  <span class='chapter-title'>Translasyon fonksiyonu anlatımı</span>"
    ]
  },
  {
    "objectID": "04-pratikler/01-veri-analizi/01-vektorler.html",
    "href": "04-pratikler/01-veri-analizi/01-vektorler.html",
    "title": "24  Vektörler Ödevi",
    "section": "",
    "text": "24.1 Soru 1\nBu tabloyu kullanarak üç farklı aşağıdaki isimlere sahip üç farklı vektör oluşturunuz:\n# cevabinizi buraya yaziniz",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Vektörler Ödevi</span>"
    ]
  },
  {
    "objectID": "04-pratikler/01-veri-analizi/01-vektorler.html#soru-1",
    "href": "04-pratikler/01-veri-analizi/01-vektorler.html#soru-1",
    "title": "24  Vektörler Ödevi",
    "section": "",
    "text": "sepal_uzunlugu\npetal_uzunlugu\ntur",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Vektörler Ödevi</span>"
    ]
  },
  {
    "objectID": "04-pratikler/01-veri-analizi/01-vektorler.html#soru-2",
    "href": "04-pratikler/01-veri-analizi/01-vektorler.html#soru-2",
    "title": "24  Vektörler Ödevi",
    "section": "\n24.2 Soru 2",
    "text": "24.2 Soru 2\nOluşturduğunuz bu üç vektörün uzunluklarını geri döndüren kodları yazınız:\n\n# cevabinizi buraya yaziniz",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Vektörler Ödevi</span>"
    ]
  },
  {
    "objectID": "04-pratikler/01-veri-analizi/01-vektorler.html#soru-3",
    "href": "04-pratikler/01-veri-analizi/01-vektorler.html#soru-3",
    "title": "24  Vektörler Ödevi",
    "section": "\n24.3 Soru 3",
    "text": "24.3 Soru 3\nSepal uzunluğu vektörü içerisindeki 3. elemana erişen kodu yazınız:\n\n# cevabinizi buraya yaziniz",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Vektörler Ödevi</span>"
    ]
  },
  {
    "objectID": "04-pratikler/01-veri-analizi/01-vektorler.html#soru-4",
    "href": "04-pratikler/01-veri-analizi/01-vektorler.html#soru-4",
    "title": "24  Vektörler Ödevi",
    "section": "\n24.4 Soru 4",
    "text": "24.4 Soru 4\nPetal uzunluğu vektöründe, 3 ve 7. elemanlar arasında bulunan değerleri geri döndüren kodu yazınız:\n\n# cevabinizi buraya yaziniz",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Vektörler Ödevi</span>"
    ]
  },
  {
    "objectID": "04-pratikler/01-veri-analizi/01-vektorler.html#soru-5",
    "href": "04-pratikler/01-veri-analizi/01-vektorler.html#soru-5",
    "title": "24  Vektörler Ödevi",
    "section": "\n24.5 Soru 5",
    "text": "24.5 Soru 5\nPetal uzunluğu vektörünü kullanarak petal uzunlukları 3.3’den büyük olan değerleri geri döndürebilir misiniz?\n\n# cevabinizi buraya yaziniz",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Vektörler Ödevi</span>"
    ]
  },
  {
    "objectID": "04-pratikler/01-veri-analizi/01-vektorler.html#soru-6",
    "href": "04-pratikler/01-veri-analizi/01-vektorler.html#soru-6",
    "title": "24  Vektörler Ödevi",
    "section": "\n24.6 Soru 6",
    "text": "24.6 Soru 6\nSepal uzunluğu verilerini kullanarak sepal uzunlukları 5.2’den büyük olan türleri geri döndüren kodu yazabilir misiniz?\n\n# cevabinizi buraya yaziniz",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Vektörler Ödevi</span>"
    ]
  },
  {
    "objectID": "04-pratikler/01-veri-analizi/02-pratik.html",
    "href": "04-pratikler/01-veri-analizi/02-pratik.html",
    "title": "\n25  Pratik 2023-04-06\n",
    "section": "",
    "text": "25.1 Vektörler\nBu tablodaki bilgileri kullanarak aşağıda verilen isimlerde dört farklı vektör oluşturunuz. Cinsiyet vektörü faktör vektörü olmalıdır.\n# kodlarınızı asagiya yazınız (# isaretini kullanmadan)\nTür vekktöründeki 5. elemanı geri döndüren kodu yazınız:\n# kodlarınızı asagiya yazınız (# isaretini kullanmadan)\nGaga uzunluğu vektörünü kullanarak gaga uzunluğu 50 mm’den büyük olan değerleri geri döndüren kodu yazınız:\n# kodlarınızı asagiya yazınız (# isaretini kullanmadan)\nKanat uzunluğu vektörünü kullanarak kanat uzunlukları 192 mm’de büyük olan değerleri geri döndüren kodu yazınız:\n# kodlarınızı asagiya yazınız (# isaretini kullanmadan)\nKanat uzunluğu vektörünü kullanarak kanat uzunlukları 192 mm’de büyük olan türleri geri döndüren kodu yazınız. Dikkat edin, bu sefer tür ismi geri döndürmeniz gerekiyor:\n# kodlarınızı asagiya yazınız (# isaretini kullanmadan)",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>Pratik 2023-04-06</span>"
    ]
  },
  {
    "objectID": "04-pratikler/01-veri-analizi/02-pratik.html#vektörler",
    "href": "04-pratikler/01-veri-analizi/02-pratik.html#vektörler",
    "title": "\n25  Pratik 2023-04-06\n",
    "section": "",
    "text": "tur\ngaga_uzunlugu\nkanat_uzunlugu\ncinsiyet",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>Pratik 2023-04-06</span>"
    ]
  },
  {
    "objectID": "04-pratikler/01-veri-analizi/02-pratik.html#matrisler",
    "href": "04-pratikler/01-veri-analizi/02-pratik.html#matrisler",
    "title": "\n25  Pratik 2023-04-06\n",
    "section": "\n25.2 Matrisler",
    "text": "25.2 Matrisler\nKanat uzunluğu vektörünü kullanarak 5 satır ve 2 sütundan oluşan bir matris elde ediniz. Oluşturacağınız matrisin ismi ornek_matris olsun:\nKanat uzunluğu vektörünü kullanarak kanat uzunlukları 192 mm’de büyük olan değerleri geri döndüren kodu yazınız:\n\n# kodlarınızı asagiya yazınız (# isaretini kullanmadan)\n\nOluşturduğunuz matrisin sütun ve satır isimlerini aşağıdaki gibi değiştiriniz.\nSütun isimleri:\n\nA\nB\n\nSatır isimleri:\n\nX\nY\nZ\nT\nU",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>Pratik 2023-04-06</span>"
    ]
  },
  {
    "objectID": "04-pratikler/01-veri-analizi/02-pratik.html#veri-çerçeveleri",
    "href": "04-pratikler/01-veri-analizi/02-pratik.html#veri-çerçeveleri",
    "title": "\n25  Pratik 2023-04-06\n",
    "section": "\n25.3 Veri çerçeveleri",
    "text": "25.3 Veri çerçeveleri\nDökümanın başında verilen tabloyu kullanarak bir veri çerçevesi elde ediniz. Elde ettiğiniz veri çerçevesinin ismi penguenler olsun. Veri çerçevesinin sütun isimleri ise aşağıdaki gibi olsun:\n\ntur\ngaga_uzunlugu\nkanat_uzunlugu\ncinsiyet\n\n\n# kodlarınızı asagiya yazınız (# isaretini kullanmadan)\n\nOluştrduğunuz veri çerçevesinin satır ve sütun sayılarını geri döndüren kodu yazınız:\n\n# kodlarınızı asagiya yazınız (# isaretini kullanmadan)\n\nSadece beşinci satırı geri döndüren kodu yazınız:\n\n# kodlarınızı asagiya yazınız (# isaretini kullanmadan)\n\nSadece ikinci sütunu geri döndüren kodu yazınız:\n\n# kodlarınızı asagiya yazınız (# isaretini kullanmadan)\n\nSadece tür değerlerini içeren sütunu geri döndüren kodu yazınız:\n\n# kodlarınızı asagiya yazınız (# isaretini kullanmadan)\n\nBu veri çerçevesinde, 2 ile 4. satırlar arasındaki bütün satırları geri döndüren kodu yazınz:\n\n# kodlarınızı asagiya yazınız (# isaretini kullanmadan)\n\nBu veri çerçevesinde gaga uzunluğu 50’den büyük olan satırları geri döndürünüz:\n\n# kodlarınızı asagiya yazınız (# isaretini kullanmadan)\n\nBu veri çerçevesinde kanat uzunluğu 150’den büyük olan satırları geri döndürünüz:\n\n# kodlarınızı asagiya yazınız (# isaretini kullanmadan)",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>Pratik 2023-04-06</span>"
    ]
  },
  {
    "objectID": "04-pratikler/01-veri-analizi/02-pratik.html#veri-okuma",
    "href": "04-pratikler/01-veri-analizi/02-pratik.html#veri-okuma",
    "title": "\n25  Pratik 2023-04-06\n",
    "section": "\n25.4 Veri okuma",
    "text": "25.4 Veri okuma\nŞu bağlantıda verilen dosyayı, derslerde gördüğümüz tekniklerden bir tanesini kullanarak okuyunuz (bilgisyara kaydediniz veya doğrudan internet üzerinden okuyunuz).\nDosyayı okurken aşağıdaki noktalara dikkat ediniz:\n\nAyraç karakteri olarak ; kullanılmıştır.\nİlk satır, sütun isimleri olarak tanımlanmıştır.\n\nOkuduğunuz verinin ismi sinav olsun:\n\n# kodlarınızı asagiya yazınız (# isaretini kullanmadan)\n\nOkuduğunuz veri çerçevesinin boyutlarını geri döndüren kodu yazınız:\n\n# kodlarınızı asagiya yazınız (# isaretini kullanmadan)",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>Pratik 2023-04-06</span>"
    ]
  },
  {
    "objectID": "04-pratikler/01-veri-analizi/04-vize-pratik.html",
    "href": "04-pratikler/01-veri-analizi/04-vize-pratik.html",
    "title": "\n26  pratik-2023-04-19\n",
    "section": "",
    "text": "Aşağıda, hayali bir sınıfa ait bir tablo bulunmaktadır. Bu tabloyu kullanarak aşağıdaki isimleri kullanarak beş farklı vektör oluşturunuz:\n\nisimler\nboy\nkilo\ncinsiyet\n\nUnutmayın, cinsiyet vektörü faktör olmalı!\n\n\nİsimler\nBoy\nKilo\nYaş\nCinsiyet\n\n\n\nAslı\n1.76\n67\n35\nm\n\n\nSibel\n1.72\n66\n66\nf\n\n\nTarkan\n1.65\n65\n26\nm\n\n\nSezen\n1.62\n80\n32\nm\n\n\nAli\n1.94\n59\n58\nm\n\n\nBarış\n1.94\n53\n34\nf\n\n\nŞebnem\n1.75\n70\n23\nm\n\n\nFunda\n2.00\n75\n24\nm\n\n\nMurat\n1.75\n51\n64\nm\n\n\nArda\n1.70\n73\n18\nm\n\n\n\n\n# cevabinizi asagiya yaziniz\n\nisimler &lt;- c(\"Aslı\", \"Sibel\" ,\"Tarkan\" ,\"Sezen\" ,\"Ali\" ,\"Barış\" ,\"Şebnem\" ,\"Funda\" ,\"Murat\" ,\"Arda\")\nboy &lt;- c(1.76,1.72,1.65,1.62,1.94,1.94,1.75,2.00,1.75,1.70)\nkilo &lt;- c(67,66,65,80,59,53,70,75,51,73)\nyas &lt;- c(35,66,26,32,58,34,23,24,64,18)\ncinsiyet &lt;- factor(c(\"m\",\"f\",\"m\",\"m\",\"m\",\"f\",\"m\",\"m\",\"m\",\"m\"))\n\nİsimler vektöründeki 6. elemanı geri döndüren kodu yazınız:\n\n# cevabinizi asagiya yaziniz\nisimler[6]\n\n[1] \"Barış\"\n\n\nBoy vektörünü kullanarak,1.60’dan uzun olan değerleri geri döndüren kodu yazınız:\n\n# cevabinizi asagiya yaziniz\nboy[boy &gt;1.60]\n\n [1] 1.76 1.72 1.65 1.62 1.94 1.94 1.75 2.00 1.75 1.70\n\n\nYukarıda verilen verileri kullanarak isimler, boy, kilo, yas ve cinsiyet vektörlerini içeren ekip isimli bir veri çerçevesi oluşturunuz:\n\n# cevabinizi asagiya yaziniz\nekip &lt;- data.frame(isimler,cinsiyet,boy,kilo,yas)\n\n\n\n\n\n\n\nVeri çerçevesi Rmarkdown’da yazdırmayalım\n\n\n\nBazı arkadaşlar bir önceki soruya şöyle cevap vermişler. Şüphesiz bu şekilde de yapılabilir. Ancak böyle yaparsanız veriyi ekrana yazdırmış olursunuz. Bu da html dosyasında kötü bir görünüş oluşturur. Özellikle veri içeriği fazla ise:\n\n# cevabinizi asagiya yaziniz\nekip &lt;- data.frame(isimler,cinsiyet,boy,kilo,yas)\nekip\n\n\n\nOluşturduğunuz veri çerçevesinde satır ve sütunlarının sayısını geri döndüren kodu yazınız:\n\n# cevabinizi asagiya yaziniz\ndim(ekip)\n\n[1] 10  5\n\n\nBu veri çerçevesinin sütun isimlerini geri döndüren kodu yazın:\n\n# cevabinizi asagiya yaziniz\ncolnames(ekip)\n\n[1] \"isimler\"  \"cinsiyet\" \"boy\"      \"kilo\"     \"yas\"     \n\n\nİkinci satırı geri döndüren kodu yazınız:\n\n# cevabinizi asagiya yaziniz\nekip[2, ]\n\n  isimler cinsiyet  boy kilo yas\n2   Sibel        f 1.72   66  66\n\n\nBu veri çerçevesinde 3. ve 5. sütunlar arasındaki bütün sütunları geri döndüren kodu yazınız:\n\n# cevabinizi asagiya yaziniz\nekip[,3:5]\n\n    boy kilo yas\n1  1.76   67  35\n2  1.72   66  66\n3  1.65   65  26\n4  1.62   80  32\n5  1.94   59  58\n6  1.94   53  34\n7  1.75   70  23\n8  2.00   75  24\n9  1.75   51  64\n10 1.70   73  18\n\n\nBu veri çerçevesindeki kilo değerlerini geri döndüren kodu yazınız:\n\n# cevabinizi asagiya yaziniz\nekip$kilo\n\n [1] 67 66 65 80 59 53 70 75 51 73\n\n# Veya o sütunun numarası:\n\nekip[,3]\n\n [1] 1.76 1.72 1.65 1.62 1.94 1.94 1.75 2.00 1.75 1.70\n\n\nVücut kitle indeksi (vki); bir kişinin kilosunun, boyunun karesine bölümü olarak tanımlanmaktadır. Bu değeri aşağıdaki formüle göre hesaplayabilirsiniz:\n\\[\nvki = \\frac{kilo}{boy^2}\n\\] Bu formülü kullanarak bu sınıftaki herkesin vki değerini hesaplayınız ve vki isimli vektörü oluştrunuz.\n\n# cevabinizi asagiya yaziniz\nvki &lt;- ekip$kilo/ekip$boy^2\n\n\n\n\n\n\n\nVektörel işlemler\n\n\n\nBazı arkadaşlar bir önceki soruya şöyle cevap vermişler. ekip$kilo/ekip$boy^2 işlemini yaptığınızda geriye bir vektör döndürülür. Dolayısıyla c() fonksiyonunu kullanmaya gerek yok.\n\n# cevabinizi asagiya yaziniz\nvki &lt;- c(ekip$kilo/ekip$boy^2)\n\n\n\nŞimdi, ekip vektörü içerisinde vücut kitle endeksi 25in üstünde olan isimleri geri döndüren kodu yazınız:\n\n# cevabinizi asagiya yaziniz\nekip$isimler[vki &gt; 25]\n\n[1] \"Sezen\" \"Arda\" \n\n\n0luşturduğunuz vke isimli vektörü ekip veri çerçevesinde yeni bir sütun olarak ekleyiniz (sütunun ismi vke olsun) :\n\n# cevabinizi asagiya yaziniz\nekip$vki &lt;- vki\n\n\n\n\n\n\n\nVeri çerçevesinde sütun oluşturmak\n\n\n\nVeri çerçevesinde yeni bir sütun oluşturmak için doğrudan $ fonksiyonunu kullanabiliriz. Şu şekilde yapan arkadaşlar var. Yanlış değil ama çok da işlevsel değil.\n\n# cevabinizi asagiya yaziniz\nekip &lt;- data.frame(isimler, cinsiyet, boy, kilo, yas, vki)\n\n\n\nEkipteki 25 yaş altı kişilerin isimlerini kapsayan gencler isimli yeni bir vektör olusturnuz:\n\n# cevabinizi asagiya yaziniz\ngencler &lt;- ekip$isimler[ekip$yas &lt; 25]\n\nEkipteki 1.80 üzerindeki kişilerin isimlerini kapsayan uzunlar isimli bir vektör oluşturunuz:\n\n# cevabinizi asagiya yaziniz\nuzunlar &lt;- ekip$isimler[ekip$boy &gt; 1.80]\n\nEkte verilen gumus_agaci.txt isimli dosyayı okuyunuz ve gumus_agaci ismini kullanarak R içerisine aktarınız. Verinin ilk satırı sütun isimleri olarak belirlenmiştir. Sütunlar tab (\\t) karakteri ile ayrılmıştır.\n\n# cevabinizi asagiya yaziniz\ngumus_agaci &lt;- read.table(file = \"https://raw.githubusercontent.com/emrahkirdok/ybva/main/data/gumus_agaci.txt\", header = TRUE, sep =  \"\\t\")\n\n\n\n\n\n\n\nDosya okurken farklı yöntemlerin kullanılması\n\n\n\nOkumak istediğim gumus.agaci.txt isimli dosya zaten internet sitesinde olduğu için, doğrudan bu dosyanın adresini kullandım. Ancak siz bu dosyayı indirdiğiniz için bilgisyarınızdan okumanız gereklidir. Yani dosyanın nerede olduğu önemli.\n\n# cevabinizi asagiya yaziniz\ngumus_agaci &lt;- read.table(file = \"gumus_agaci.txt\", header = TRUE, sep =  \"\\t\")\n\n\n\nBu veri çerçevesinin boyutlarını geri döndüren kodu yazınız:\n\n# cevabinizi asagiya yaziniz\ndim(gumus_agaci)\n\n[1] 1534    8\n\n\nBu veri çerçevesinin sütun isimlerini geri döndüren kodu yazınız:\n\n# cevabinizi asagiya yaziniz\ncolnames(gumus_agaci)\n\n[1] \"Inokulasyondan_sonra_gecen_sure\" \"Kulturleme_kosulu\"              \n[3] \"Patojen\"                         \"Bitki_numarasi\"                 \n[5] \"Tekil_bitki_numarasi\"            \"Gozlem\"                         \n[7] \"Fotosentez\"                      \"Iletkenlik\"",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>26</span>  <span class='chapter-title'>pratik-2023-04-19</span>"
    ]
  },
  {
    "objectID": "04-pratikler/02-bilgisayarli-dusunme/01-DNA-transkripsiyon.html",
    "href": "04-pratikler/02-bilgisayarli-dusunme/01-DNA-transkripsiyon.html",
    "title": "27  DNA üzerinde işlemler",
    "section": "",
    "text": "27.1 Soru 1\nBu DNA dizisini, RNA formuna dönüştüren kodu yazınız.\nOluşturacağınız kod, rna isminde bir vektör geri döndürmeli, ve bu vektör içerisinde DNA dizisine karşılık gelen RNA dizisi bulunmalıdır.",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>27</span>  <span class='chapter-title'>DNA üzerinde işlemler</span>"
    ]
  },
  {
    "objectID": "04-pratikler/02-bilgisayarli-dusunme/01-DNA-transkripsiyon.html#soru-2",
    "href": "04-pratikler/02-bilgisayarli-dusunme/01-DNA-transkripsiyon.html#soru-2",
    "title": "27  DNA üzerinde işlemler",
    "section": "\n27.2 Soru 2",
    "text": "27.2 Soru 2\nBu DNA dizisinin tamamlayıcı ipliğini oluşturan kodu yazınız.\nOluşturacağınız kod, complementary isminde bir vektör geri döndürmeli ve bu vektör içerisinde DNA dizisine karşılık gelen tamamlayıcı iplik DNA dizisi bulunmalıdır.",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>27</span>  <span class='chapter-title'>DNA üzerinde işlemler</span>"
    ]
  },
  {
    "objectID": "04-pratikler/02-bilgisayarli-dusunme/03-vize-sinavi-cevaplari.html",
    "href": "04-pratikler/02-bilgisayarli-dusunme/03-vize-sinavi-cevaplari.html",
    "title": "\n28  Bilgisayarlı Düşünme Vize\n",
    "section": "",
    "text": "28.1 Soru 1\nAşağıda verilen fonksiyonu dikkatlice inceleyeiniz:\nBu fonksiyon uyarınca, f(x = 5)’yı çalıştırınca elde edeceğiniz değeri, aşağıdaki kod bloğuna yazınız.",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>28</span>  <span class='chapter-title'>Bilgisayarlı Düşünme Vize</span>"
    ]
  },
  {
    "objectID": "04-pratikler/02-bilgisayarli-dusunme/03-vize-sinavi-cevaplari.html#soru-1",
    "href": "04-pratikler/02-bilgisayarli-dusunme/03-vize-sinavi-cevaplari.html#soru-1",
    "title": "\n28  Bilgisayarlı Düşünme Vize\n",
    "section": "",
    "text": "f &lt;- function(x){\n  if (x &gt; 5){\n    return(x^2)\n  } else {\n  return(x)\n}\n}",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>28</span>  <span class='chapter-title'>Bilgisayarlı Düşünme Vize</span>"
    ]
  },
  {
    "objectID": "04-pratikler/02-bilgisayarli-dusunme/03-vize-sinavi-cevaplari.html#cevap-1",
    "href": "04-pratikler/02-bilgisayarli-dusunme/03-vize-sinavi-cevaplari.html#cevap-1",
    "title": "\n28  Bilgisayarlı Düşünme Vize\n",
    "section": "\n28.2 Cevap 1",
    "text": "28.2 Cevap 1\nBu fonksiyonu çalıştırınca:\nşu değeri: 5\nelde ederiz.",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>28</span>  <span class='chapter-title'>Bilgisayarlı Düşünme Vize</span>"
    ]
  },
  {
    "objectID": "04-pratikler/02-bilgisayarli-dusunme/03-vize-sinavi-cevaplari.html#soru-2",
    "href": "04-pratikler/02-bilgisayarli-dusunme/03-vize-sinavi-cevaplari.html#soru-2",
    "title": "\n28  Bilgisayarlı Düşünme Vize\n",
    "section": "\n28.3 Soru 2",
    "text": "28.3 Soru 2\nAşağıda verilen formülü dikkatlice inceleyiniz ve aşağıdaki iki soruyu çözünüz.\n\\[\ny = \\frac{2x+5}{12}\n\\]\n\n28.3.1 Soru 2.1\nBu işlemi gerçekleştirecek y isimli bir fonksiyon yazınız.\n\n28.3.2 Cevap 2.1\n\n# cevabınızı asagiya yaziniz (# isaretini kullanmadan)\n\ny &lt;- function(x){\n  return((2*x+5)/12)\n}\n\n\n28.3.3 Soru 2.2\nBu fonksiyonu kullanarak y(x = 12) işleminin sonucunu geri döndürünüz:\n\n28.3.4 Cevap 2.2\n\n# cevabınızı asagiya yaziniz (# isaretini kullanmadan)\ny(x = 12)\n\n[1] 2.416667",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>28</span>  <span class='chapter-title'>Bilgisayarlı Düşünme Vize</span>"
    ]
  },
  {
    "objectID": "04-pratikler/02-bilgisayarli-dusunme/03-vize-sinavi-cevaplari.html#soru-3",
    "href": "04-pratikler/02-bilgisayarli-dusunme/03-vize-sinavi-cevaplari.html#soru-3",
    "title": "\n28  Bilgisayarlı Düşünme Vize\n",
    "section": "\n28.4 Soru 3",
    "text": "28.4 Soru 3\nBir amino asit ipliğinin toplam kütlesi, o ipliği oluşturan amino asitlerin ortalama moleküler ağırlıklarının toplamıdır. Örnek olarak, elimizde A-R-N-E dizilimine sahip bir amino asit ipliği olsun. Bu ipliğin toplam kütlesini bulmak için; A, R, N, ve E amino asitlerinin ortalama molekül ağırlıklarını toplamamız gerekir.\n\n\nAmino Asit\nKod\nOrtalama Kütle\n\n\n\nAlanin\nA\n129.11398\n\n\nArjinin\nR\n156.18568\n\n\nAsparajin\nN\n114.10264\n\n\nGlutamik Asit\nE\n129.11398\n\n\n\nBu tablo uyarınca aşağıdaki hesaplamayı yapmalıyız:\n\n129.11398 + 156.18568 + 114.10264 + 129.11398\n\n[1] 528.5163\n\n\nEkte verilen amino-acid-mass.txt isimli dosya, bütün amino asitlerin sahip oldukları molekül ağırlıklarını içermektedir.\nBu bilgilere göre aşağıdaki soruları çözünüz\n\n28.4.1 Soru 3.1\nEkte verilen amino-acid-mass.txt dosyasını okuyarak bir amino asit ipliğinin toplam kütlesini hesaplayan, protein_kutle_hesapla isimli bir fonksiyon yazınız.\n\n\n\n\n\n\nİpucu\n\n\n\nOluşturacağınız fonksiyonda for döngüsünü kullanınız.\n\n\n\n28.4.2 Cevap 3.1\nBu sorunun tek bir çözüm yolu yok. Ancak benim aklımdaki yol aşağıda. Daha ileri teknikleri kullanan arkadaşalr da var. O teknikleri anlatmamıştım, demek ki araştırarak öğrenmişler.\nBu soruyu cevaplamak için, öncelikle amino-acid-mass.txt isimli dosyayı yüklemeliyiz. Amino asitlerin kütleleri bu tablo içindedir.\n\n# cevabinizi asagiya yaziniz (# isaretini kullanmadan)\n\n# once kutle tablosu dosyasini yukleyelim:\n\nkutle_tablosu &lt;- read.table(\"https://raw.githubusercontent.com/emrahkirdok/ybva/main/03-bilgisayarli-dusunme/data/amino-acid-mass.txt\", sep =\"\\t\", header=T)\n\n# kutle tablosunun ilk satirlarini inceleyelim:\n\nhead(kutle_tablosu)\n\n     amino_asit kod molekul_agirligi\n1       alanine   A          71.0779\n2      arginine   R         156.1857\n3    asparagine   N         114.1026\n4 aspartic acid   D         115.0874\n5      cysteine   C         103.1429\n6 glutamic acid   E         129.1140\n\n\nYani, bir amino asitin kütlesini öğrenmek isterse bu dosyaydan faydalanabiliriz. Mesela, Asparajin (N) amino asitinin kütlesini şu şekilde öğrenebiliriz:\n\naa_agirlik &lt;- kutle_tablosu$molekul_agirligi[kutle_tablosu$kod == \"N\"]\naa_agirlik\n\n[1] 114.1026\n\n\nŞimdi, fonkisyonumuzu yazabiliriz:\n\n# once fonksiyonu olusturmak icin gerekli komutlari yazalim. Fonksiyonun, iki tane girdisi olacaktir. \n# birinci girdi, amino asit dizisi\n# ikinci girdi, amino asitlerin kutlelerinin oldugu kutle kutle_tablosu\n# ancak bu kutle tablosunun mutlaka daha once yuklenmis olması gereklidir\n\nprotein_kutle_hesapla &lt;- function(iplik, kutle_tablosu){\n  # oncelikle bir agirlik degeri olsturalim\n  agirlik &lt;- 0\n  # iplik icerisindeki her amino asit icin bir dongu olusturmamiz gereklidir\n\n  for (aa in iplik){\n      # once o amino asite karsilik gelen agirligi alalim\n      # buradaki satiri, farkli sekillerde yazabilirsiniz. \n      aa_agirlik &lt;- kutle_tablosu$molekul_agirligi[kutle_tablosu$kod == aa]\n      # buradaki satiri, farkli sekillerde yazabilirsiniz. \n      # aa_agirlik &lt;- molekul_agirligi[kutle_tablosu$kod == aa, 3]\n\n      # aa_agirlik &lt;- subset(kutle_tablosu, subset = kod == aa, select = molekul_agirligi)\n      cat (\"Secilen amino asit ve agirligi\", aa, aa_agirlik, \"\\n\")\n      # daha sonra, olusturdugumuz agirlik degerine, bu amino asitin kutlesini ekleyelim\n      agirlik &lt;- agirlik + aa_agirlik\n  }\n  # en son olarak agirlik degerini dondurelim\n  return(agirlik)\n}\n\n\n28.4.3 Soru 3.2\nDaha sonra yazdığınız fonksiyonu kullanarak, aşağıdaki protein ipliğinin kütlesini hesaplayınız:\n\nprotein_ipligi &lt;- c(\"O\", \"T\", \"Q\", \"E\", \"G\", \"I\", \"W\")\n\nFonksiyonun uygulamasını ise aşağıdaki kod bloğuna yazınız:\n\n28.4.4 Cevap 3.2\n\n# cevabınızı asagiya yaziniz (# isaretini kullanmadan)\n# oncelikle kutle tablosunu yukledigimizden emin olalim\n# fonksiyona, kutle tablosunu vermemiz gerekli\n# o yuzden oncelikle kutle tablosunu yuklemeliyiz\n\nkutle_tablosu &lt;- read.table(\"https://raw.githubusercontent.com/emrahkirdok/ybva/main/03-bilgisayarli-dusunme/data/amino-acid-mass.txt\", sep =\"\\t\", header=T)\n\nprotein_kutle_hesapla(iplik = protein_ipligi, kutle_tablosu = kutle_tablosu)\n\nSecilen amino asit ve agirligi O 237.2982 \nSecilen amino asit ve agirligi T 101.1039 \nSecilen amino asit ve agirligi Q 128.1292 \nSecilen amino asit ve agirligi E 129.114 \nSecilen amino asit ve agirligi G 57.05132 \nSecilen amino asit ve agirligi I 113.1576 \nSecilen amino asit ve agirligi W 186.2099 \n\n\n[1] 952.0641",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>28</span>  <span class='chapter-title'>Bilgisayarlı Düşünme Vize</span>"
    ]
  },
  {
    "objectID": "04-pratikler/02-bilgisayarli-dusunme/03-vize-sinavi-cevaplari.html#soru-4",
    "href": "04-pratikler/02-bilgisayarli-dusunme/03-vize-sinavi-cevaplari.html#soru-4",
    "title": "\n28  Bilgisayarlı Düşünme Vize\n",
    "section": "\n28.5 Soru 4",
    "text": "28.5 Soru 4\nAşağda verilen for döngüsünü, ve bu döngünün çıktısını dikkatlice inceleyiniz:\n\ndna &lt;- c(\"A\", \"T\", \"G\", \"C\", \"G\", \"C\", \"A\")\nkomplementer &lt;- c()\nfor (nukleotid in dna){\n  if (nukleotid == \"A\"){komplementer &lt;- c(komplementer, \"T\")}\n  if (nukleotid == \"T\"){komplementer &lt;- c(komplementer, \"A\")}\n  if (nukleotid == \"C\"){komplementer &lt;- c(komplementer, \"G\")}\n  if (nukleotid == \"G\"){komplementer &lt;- c(komplementer, \"C\")}\n}\n\nBu kod bloğu nasıl çalışmaktadır? Bu kod bloğunun nasıl çalıştığını satır satır çözümleyerek, kendi cümlelerinizle anlatınız (Cevabınızı, Cevap 4 isimli başlığın altına yazınız):",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>28</span>  <span class='chapter-title'>Bilgisayarlı Düşünme Vize</span>"
    ]
  },
  {
    "objectID": "04-pratikler/02-bilgisayarli-dusunme/03-vize-sinavi-cevaplari.html#cevap-4",
    "href": "04-pratikler/02-bilgisayarli-dusunme/03-vize-sinavi-cevaplari.html#cevap-4",
    "title": "\n28  Bilgisayarlı Düşünme Vize\n",
    "section": "\n28.6 Cevap 4",
    "text": "28.6 Cevap 4\n\nİlk olarak dna isminde, yedi tane nükleotid içeren bir vektör tanımlanır\n\nkomplementer isminde boş bir vektör tanımlanır\n\ndna vektörü içerisindeki her elemanı, tek tek nukleotid değişkeni içerisine aktaran bir for döngüsü ifade edilmiştir\nElde edilen her nukleotid için dört farklı koşul çalıştırlır:\n\nEğer nükleotid A ise, komplementer vektörü içerisine T eklenir\nEğer nükleotid T ise, komplementer vektörü içerisine A eklenir\nEğer nükleotid C ise, komplementer vektörü içerisine G eklenir\nEğer nükleotid G ise, komplementer vektörü içerisine C eklenir\n\n\n\n\n\n\n\n\n\nİpucu\n\n\n\nBu soruda istediğim şey, verilen kod bloğundaki her kodun ne işe yaradığını açlıklamanız. Aşağıdaki kodu inceleyelim:\n\nveri &lt;- data.frame(bitki = c(\"setosa\", \"versicolor\"), \n                   petal_uzunlugu = c(1.4, 2.3))\n\nAçıklaması:\nBu kod bloğundaki birinci satır veri isminde bir veri çerçevesi oluşturmaktadır. Bu veri çerçevesinin içinde bitki ve petal uzunluğu isminde iki farklı sütun bulunmaktadır.",
    "crumbs": [
      "Pratikler - Ödevler",
      "<span class='chapter-number'>28</span>  <span class='chapter-title'>Bilgisayarlı Düşünme Vize</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "Kaynakça",
    "section": "",
    "text": "Knapp, Michael, and Michael Hofreiter. 2010. “Next\nGeneration Sequencing of Ancient\nDNA: Requirements, Strategies and\nPerspectives.” Genes 1 (2): 227–43. https://doi.org/10.3390/genes1020227.\n\n\nLu, Steven L., Jennifer AND Salzberg. 2020. “SkewIT: The Skew\nIndex Test for Large-Scale GC Skew Analysis of Bacterial\nGenomes.” PLOS Computational Biology 16 (12): 1–16. https://doi.org/10.1371/journal.pcbi.1008439.\n\n\nMohammadi-Kambs, Mina, Kathrin Hölz, Mark M. Somoza, and Albrecht Ott.\n2017. “Hamming Distance as a Concept in DNA Molecular\nRecognition.” ACS Omega 2 (4): 1302–8. https://doi.org/10.1021/acsomega.7b00053.\n\n\nPopper, Karl R. 1984. Bilimsel Araştırmanın\nMantığı. 8th ed. Yapı Kredi Yayınları.",
    "crumbs": [
      "Kaynakça"
    ]
  },
  {
    "objectID": "10-ekler/01-sunumlar.html",
    "href": "10-ekler/01-sunumlar.html",
    "title": "Ek A — Ders sunumları",
    "section": "",
    "text": "A.1 Veri Analizi",
    "crumbs": [
      "Ekler",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Ders sunumları</span>"
    ]
  },
  {
    "objectID": "10-ekler/01-sunumlar.html#veri-analizi",
    "href": "10-ekler/01-sunumlar.html#veri-analizi",
    "title": "Ek A — Ders sunumları",
    "section": "",
    "text": "02/03/2023 Tanıtım Dersi\n09/03/2023 R Giriş\n09/03/2023 Vektörler\n16/03/2023 Matrisler\n16/03/2023 Veri çerçeveleri\n23/03/2023 Listeler",
    "crumbs": [
      "Ekler",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Ders sunumları</span>"
    ]
  },
  {
    "objectID": "10-ekler/01-sunumlar.html#bilgisayarlı-düşünme",
    "href": "10-ekler/01-sunumlar.html#bilgisayarlı-düşünme",
    "title": "Ek A — Ders sunumları",
    "section": "A.2 Bilgisayarlı Düşünme",
    "text": "A.2 Bilgisayarlı Düşünme\n\n09/03/2023 R Üzerinde Kontrol Yapıları\n16/03/2023 Fonksiyonlar",
    "crumbs": [
      "Ekler",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Ders sunumları</span>"
    ]
  }
]